KindSourceFile [0, 152), i=1, next=0
  NodeList [0, 150), i=2, next=0
    KindFunctionDeclaration [0, 150), i=3, next=0
      KindIdentifier "foo" [8, 12), i=4, next=5
      NodeList [13, 16), i=5, next=10
        KindTypeParameter [13, 14), i=6, next=8
          KindIdentifier "T" [13, 14), i=7, next=0
        KindTypeParameter [15, 16), i=8, next=0
          KindIdentifier "U" [15, 16), i=9, next=0
      KindBlock [19, 150), i=10, next=0
        NodeList [21, 124), i=11, next=0
          KindVariableStatement [21, 46), i=12, next=23
            KindVariableDeclarationList [21, 45), i=13, next=0
              NodeList [30, 45), i=14, next=0
                KindVariableDeclaration [30, 45), i=15, next=0
                  KindIdentifier "x" [30, 32), i=16, next=17
                  KindFunctionType [33, 45), i=17, next=0
                    NodeList [35, 39), i=18, next=21
                      KindParameter [35, 39), i=19, next=0
                        KindIdentifier "item" [35, 39), i=20, next=0
                    KindTypeReference [43, 45), i=21, next=0
                      KindIdentifier "T" [43, 45), i=22, next=0
          KindVariableStatement [46, 77), i=23, next=33
            KindVariableDeclarationList [46, 76), i=24, next=0
              NodeList [55, 76), i=25, next=0
                KindVariableDeclaration [55, 76), i=26, next=0
                  KindIdentifier "y" [55, 57), i=27, next=28
                  KindFunctionType [58, 76), i=28, next=0
                    NodeList [60, 64), i=29, next=32
                      KindParameter [60, 64), i=30, next=0
                        KindIdentifier "item" [60, 64), i=31, next=0
                    KindBooleanKeyword [68, 76), i=32, next=0
          KindExpressionStatement [77, 89), i=33, next=38
            KindBinaryExpression [77, 88), i=34, next=0
              KindIdentifier "x" [77, 84), i=35, next=36
              KindEqualsToken [84, 86), i=36, next=37
              KindIdentifier "y" [86, 88), i=37, next=0
          KindExpressionStatement [89, 124), i=38, next=0
            KindBinaryExpression [89, 123), i=39, next=0
              KindIdentifier "y" [89, 119), i=40, next=41
              KindEqualsToken [119, 121), i=41, next=42
              KindIdentifier "x" [121, 123), i=42, next=0
