KindSourceFile [0, 283), i=1, next=0
  NodeList [0, 244), i=2, next=0
    KindVariableStatement [0, 53), i=3, next=17
      KindVariableDeclarationList [0, 52), i=4, next=0
        NodeList [3, 52), i=5, next=0
          KindVariableDeclaration [3, 52), i=6, next=0
            KindIdentifier "x" [3, 5), i=7, next=8
            KindUnionType [6, 52), i=8, next=0
              NodeList [6, 52), i=9, next=0
                KindStringKeyword [6, 13), i=10, next=11
                KindNumberKeyword [15, 22), i=11, next=12
                KindBooleanKeyword [24, 32), i=12, next=13
                KindTypeReference [34, 41), i=13, next=15
                  KindIdentifier "RegExp" [34, 41), i=14, next=0
                KindTypeReference [43, 52), i=15, next=0
                  KindIdentifier "Function" [43, 52), i=16, next=0
    KindVariableStatement [53, 67), i=17, next=23
      KindVariableDeclarationList [53, 66), i=18, next=0
        NodeList [57, 66), i=19, next=0
          KindVariableDeclaration [57, 66), i=20, next=0
            KindIdentifier "obj" [57, 61), i=21, next=22
            KindAnyKeyword [62, 66), i=22, next=0
    KindVariableStatement [67, 86), i=23, next=29
      KindVariableDeclarationList [67, 85), i=24, next=0
        NodeList [71, 85), i=25, next=0
          KindVariableDeclaration [71, 85), i=26, next=0
            KindIdentifier "cond" [71, 76), i=27, next=28
            KindBooleanKeyword [77, 85), i=28, next=0
    KindExpressionStatement [86, 96), i=29, next=34
      KindBinaryExpression [86, 95), i=30, next=0
        KindIdentifier "x" [86, 89), i=31, next=32
        KindEqualsToken [89, 91), i=32, next=33
        KindRegularExpressionLiteral [91, 95), i=33, next=0
    KindForInStatement [96, 241), i=34, next=67
      KindVariableDeclarationList [102, 107), i=35, next=39
        NodeList [105, 107), i=36, next=0
          KindVariableDeclaration [105, 107), i=37, next=0
            KindIdentifier "y" [105, 107), i=38, next=0
      KindIdentifier "obj" [110, 114), i=39, next=40
      KindBlock [115, 241), i=40, next=0
        NodeList [117, 239), i=41, next=0
          KindExpressionStatement [117, 128), i=42, next=47
            KindBinaryExpression [117, 127), i=43, next=0
              KindIdentifier "x" [117, 123), i=44, next=45
              KindEqualsToken [123, 125), i=45, next=46
              KindIdentifier "y" [125, 127), i=46, next=0
          KindIfStatement [128, 184), i=47, next=57
            KindIdentifier "cond" [137, 141), i=48, next=49
            KindBlock [142, 184), i=49, next=0
              NodeList [144, 178), i=50, next=0
                KindExpressionStatement [144, 160), i=51, next=56
                  KindBinaryExpression [144, 159), i=52, next=0
                    KindIdentifier "x" [144, 154), i=53, next=54
                    KindEqualsToken [154, 156), i=54, next=55
                    KindNumericLiteral [156, 159), i=55, next=0
                KindContinueStatement [160, 178), i=56, next=0
          KindIfStatement [184, 239), i=57, next=0
            KindIdentifier "cond" [193, 197), i=58, next=59
            KindBlock [198, 239), i=59, next=0
              NodeList [200, 233), i=60, next=0
                KindExpressionStatement [200, 218), i=61, next=66
                  KindBinaryExpression [200, 217), i=62, next=0
                    KindIdentifier "x" [200, 210), i=63, next=64
                    KindEqualsToken [210, 212), i=64, next=65
                    KindTrueKeyword [212, 217), i=65, next=0
                KindBreakStatement [218, 233), i=66, next=0
    KindExpressionStatement [241, 244), i=67, next=0
      KindIdentifier "x" [241, 243), i=68, next=0
