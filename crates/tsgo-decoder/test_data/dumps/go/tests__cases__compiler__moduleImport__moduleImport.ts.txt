KindSourceFile [0, 215), i=1, next=0
  NodeList [0, 215), i=2, next=0
    KindModuleDeclaration [0, 107), i=3, next=47
      KindIdentifier "A" [6, 8), i=4, next=5
      KindModuleDeclaration [9, 107), i=5, next=0
        NodeList [9, 9), i=6, next=8
          KindExportKeyword [9, 9), i=7, next=0
        KindIdentifier "B" [9, 10), i=8, next=9
        KindModuleDeclaration [11, 107), i=9, next=0
          NodeList [11, 11), i=10, next=12
            KindExportKeyword [11, 11), i=11, next=0
          KindIdentifier "C" [11, 12), i=12, next=13
          KindModuleBlock [12, 107), i=13, next=0
            NodeList [14, 104), i=14, next=0
              KindImportEqualsDeclaration [14, 36), i=15, next=22
                KindIdentifier "XYZ" [23, 27), i=16, next=17
                KindQualifiedName [29, 35), i=17, next=0
                  KindQualifiedName [29, 33), i=18, next=21
                    KindIdentifier "X" [29, 31), i=19, next=20
                    KindIdentifier "Y" [32, 33), i=20, next=0
                  KindIdentifier "Z" [34, 35), i=21, next=0
              KindFunctionDeclaration [36, 104), i=22, next=0
                NodeList [36, 45), i=23, next=25
                  KindExportKeyword [36, 45), i=24, next=0
                KindIdentifier "ping" [54, 59), i=25, next=26
                NodeList [60, 69), i=26, next=30
                  KindParameter [60, 69), i=27, next=0
                    KindIdentifier "x" [60, 61), i=28, next=29
                    KindNumberKeyword [62, 69), i=29, next=0
                KindBlock [70, 104), i=30, next=0
                  NodeList [72, 100), i=31, next=0
                    KindIfStatement [72, 100), i=32, next=0
                      KindBinaryExpression [80, 83), i=33, next=37
                        KindIdentifier "x" [80, 81), i=34, next=35
                        KindGreaterThanToken [81, 82), i=35, next=36
                        KindNumericLiteral [82, 83), i=36, next=0
                      KindExpressionStatement [84, 100), i=37, next=0
                        KindCallExpression [84, 99), i=38, next=0
                          KindPropertyAccessExpression [84, 93), i=39, next=42
                            KindIdentifier "XYZ" [84, 88), i=40, next=41
                            KindIdentifier "pong" [89, 93), i=41, next=0
                          NodeList [95, 98), i=42, next=0
                            KindBinaryExpression [95, 98), i=43, next=0
                              KindIdentifier "x" [95, 96), i=44, next=45
                              KindMinusToken [96, 97), i=45, next=46
                              KindNumericLiteral [97, 98), i=46, next=0
    KindModuleDeclaration [107, 215), i=47, next=0
      KindIdentifier "X" [117, 119), i=48, next=49
      KindModuleBlock [119, 215), i=49, next=0
        NodeList [121, 212), i=50, next=0
          KindImportEqualsDeclaration [121, 143), i=51, next=58
            KindIdentifier "ABC" [130, 134), i=52, next=53
            KindQualifiedName [136, 142), i=53, next=0
              KindQualifiedName [136, 140), i=54, next=57
                KindIdentifier "A" [136, 138), i=55, next=56
                KindIdentifier "B" [139, 140), i=56, next=0
              KindIdentifier "C" [141, 142), i=57, next=0
          KindFunctionDeclaration [143, 212), i=58, next=0
            NodeList [143, 152), i=59, next=61
              KindExportKeyword [143, 152), i=60, next=0
            KindIdentifier "pong" [161, 166), i=61, next=62
            NodeList [167, 176), i=62, next=66
              KindParameter [167, 176), i=63, next=0
                KindIdentifier "x" [167, 168), i=64, next=65
                KindNumberKeyword [169, 176), i=65, next=0
            KindBlock [177, 212), i=66, next=0
              NodeList [179, 208), i=67, next=0
                KindIfStatement [179, 208), i=68, next=0
                  KindBinaryExpression [187, 192), i=69, next=73
                    KindIdentifier "x" [187, 188), i=70, next=71
                    KindGreaterThanToken [188, 190), i=71, next=72
                    KindNumericLiteral [190, 192), i=72, next=0
                  KindExpressionStatement [193, 208), i=73, next=0
                    KindCallExpression [193, 207), i=74, next=0
                      KindPropertyAccessExpression [193, 202), i=75, next=78
                        KindIdentifier "ABC" [193, 197), i=76, next=77
                        KindIdentifier "ping" [198, 202), i=77, next=0
                      NodeList [203, 206), i=78, next=0
                        KindBinaryExpression [203, 206), i=79, next=0
                          KindIdentifier "x" [203, 204), i=80, next=81
                          KindMinusToken [204, 205), i=81, next=82
                          KindNumericLiteral [205, 206), i=82, next=0
