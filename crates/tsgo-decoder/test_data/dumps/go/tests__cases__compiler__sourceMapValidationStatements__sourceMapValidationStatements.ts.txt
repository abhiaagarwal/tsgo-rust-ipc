KindSourceFile [0, 1314), i=1, next=0
  NodeList [0, 1314), i=2, next=0
    KindFunctionDeclaration [0, 1248), i=3, next=53
      KindIdentifier "f" [8, 10), i=4, next=5
      KindBlock [12, 1248), i=5, next=0
        NodeList [14, 1245), i=6, next=0
          KindVariableStatement [14, 26), i=7, next=12
            KindVariableDeclarationList [14, 25), i=8, next=0
              NodeList [23, 25), i=9, next=0
                KindVariableDeclaration [23, 25), i=10, next=0
                  KindIdentifier "y" [23, 25), i=11, next=0
          KindVariableStatement [26, 42), i=12, next=18
            KindVariableDeclarationList [26, 41), i=13, next=0
              NodeList [35, 41), i=14, next=0
                KindVariableDeclaration [35, 41), i=15, next=0
                  KindIdentifier "x" [35, 37), i=16, next=17
                  KindNumericLiteral [39, 41), i=17, next=0
          KindForStatement [42, 119), i=18, next=42
            KindVariableDeclarationList [53, 62), i=19, next=24
              NodeList [56, 62), i=20, next=0
                KindVariableDeclaration [56, 62), i=21, next=0
                  KindIdentifier "i" [56, 58), i=22, next=23
                  KindNumericLiteral [60, 62), i=23, next=0
            KindBinaryExpression [63, 70), i=24, next=28
              KindIdentifier "i" [63, 65), i=25, next=26
              KindLessThanToken [65, 67), i=26, next=27
              KindNumericLiteral [67, 70), i=27, next=0
            KindPostfixUnaryExpression [71, 75), i=28, next=30
              KindIdentifier "i" [71, 73), i=29, next=0
            KindBlock [76, 119), i=30, next=0
              NodeList [78, 112), i=31, next=0
                KindExpressionStatement [78, 95), i=32, next=37
                  KindBinaryExpression [78, 94), i=33, next=0
                    KindIdentifier "x" [78, 89), i=34, next=35
                    KindPlusEqualsToken [89, 92), i=35, next=36
                    KindIdentifier "i" [92, 94), i=36, next=0
                KindExpressionStatement [95, 112), i=37, next=0
                  KindBinaryExpression [95, 111), i=38, next=0
                    KindIdentifier "x" [95, 106), i=39, next=40
                    KindAsteriskEqualsToken [106, 109), i=40, next=41
                    KindNumericLiteral [109, 111), i=41, next=0
          KindIfStatement [119, 208), i=42, next=64
            KindBinaryExpression [129, 135), i=43, next=47
              KindIdentifier "x" [129, 130), i=44, next=45
              KindGreaterThanToken [130, 132), i=45, next=46
              KindNumericLiteral [132, 135), i=46, next=0
            KindBlock [136, 162), i=47, next=54
              NodeList [138, 155), i=48, next=0
                KindExpressionStatement [138, 155), i=49, next=0
                  KindBinaryExpression [138, 154), i=50, next=0
                    KindIdentifier "x" [138, 149), i=51, next=52
                    KindSlashEqualsToken [149, 152), i=52, next=53
                    KindNumericLiteral [152, 154), i=53, next=0
            KindBlock [167, 208), i=54, next=0
              NodeList [169, 201), i=55, next=0
                KindExpressionStatement [169, 187), i=56, next=61
                  KindBinaryExpression [169, 186), i=57, next=0
                    KindIdentifier "x" [169, 180), i=58, next=59
                    KindPlusEqualsToken [180, 183), i=59, next=60
                    KindNumericLiteral [183, 186), i=60, next=0
                KindExpressionStatement [187, 201), i=61, next=0
                  KindPostfixUnaryExpression [187, 200), i=62, next=0
                    KindIdentifier "x" [187, 198), i=63, next=0
          KindVariableStatement [208, 266), i=64, next=74
            KindVariableDeclarationList [208, 265), i=65, next=0
              NodeList [217, 265), i=66, next=0
                KindVariableDeclaration [217, 265), i=67, next=0
                  KindIdentifier "a" [217, 219), i=68, next=69
                  KindArrayLiteralExpression [221, 265), i=69, next=0
                    NodeList [223, 258), i=70, next=0
                      KindNumericLiteral [223, 234), i=71, next=72
                      KindNumericLiteral [235, 246), i=72, next=73
                      KindNumericLiteral [247, 258), i=73, next=0
          KindVariableStatement [266, 326), i=74, next=87
            KindVariableDeclarationList [266, 325), i=75, next=0
              NodeList [275, 325), i=76, next=0
                KindVariableDeclaration [275, 325), i=77, next=0
                  KindIdentifier "obj" [275, 279), i=78, next=79
                  KindObjectLiteralExpression [281, 325), i=79, next=0
                    NodeList [283, 318), i=80, next=0
                      KindPropertyAssignment [283, 297), i=81, next=84
                        KindIdentifier "z" [283, 294), i=82, next=83
                        KindNumericLiteral [295, 297), i=83, next=0
                      KindPropertyAssignment [298, 318), i=84, next=0
                        KindIdentifier "q" [298, 309), i=85, next=86
                        KindStringLiteral "hello" [310, 318), i=86, next=0
          KindForInStatement [326, 401), i=87, next=110
            KindVariableDeclarationList [337, 342), i=88, next=92
              NodeList [340, 342), i=89, next=0
                KindVariableDeclaration [340, 342), i=90, next=0
                  KindIdentifier "j" [340, 342), i=91, next=0
            KindIdentifier "a" [345, 347), i=92, next=93
            KindBlock [348, 401), i=93, next=0
              NodeList [350, 394), i=94, next=0
                KindExpressionStatement [350, 373), i=95, next=104
                  KindBinaryExpression [350, 372), i=96, next=0
                    KindPropertyAccessExpression [350, 365), i=97, next=100
                      KindIdentifier "obj" [350, 363), i=98, next=99
                      KindIdentifier "z" [364, 365), i=99, next=0
                    KindEqualsToken [365, 367), i=100, next=101
                    KindElementAccessExpression [367, 372), i=101, next=0
                      KindIdentifier "a" [367, 369), i=102, next=103
                      KindIdentifier "j" [370, 371), i=103, next=0
                KindVariableStatement [373, 394), i=104, next=0
                  KindVariableDeclarationList [373, 393), i=105, next=0
                    NodeList [386, 393), i=106, next=0
                      KindVariableDeclaration [386, 393), i=107, next=0
                        KindIdentifier "v" [386, 388), i=108, next=109
                        KindNumericLiteral [390, 393), i=109, next=0
          KindTryStatement [401, 572), i=110, next=150
            KindBlock [410, 444), i=111, next=120
              NodeList [412, 437), i=112, next=0
                KindExpressionStatement [412, 437), i=113, next=0
                  KindBinaryExpression [412, 436), i=114, next=0
                    KindPropertyAccessExpression [412, 427), i=115, next=118
                      KindIdentifier "obj" [412, 425), i=116, next=117
                      KindIdentifier "q" [426, 427), i=117, next=0
                    KindEqualsToken [427, 429), i=118, next=119
                    KindStringLiteral "ohhh" [429, 436), i=119, next=0
            KindCatchClause [444, 572), i=120, next=0
              KindVariableDeclaration [452, 453), i=121, next=123
                KindIdentifier "e" [452, 453), i=122, next=0
              KindBlock [454, 572), i=123, next=0
                NodeList [456, 565), i=124, next=0
                  KindIfStatement [456, 565), i=125, next=0
                    KindBinaryExpression [470, 480), i=126, next=132
                      KindPropertyAccessExpression [470, 475), i=127, next=130
                        KindIdentifier "obj" [470, 473), i=128, next=129
                        KindIdentifier "z" [474, 475), i=129, next=0
                      KindLessThanToken [475, 477), i=130, next=131
                      KindNumericLiteral [477, 480), i=131, next=0
                    KindBlock [481, 519), i=132, next=141
                      NodeList [483, 508), i=133, next=0
                        KindExpressionStatement [483, 508), i=134, next=0
                          KindBinaryExpression [483, 507), i=135, next=0
                            KindPropertyAccessExpression [483, 502), i=136, next=139
                              KindIdentifier "obj" [483, 500), i=137, next=138
                              KindIdentifier "z" [501, 502), i=138, next=0
                            KindEqualsToken [502, 504), i=139, next=140
                            KindNumericLiteral [504, 507), i=140, next=0
                    KindBlock [524, 565), i=141, next=0
                      NodeList [526, 554), i=142, next=0
                        KindExpressionStatement [526, 554), i=143, next=0
                          KindBinaryExpression [526, 553), i=144, next=0
                            KindPropertyAccessExpression [526, 545), i=145, next=148
                              KindIdentifier "obj" [526, 543), i=146, next=147
                              KindIdentifier "q" [544, 545), i=147, next=0
                            KindEqualsToken [545, 547), i=148, next=149
                            KindStringLiteral "hmm" [547, 553), i=149, next=0
          KindTryStatement [572, 693), i=150, next=174
            KindBlock [581, 618), i=151, next=156
              NodeList [583, 611), i=152, next=0
                KindThrowStatement [583, 611), i=153, next=0
                  KindNewExpression [598, 610), i=154, next=0
                    KindIdentifier "Error" [602, 608), i=155, next=0
            KindCatchClause [618, 659), i=156, next=167
              KindVariableDeclaration [626, 628), i=157, next=159
                KindIdentifier "e1" [626, 628), i=158, next=0
              KindBlock [629, 659), i=159, next=0
                NodeList [631, 652), i=160, next=0
                  KindVariableStatement [631, 652), i=161, next=0
                    KindVariableDeclarationList [631, 651), i=162, next=0
                      NodeList [644, 651), i=163, next=0
                        KindVariableDeclaration [644, 651), i=164, next=0
                          KindIdentifier "b" [644, 646), i=165, next=166
                          KindIdentifier "e1" [648, 651), i=166, next=0
            KindBlock [667, 693), i=167, next=0
              NodeList [669, 686), i=168, next=0
                KindExpressionStatement [669, 686), i=169, next=0
                  KindBinaryExpression [669, 685), i=170, next=0
                    KindIdentifier "y" [669, 680), i=171, next=172
                    KindEqualsToken [680, 682), i=172, next=173
                    KindNumericLiteral [682, 685), i=173, next=0
          KindWithStatement [693, 751), i=174, next=188
            KindIdentifier "obj" [705, 708), i=175, next=176
            KindBlock [709, 751), i=176, next=0
              NodeList [711, 744), i=177, next=0
                KindExpressionStatement [711, 727), i=178, next=183
                  KindBinaryExpression [711, 726), i=179, next=0
                    KindIdentifier "i" [711, 722), i=180, next=181
                    KindEqualsToken [722, 724), i=181, next=182
                    KindNumericLiteral [724, 726), i=182, next=0
                KindExpressionStatement [727, 744), i=183, next=0
                  KindBinaryExpression [727, 743), i=184, next=0
                    KindIdentifier "z" [727, 738), i=185, next=186
                    KindEqualsToken [738, 740), i=186, next=187
                    KindNumericLiteral [740, 743), i=187, next=0
          KindSwitchStatement [751, 1015), i=188, next=227
            KindPropertyAccessExpression [765, 770), i=189, next=192
              KindIdentifier "obj" [765, 768), i=190, next=191
              KindIdentifier "z" [769, 770), i=191, next=0
            KindCaseBlock [771, 1015), i=192, next=0
              NodeList [773, 1008), i=193, next=0
                KindCaseClause [773, 843), i=194, next=203
                  KindNumericLiteral [787, 789), i=195, next=196
                  NodeList [790, 843), i=196, next=0
                    KindBlock [790, 843), i=197, next=0
                      NodeList [792, 830), i=198, next=0
                        KindExpressionStatement [792, 810), i=199, next=202
                          KindPostfixUnaryExpression [792, 809), i=200, next=0
                            KindIdentifier "x" [792, 807), i=201, next=0
                        KindBreakStatement [810, 830), i=202, next=0
                KindCaseClause [843, 913), i=203, next=212
                  KindNumericLiteral [857, 859), i=204, next=205
                  NodeList [860, 913), i=205, next=0
                    KindBlock [860, 913), i=206, next=0
                      NodeList [862, 900), i=207, next=0
                        KindExpressionStatement [862, 880), i=208, next=211
                          KindPostfixUnaryExpression [862, 879), i=209, next=0
                            KindIdentifier "x" [862, 877), i=210, next=0
                        KindBreakStatement [880, 900), i=211, next=0
                KindDefaultClause [913, 1008), i=212, next=0
                  NodeList [931, 1008), i=213, next=0
                    KindBlock [931, 1008), i=214, next=0
                      NodeList [933, 995), i=215, next=0
                        KindExpressionStatement [933, 954), i=216, next=221
                          KindBinaryExpression [933, 953), i=217, next=0
                            KindIdentifier "x" [933, 948), i=218, next=219
                            KindAsteriskEqualsToken [948, 951), i=219, next=220
                            KindNumericLiteral [951, 953), i=220, next=0
                        KindExpressionStatement [954, 975), i=221, next=226
                          KindBinaryExpression [954, 974), i=222, next=0
                            KindIdentifier "x" [954, 969), i=223, next=224
                            KindEqualsToken [969, 971), i=224, next=225
                            KindNumericLiteral [971, 974), i=225, next=0
                        KindBreakStatement [975, 995), i=226, next=0
          KindWhileStatement [1015, 1058), i=227, next=237
            KindBinaryExpression [1028, 1034), i=228, next=232
              KindIdentifier "x" [1028, 1029), i=229, next=230
              KindLessThanToken [1029, 1031), i=230, next=231
              KindNumericLiteral [1031, 1034), i=231, next=0
            KindBlock [1035, 1058), i=232, next=0
              NodeList [1037, 1051), i=233, next=0
                KindExpressionStatement [1037, 1051), i=234, next=0
                  KindPostfixUnaryExpression [1037, 1050), i=235, next=0
                    KindIdentifier "x" [1037, 1048), i=236, next=0
          KindDoStatement [1058, 1103), i=237, next=247
            KindBlock [1066, 1089), i=238, next=243
              NodeList [1068, 1082), i=239, next=0
                KindExpressionStatement [1068, 1082), i=240, next=0
                  KindPostfixUnaryExpression [1068, 1081), i=241, next=0
                    KindIdentifier "x" [1068, 1079), i=242, next=0
            KindBinaryExpression [1097, 1102), i=243, next=0
              KindIdentifier "x" [1097, 1098), i=244, next=245
              KindGreaterThanToken [1098, 1100), i=245, next=246
              KindNumericLiteral [1100, 1102), i=246, next=0
          KindExpressionStatement [1103, 1115), i=247, next=252
            KindBinaryExpression [1103, 1114), i=248, next=0
              KindIdentifier "x" [1103, 1110), i=249, next=250
              KindEqualsToken [1110, 1112), i=250, next=251
              KindIdentifier "y" [1112, 1114), i=251, next=0
          KindVariableStatement [1115, 1154), i=252, next=17
            KindVariableDeclarationList [1115, 1153), i=253, next=0
              NodeList [1124, 1153), i=254, next=0
                KindVariableDeclaration [1124, 1153), i=255, next=0
                  KindIdentifier "z" [1124, 1126), i=256, next=1
                  KindConditionalExpression [1128, 1153), i=257, next=0
                    KindParenthesizedExpression [1128, 1137), i=258, next=7
                      KindBinaryExpression [1130, 1136), i=259, next=0
                        KindIdentifier "x" [1130, 1131), i=260, next=5
                        KindEqualsEqualsToken [1131, 1134), i=261, next=6
                        KindNumericLiteral [1134, 1136), i=262, next=0
                    KindQuestionToken [1137, 1139), i=263, next=8
                    KindBinaryExpression [1139, 1145), i=264, next=12
                      KindIdentifier "x" [1139, 1141), i=265, next=10
                      KindPlusToken [1141, 1143), i=266, next=11
                      KindNumericLiteral [1143, 1145), i=267, next=0
                    KindColonToken [1145, 1147), i=268, next=13
                    KindBinaryExpression [1147, 1153), i=269, next=0
                      KindIdentifier "x" [1147, 1149), i=270, next=15
                      KindMinusToken [1149, 1151), i=271, next=16
                      KindNumericLiteral [1151, 1153), i=272, next=0
          KindExpressionStatement [1154, 1185), i=273, next=34
            KindConditionalExpression [1154, 1184), i=274, next=0
              KindParenthesizedExpression [1154, 1168), i=275, next=24
                KindBinaryExpression [1161, 1167), i=276, next=0
                  KindIdentifier "x" [1161, 1162), i=277, next=22
                  KindEqualsEqualsToken [1162, 1165), i=278, next=23
                  KindNumericLiteral [1165, 1167), i=279, next=0
              KindQuestionToken [1168, 1170), i=280, next=25
              KindBinaryExpression [1170, 1176), i=281, next=29
                KindIdentifier "x" [1170, 1172), i=282, next=27
                KindPlusToken [1172, 1174), i=283, next=28
                KindNumericLiteral [1174, 1176), i=284, next=0
              KindColonToken [1176, 1178), i=285, next=30
              KindBinaryExpression [1178, 1184), i=286, next=0
                KindIdentifier "x" [1178, 1180), i=287, next=32
                KindMinusToken [1180, 1182), i=288, next=33
                KindNumericLiteral [1182, 1184), i=289, next=0
          KindExpressionStatement [1185, 1199), i=290, next=39
            KindBinaryExpression [1185, 1198), i=291, next=0
              KindIdentifier "x" [1185, 1192), i=292, next=37
              KindEqualsEqualsEqualsToken [1192, 1196), i=293, next=38
              KindNumericLiteral [1196, 1198), i=294, next=0
          KindExpressionStatement [1199, 1216), i=295, next=47
            KindBinaryExpression [1199, 1215), i=296, next=0
              KindIdentifier "x" [1199, 1206), i=297, next=42
              KindEqualsToken [1206, 1208), i=298, next=43
              KindBinaryExpression [1208, 1215), i=299, next=0
                KindIdentifier "z" [1208, 1210), i=300, next=45
                KindEqualsToken [1210, 1212), i=301, next=46
                KindNumericLiteral [1212, 1215), i=302, next=0
          KindExpressionStatement [1216, 1232), i=303, next=52
            KindCallExpression [1216, 1231), i=304, next=0
              KindIdentifier "eval" [1216, 1226), i=305, next=50
              NodeList [1227, 1230), i=306, next=0
                KindStringLiteral "y" [1227, 1230), i=307, next=0
          KindReturnStatement [1232, 1245), i=308, next=0
    KindVariableStatement [1248, 1308), i=309, next=75
      KindVariableDeclarationList [1248, 1307), i=310, next=0
        NodeList [1253, 1307), i=311, next=0
          KindVariableDeclaration [1253, 1307), i=312, next=0
            KindIdentifier "b" [1253, 1255), i=313, next=58
            KindFunctionExpression [1257, 1307), i=314, next=0
              KindBlock [1269, 1307), i=315, next=0
                NodeList [1271, 1304), i=316, next=0
                  KindVariableStatement [1271, 1288), i=317, next=67
                    KindVariableDeclarationList [1271, 1287), i=318, next=0
                      NodeList [1280, 1287), i=319, next=0
                        KindVariableDeclaration [1280, 1287), i=320, next=0
                          KindIdentifier "x" [1280, 1282), i=321, next=66
                          KindNumericLiteral [1284, 1287), i=322, next=0
                  KindExpressionStatement [1288, 1304), i=323, next=0
                    KindBinaryExpression [1288, 1303), i=324, next=0
                      KindIdentifier "x" [1288, 1295), i=325, next=70
                      KindEqualsToken [1295, 1297), i=326, next=71
                      KindBinaryExpression [1297, 1303), i=327, next=0
                        KindIdentifier "x" [1297, 1299), i=328, next=73
                        KindPlusToken [1299, 1301), i=329, next=74
                        KindNumericLiteral [1301, 1303), i=330, next=0
    KindExpressionStatement [1308, 1314), i=331, next=0
      KindCallExpression [1308, 1313), i=332, next=0
        KindIdentifier "f" [1308, 1311), i=333, next=0
