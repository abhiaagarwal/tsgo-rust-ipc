KindSourceFile [0, 900), i=1, next=0
  NodeList [0, 898), i=2, next=0
    KindFunctionDeclaration [0, 898), i=3, next=0
      KindIdentifier "f" [8, 10), i=4, next=5
      KindBlock [12, 898), i=5, next=0
        NodeList [14, 895), i=6, next=0
          KindVariableStatement [14, 26), i=7, next=12
            KindVariableDeclarationList [14, 25), i=8, next=0
              NodeList [23, 25), i=9, next=0
                KindVariableDeclaration [23, 25), i=10, next=0
                  KindIdentifier "z" [23, 25), i=11, next=0
          KindVariableStatement [26, 41), i=12, next=18
            KindVariableDeclarationList [26, 40), i=13, next=0
              NodeList [35, 40), i=14, next=0
                KindVariableDeclaration [35, 40), i=15, next=0
                  KindIdentifier "x" [35, 37), i=16, next=17
                  KindNumericLiteral [38, 40), i=17, next=0
          KindVariableStatement [41, 55), i=18, next=24
            KindVariableDeclarationList [41, 54), i=19, next=0
              NodeList [50, 54), i=20, next=0
                KindVariableDeclaration [50, 54), i=21, next=0
                  KindIdentifier "y" [50, 52), i=22, next=23
                  KindNumericLiteral [53, 54), i=23, next=0
          KindLabeledStatement [55, 430), i=24, next=97
            KindIdentifier "L1" [55, 65), i=25, next=26
            KindForStatement [66, 430), i=26, next=0
              KindVariableDeclarationList [72, 79), i=27, next=32
                NodeList [75, 79), i=28, next=0
                  KindVariableDeclaration [75, 79), i=29, next=0
                    KindIdentifier "i" [75, 77), i=30, next=31
                    KindNumericLiteral [78, 79), i=31, next=0
              KindBinaryExpression [80, 84), i=32, next=36
                KindIdentifier "i" [80, 81), i=33, next=34
                KindLessThanToken [81, 82), i=34, next=35
                KindNumericLiteral [82, 84), i=35, next=0
              KindPostfixUnaryExpression [85, 88), i=36, next=38
                KindIdentifier "i" [85, 86), i=37, next=0
              KindBlock [89, 430), i=38, next=0
                NodeList [91, 423), i=39, next=0
                  KindIfStatement [91, 168), i=40, next=54
                    KindBinaryExpression [105, 109), i=41, next=45
                      KindIdentifier "y" [105, 106), i=42, next=43
                      KindEqualsEqualsToken [106, 108), i=43, next=44
                      KindNumericLiteral [108, 109), i=44, next=0
                    KindBlock [110, 168), i=45, next=0
                      NodeList [112, 157), i=46, next=0
                        KindContinueStatement [112, 138), i=47, next=49
                          KindIdentifier "L1" [134, 137), i=48, next=0
                        KindExpressionStatement [138, 157), i=49, next=0
                          KindBinaryExpression [138, 156), i=50, next=0
                            KindIdentifier "x" [138, 153), i=51, next=52
                            KindEqualsToken [153, 154), i=52, next=53
                            KindNumericLiteral [154, 156), i=53, next=0
                  KindIfStatement [168, 263), i=54, next=69
                    KindBinaryExpression [182, 186), i=55, next=59
                      KindIdentifier "y" [182, 183), i=56, next=57
                      KindEqualsEqualsToken [183, 185), i=57, next=58
                      KindNumericLiteral [185, 186), i=58, next=0
                    KindBlock [187, 218), i=59, next=64
                      NodeList [189, 207), i=60, next=0
                        KindExpressionStatement [189, 207), i=61, next=0
                          KindPostfixUnaryExpression [189, 206), i=62, next=0
                            KindIdentifier "y" [189, 204), i=63, next=0
                    KindBlock [232, 263), i=64, next=0
                      NodeList [234, 252), i=65, next=0
                        KindExpressionStatement [234, 252), i=66, next=0
                          KindPostfixUnaryExpression [234, 251), i=67, next=0
                            KindIdentifier "y" [234, 249), i=68, next=0
                  KindDoStatement [263, 409), i=69, next=94
                    KindBlock [275, 395), i=70, next=90
                      NodeList [277, 384), i=71, next=0
                        KindExpressionStatement [277, 296), i=72, next=77
                          KindBinaryExpression [277, 295), i=73, next=0
                            KindIdentifier "y" [277, 292), i=74, next=75
                            KindPlusEqualsToken [292, 294), i=75, next=76
                            KindNumericLiteral [294, 295), i=76, next=0
                        KindIfStatement [296, 384), i=77, next=0
                          KindBinaryExpression [314, 319), i=78, next=82
                            KindIdentifier "y" [314, 315), i=79, next=80
                            KindEqualsEqualsToken [315, 317), i=80, next=81
                            KindNumericLiteral [317, 319), i=81, next=0
                          KindBlock [320, 384), i=82, next=0
                            NodeList [322, 369), i=83, next=0
                              KindBreakStatement [322, 346), i=84, next=85
                              KindExpressionStatement [346, 369), i=85, next=0
                                KindBinaryExpression [346, 368), i=86, next=0
                                  KindIdentifier "x" [346, 365), i=87, next=88
                                  KindEqualsToken [365, 366), i=88, next=89
                                  KindNumericLiteral [366, 368), i=89, next=0
                    KindBinaryExpression [403, 407), i=90, next=0
                      KindIdentifier "y" [403, 404), i=91, next=92
                      KindLessThanToken [404, 405), i=92, next=93
                      KindNumericLiteral [405, 407), i=93, next=0
                  KindExpressionStatement [409, 423), i=94, next=0
                    KindPostfixUnaryExpression [409, 422), i=95, next=0
                      KindIdentifier "y" [409, 420), i=96, next=0
          KindWhileStatement [430, 473), i=97, next=112
            KindBinaryExpression [443, 446), i=98, next=102
              KindIdentifier "y" [443, 444), i=99, next=100
              KindGreaterThanToken [444, 445), i=100, next=101
              KindNumericLiteral [445, 446), i=101, next=0
            KindBlock [447, 473), i=102, next=0
              NodeList [449, 466), i=103, next=0
                KindExpressionStatement [449, 466), i=104, next=0
                  KindBinaryExpression [449, 465), i=105, next=0
                    KindIdentifier "y" [449, 460), i=106, next=107
                    KindEqualsToken [460, 461), i=107, next=108
                    KindBinaryExpression [461, 465), i=108, next=0
                      KindIdentifier "y" [461, 462), i=109, next=110
                      KindGreaterThanGreaterThanToken [462, 464), i=110, next=111
                      KindNumericLiteral [464, 465), i=111, next=0
          KindLabeledStatement [473, 716), i=112, next=157
            KindIdentifier "L2" [473, 481), i=113, next=114
            KindTryStatement [482, 716), i=114, next=0
              KindBlock [486, 641), i=115, next=142
                NodeList [488, 634), i=116, next=0
                  KindLabeledStatement [488, 634), i=117, next=0
                    KindIdentifier "L3" [488, 500), i=118, next=119
                    KindIfStatement [501, 634), i=119, next=0
                      KindBinaryExpression [506, 509), i=120, next=124
                        KindIdentifier "x" [506, 507), i=121, next=122
                        KindLessThanToken [507, 508), i=122, next=123
                        KindIdentifier "y" [508, 509), i=123, next=0
                      KindBlock [510, 565), i=124, next=133
                        NodeList [512, 554), i=125, next=0
                          KindBreakStatement [512, 535), i=126, next=128
                            KindIdentifier "L2" [531, 534), i=127, next=0
                          KindExpressionStatement [535, 554), i=128, next=0
                            KindBinaryExpression [535, 553), i=129, next=0
                              KindIdentifier "x" [535, 550), i=130, next=131
                              KindEqualsToken [550, 551), i=131, next=132
                              KindNumericLiteral [551, 553), i=132, next=0
                      KindBlock [579, 634), i=133, next=0
                        NodeList [581, 623), i=134, next=0
                          KindBreakStatement [581, 604), i=135, next=137
                            KindIdentifier "L3" [600, 603), i=136, next=0
                          KindExpressionStatement [604, 623), i=137, next=0
                            KindBinaryExpression [604, 622), i=138, next=0
                              KindIdentifier "x" [604, 619), i=139, next=140
                              KindEqualsToken [619, 620), i=140, next=141
                              KindNumericLiteral [620, 622), i=141, next=0
              KindCatchClause [641, 679), i=142, next=150
                KindVariableDeclaration [654, 655), i=143, next=145
                  KindIdentifier "e" [654, 655), i=144, next=0
                KindBlock [656, 679), i=145, next=0
                  NodeList [658, 672), i=146, next=0
                    KindExpressionStatement [658, 672), i=147, next=0
                      KindPostfixUnaryExpression [658, 671), i=148, next=0
                        KindIdentifier "x" [658, 669), i=149, next=0
              KindBlock [692, 716), i=150, next=0
                NodeList [694, 709), i=151, next=0
                  KindExpressionStatement [694, 709), i=152, next=0
                    KindBinaryExpression [694, 708), i=153, next=0
                      KindIdentifier "x" [694, 705), i=154, next=155
                      KindPlusEqualsToken [705, 707), i=155, next=156
                      KindNumericLiteral [707, 708), i=156, next=0
          KindExpressionStatement [716, 726), i=157, next=160
            KindPostfixUnaryExpression [716, 725), i=158, next=0
              KindIdentifier "y" [716, 723), i=159, next=0
          KindForStatement [726, 791), i=160, next=177
            KindVariableDeclarationList [737, 744), i=161, next=166
              NodeList [740, 744), i=162, next=0
                KindVariableDeclaration [740, 744), i=163, next=0
                  KindIdentifier "k" [740, 742), i=164, next=165
                  KindNumericLiteral [743, 744), i=165, next=0
            KindBinaryExpression [745, 749), i=166, next=170
              KindIdentifier "k" [745, 746), i=167, next=168
              KindLessThanToken [746, 747), i=168, next=169
              KindNumericLiteral [747, 749), i=169, next=0
            KindPostfixUnaryExpression [750, 753), i=170, next=172
              KindIdentifier "k" [750, 751), i=171, next=0
            KindBlock [754, 791), i=172, next=0
              NodeList [756, 784), i=173, next=0
                KindExpressionStatement [756, 768), i=174, next=176
                  KindIdentifier "z" [756, 767), i=175, next=0
                KindBreakStatement [768, 784), i=176, next=0
          KindForStatement [791, 895), i=177, next=0
            KindBinaryExpression [802, 805), i=178, next=182
              KindIdentifier "k" [802, 803), i=179, next=180
              KindEqualsToken [803, 804), i=180, next=181
              KindNumericLiteral [804, 805), i=181, next=0
            KindBinaryExpression [806, 810), i=182, next=186
              KindIdentifier "k" [806, 807), i=183, next=184
              KindLessThanToken [807, 808), i=184, next=185
              KindNumericLiteral [808, 810), i=185, next=0
            KindPostfixUnaryExpression [811, 814), i=186, next=188
              KindIdentifier "k" [811, 812), i=187, next=0
            KindBlock [815, 895), i=188, next=0
              NodeList [817, 888), i=189, next=0
                KindIfStatement [817, 872), i=190, next=198
                  KindBinaryExpression [831, 835), i=191, next=195
                    KindIdentifier "k" [831, 832), i=192, next=193
                    KindEqualsEqualsToken [832, 834), i=193, next=194
                    KindNumericLiteral [834, 835), i=194, next=0
                  KindBlock [836, 872), i=195, next=0
                    NodeList [838, 861), i=196, next=0
                      KindContinueStatement [838, 861), i=197, next=0
                KindBreakStatement [872, 888), i=198, next=0
