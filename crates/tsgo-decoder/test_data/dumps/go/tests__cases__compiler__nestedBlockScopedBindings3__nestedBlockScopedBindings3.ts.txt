KindSourceFile [0, 953), i=1, next=0
  NodeList [0, 953), i=2, next=0
    KindFunctionDeclaration [0, 173), i=3, next=38
      KindIdentifier "a0" [8, 11), i=4, next=5
      KindBlock [13, 173), i=5, next=0
        NodeList [15, 170), i=6, next=0
          KindBlock [15, 98), i=7, next=25
            NodeList [22, 91), i=8, next=0
              KindForStatement [22, 91), i=9, next=0
                KindVariableDeclarationList [37, 46), i=10, next=15
                  NodeList [40, 46), i=11, next=0
                    KindVariableDeclaration [40, 46), i=12, next=0
                      KindIdentifier "x" [40, 42), i=13, next=14
                      KindNumericLiteral [44, 46), i=14, next=0
                KindBinaryExpression [47, 53), i=15, next=19
                  KindIdentifier "x" [47, 49), i=16, next=17
                  KindLessThanToken [49, 51), i=17, next=18
                  KindNumericLiteral [51, 53), i=18, next=0
                KindBlock [56, 91), i=19, next=0
                  NodeList [58, 80), i=20, next=0
                    KindExpressionStatement [58, 80), i=21, next=0
                      KindArrowFunction [58, 79), i=22, next=0
                        KindEqualsGreaterThanToken [74, 77), i=23, next=24
                        KindIdentifier "x" [77, 79), i=24, next=0
          KindBlock [98, 170), i=25, next=0
            NodeList [105, 163), i=26, next=0
              KindForStatement [105, 163), i=27, next=0
                KindVariableDeclarationList [120, 125), i=28, next=32
                  NodeList [123, 125), i=29, next=0
                    KindVariableDeclaration [123, 125), i=30, next=0
                      KindIdentifier "x" [123, 125), i=31, next=0
                KindBlock [128, 163), i=32, next=0
                  NodeList [130, 152), i=33, next=0
                    KindExpressionStatement [130, 152), i=34, next=0
                      KindArrowFunction [130, 151), i=35, next=0
                        KindEqualsGreaterThanToken [146, 149), i=36, next=37
                        KindIdentifier "x" [149, 151), i=37, next=0
    KindFunctionDeclaration [173, 293), i=38, next=68
      KindIdentifier "a1" [185, 188), i=39, next=40
      KindBlock [190, 293), i=40, next=0
        NodeList [192, 290), i=41, next=0
          KindForStatement [192, 244), i=42, next=57
            KindVariableDeclarationList [203, 208), i=43, next=47
              NodeList [206, 208), i=44, next=0
                KindVariableDeclaration [206, 208), i=45, next=0
                  KindIdentifier "x" [206, 208), i=46, next=0
            KindBinaryExpression [209, 215), i=47, next=51
              KindIdentifier "x" [209, 211), i=48, next=49
              KindLessThanToken [211, 213), i=49, next=50
              KindNumericLiteral [213, 215), i=50, next=0
            KindBlock [217, 244), i=51, next=0
              NodeList [219, 237), i=52, next=0
                KindExpressionStatement [219, 237), i=53, next=0
                  KindArrowFunction [219, 236), i=54, next=0
                    KindEqualsGreaterThanToken [231, 234), i=55, next=56
                    KindIdentifier "x" [234, 236), i=56, next=0
          KindForStatement [244, 290), i=57, next=0
            KindVariableDeclarationList [255, 260), i=58, next=62
              NodeList [258, 260), i=59, next=0
                KindVariableDeclaration [258, 260), i=60, next=0
                  KindIdentifier "x" [258, 260), i=61, next=0
            KindBlock [263, 290), i=62, next=0
              NodeList [265, 283), i=63, next=0
                KindExpressionStatement [265, 283), i=64, next=0
                  KindArrowFunction [265, 282), i=65, next=0
                    KindEqualsGreaterThanToken [277, 280), i=66, next=67
                    KindIdentifier "x" [280, 282), i=67, next=0
    KindFunctionDeclaration [293, 417), i=68, next=106
      KindIdentifier "a2" [305, 308), i=69, next=70
      KindBlock [310, 417), i=70, next=0
        NodeList [312, 414), i=71, next=0
          KindForStatement [312, 366), i=72, next=91
            KindVariableDeclarationList [323, 328), i=73, next=77
              NodeList [326, 328), i=74, next=0
                KindVariableDeclaration [326, 328), i=75, next=0
                  KindIdentifier "x" [326, 328), i=76, next=0
            KindBinaryExpression [329, 335), i=77, next=81
              KindIdentifier "x" [329, 331), i=78, next=79
              KindLessThanToken [331, 333), i=79, next=80
              KindNumericLiteral [333, 335), i=80, next=0
            KindBlock [337, 366), i=81, next=0
              NodeList [339, 359), i=82, next=0
                KindExpressionStatement [339, 359), i=83, next=0
                  KindBinaryExpression [339, 358), i=84, next=0
                    KindIdentifier "x" [339, 350), i=85, next=86
                    KindEqualsToken [350, 352), i=86, next=87
                    KindBinaryExpression [352, 358), i=87, next=0
                      KindIdentifier "x" [352, 354), i=88, next=89
                      KindPlusToken [354, 356), i=89, next=90
                      KindNumericLiteral [356, 358), i=90, next=0
          KindForStatement [366, 414), i=91, next=0
            KindVariableDeclarationList [377, 382), i=92, next=96
              NodeList [380, 382), i=93, next=0
                KindVariableDeclaration [380, 382), i=94, next=0
                  KindIdentifier "x" [380, 382), i=95, next=0
            KindBlock [385, 414), i=96, next=0
              NodeList [387, 407), i=97, next=0
                KindExpressionStatement [387, 407), i=98, next=0
                  KindBinaryExpression [387, 406), i=99, next=0
                    KindIdentifier "x" [387, 398), i=100, next=101
                    KindEqualsToken [398, 400), i=101, next=102
                    KindBinaryExpression [400, 406), i=102, next=0
                      KindIdentifier "x" [400, 402), i=103, next=104
                      KindPlusToken [402, 404), i=104, next=105
                      KindNumericLiteral [404, 406), i=105, next=0
    KindFunctionDeclaration [417, 577), i=106, next=142
      KindIdentifier "a3" [431, 434), i=107, next=108
      KindBlock [436, 577), i=108, next=0
        NodeList [438, 574), i=109, next=0
          KindForStatement [438, 492), i=110, next=129
            KindVariableDeclarationList [449, 454), i=111, next=115
              NodeList [452, 454), i=112, next=0
                KindVariableDeclaration [452, 454), i=113, next=0
                  KindIdentifier "x" [452, 454), i=114, next=0
            KindBinaryExpression [455, 461), i=115, next=119
              KindIdentifier "x" [455, 457), i=116, next=117
              KindLessThanToken [457, 459), i=117, next=118
              KindNumericLiteral [459, 461), i=118, next=0
            KindBlock [463, 492), i=119, next=0
              NodeList [465, 485), i=120, next=0
                KindExpressionStatement [465, 485), i=121, next=0
                  KindBinaryExpression [465, 484), i=122, next=0
                    KindIdentifier "x" [465, 476), i=123, next=124
                    KindEqualsToken [476, 478), i=124, next=125
                    KindBinaryExpression [478, 484), i=125, next=0
                      KindIdentifier "x" [478, 480), i=126, next=127
                      KindPlusToken [480, 482), i=127, next=128
                      KindNumericLiteral [482, 484), i=128, next=0
          KindSwitchStatement [492, 574), i=129, next=0
            KindNumericLiteral [506, 507), i=130, next=131
            KindCaseBlock [508, 574), i=131, next=0
              NodeList [510, 567), i=132, next=0
                KindCaseClause [510, 567), i=133, next=0
                  KindNumericLiteral [524, 526), i=134, next=135
                  NodeList [527, 567), i=135, next=0
                    KindVariableStatement [527, 547), i=136, next=141
                      KindVariableDeclarationList [527, 546), i=137, next=0
                        NodeList [544, 546), i=138, next=0
                          KindVariableDeclaration [544, 546), i=139, next=0
                            KindIdentifier "x" [544, 546), i=140, next=0
                    KindBreakStatement [547, 567), i=141, next=0
    KindFunctionDeclaration [577, 753), i=142, next=182
      KindIdentifier "a4" [589, 592), i=143, next=144
      KindBlock [594, 753), i=144, next=0
        NodeList [596, 750), i=145, next=0
          KindForStatement [596, 668), i=146, next=169
            KindVariableDeclarationList [607, 612), i=147, next=151
              NodeList [610, 612), i=148, next=0
                KindVariableDeclaration [610, 612), i=149, next=0
                  KindIdentifier "x" [610, 612), i=150, next=0
            KindBinaryExpression [613, 619), i=151, next=155
              KindIdentifier "x" [613, 615), i=152, next=153
              KindLessThanToken [615, 617), i=153, next=154
              KindNumericLiteral [617, 619), i=154, next=0
            KindBlock [621, 668), i=155, next=0
              NodeList [623, 661), i=156, next=0
                KindExpressionStatement [623, 643), i=157, next=165
                  KindBinaryExpression [623, 642), i=158, next=0
                    KindIdentifier "x" [623, 634), i=159, next=160
                    KindEqualsToken [634, 636), i=160, next=161
                    KindBinaryExpression [636, 642), i=161, next=0
                      KindIdentifier "x" [636, 638), i=162, next=163
                      KindPlusToken [638, 640), i=163, next=164
                      KindNumericLiteral [640, 642), i=164, next=0
                KindExpressionStatement [643, 661), i=165, next=0
                  KindArrowFunction [643, 660), i=166, next=0
                    KindEqualsGreaterThanToken [655, 658), i=167, next=168
                    KindIdentifier "x" [658, 660), i=168, next=0
          KindSwitchStatement [668, 750), i=169, next=0
            KindNumericLiteral [682, 683), i=170, next=171
            KindCaseBlock [684, 750), i=171, next=0
              NodeList [686, 743), i=172, next=0
                KindCaseClause [686, 743), i=173, next=0
                  KindNumericLiteral [700, 702), i=174, next=175
                  NodeList [703, 743), i=175, next=0
                    KindVariableStatement [703, 723), i=176, next=181
                      KindVariableDeclarationList [703, 722), i=177, next=0
                        NodeList [720, 722), i=178, next=0
                          KindVariableDeclaration [720, 722), i=179, next=0
                            KindIdentifier "x" [720, 722), i=180, next=0
                    KindBreakStatement [723, 743), i=181, next=0
    KindFunctionDeclaration [753, 953), i=182, next=0
      KindIdentifier "a5" [767, 770), i=183, next=184
      KindBlock [772, 953), i=184, next=0
        NodeList [774, 950), i=185, next=0
          KindForStatement [774, 846), i=186, next=209
            KindVariableDeclarationList [785, 790), i=187, next=191
              NodeList [788, 790), i=188, next=0
                KindVariableDeclaration [788, 790), i=189, next=0
                  KindIdentifier "x" [788, 790), i=190, next=0
            KindBinaryExpression [791, 797), i=191, next=195
              KindIdentifier "x" [791, 793), i=192, next=193
              KindLessThanToken [793, 795), i=193, next=194
              KindNumericLiteral [795, 797), i=194, next=0
            KindBlock [799, 846), i=195, next=0
              NodeList [801, 839), i=196, next=0
                KindExpressionStatement [801, 821), i=197, next=205
                  KindBinaryExpression [801, 820), i=198, next=0
                    KindIdentifier "x" [801, 812), i=199, next=200
                    KindEqualsToken [812, 814), i=200, next=201
                    KindBinaryExpression [814, 820), i=201, next=0
                      KindIdentifier "x" [814, 816), i=202, next=203
                      KindPlusToken [816, 818), i=203, next=204
                      KindNumericLiteral [818, 820), i=204, next=0
                KindExpressionStatement [821, 839), i=205, next=0
                  KindArrowFunction [821, 838), i=206, next=0
                    KindEqualsGreaterThanToken [833, 836), i=207, next=208
                    KindIdentifier "x" [836, 838), i=208, next=0
          KindSwitchStatement [846, 950), i=209, next=0
            KindNumericLiteral [860, 861), i=210, next=211
            KindCaseBlock [862, 950), i=211, next=0
              NodeList [864, 943), i=212, next=0
                KindCaseClause [864, 943), i=213, next=0
                  KindNumericLiteral [878, 880), i=214, next=215
                  NodeList [881, 943), i=215, next=0
                    KindVariableStatement [881, 901), i=216, next=221
                      KindVariableDeclarationList [881, 900), i=217, next=0
                        NodeList [898, 900), i=218, next=0
                          KindVariableDeclaration [898, 900), i=219, next=0
                            KindIdentifier "x" [898, 900), i=220, next=0
                    KindExpressionStatement [901, 923), i=221, next=225
                      KindArrowFunction [901, 922), i=222, next=0
                        KindEqualsGreaterThanToken [917, 920), i=223, next=224
                        KindIdentifier "x" [920, 922), i=224, next=0
                    KindBreakStatement [923, 943), i=225, next=0
