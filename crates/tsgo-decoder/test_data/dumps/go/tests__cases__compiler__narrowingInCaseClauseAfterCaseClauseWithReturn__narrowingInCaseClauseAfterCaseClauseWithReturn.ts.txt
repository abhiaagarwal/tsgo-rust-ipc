KindSourceFile [0, 929), i=1, next=0
  NodeList [0, 929), i=2, next=0
    KindFunctionDeclaration [0, 316), i=3, next=64
      KindIdentifier "test1" [8, 14), i=4, next=5
      NodeList [15, 38), i=5, next=12
        KindParameter [15, 38), i=6, next=0
          KindIdentifier "arg" [15, 18), i=7, next=8
          KindUnionType [19, 38), i=8, next=0
            NodeList [19, 38), i=9, next=0
              KindStringKeyword [19, 26), i=10, next=11
              KindUndefinedKeyword [28, 38), i=11, next=0
      KindBlock [39, 316), i=12, next=0
        NodeList [41, 314), i=13, next=0
          KindIfStatement [41, 72), i=14, next=20
            KindPrefixUnaryExpression [48, 52), i=15, next=17
              KindIdentifier "arg" [49, 52), i=16, next=0
            KindThrowStatement [53, 72), i=17, next=0
              KindNewExpression [59, 71), i=18, next=0
                KindIdentifier "Error" [63, 69), i=19, next=0
          KindSwitchStatement [72, 284), i=20, next=62
            KindTrueKeyword [84, 88), i=21, next=22
            KindCaseBlock [89, 284), i=22, next=0
              NodeList [91, 280), i=23, next=0
                KindCaseClause [91, 145), i=24, next=35
                  KindBinaryExpression [100, 126), i=25, next=32
                    KindCallExpression [100, 118), i=26, next=30
                      KindPropertyAccessExpression [100, 116), i=27, next=0
                        KindIdentifier "arg" [100, 104), i=28, next=29
                        KindIdentifier "toUpperCase" [105, 116), i=29, next=0
                    KindEqualsEqualsEqualsToken [118, 122), i=30, next=31
                    KindStringLiteral "A" [122, 126), i=31, next=0
                  NodeList [127, 145), i=32, next=0
                    KindReturnStatement [127, 145), i=33, next=0
                      KindStringLiteral "A" [140, 144), i=34, next=0
                KindCaseClause [145, 182), i=35, next=43
                  KindBinaryExpression [155, 181), i=36, next=0
                    KindCallExpression [155, 173), i=37, next=41
                      KindPropertyAccessExpression [155, 171), i=38, next=0
                        KindIdentifier "arg" [155, 159), i=39, next=40
                        KindIdentifier "toUpperCase" [160, 171), i=40, next=0
                    KindEqualsEqualsEqualsToken [173, 177), i=41, next=42
                    KindStringLiteral "B" [177, 181), i=42, next=0
                KindCaseClause [182, 218), i=43, next=51
                  KindBinaryExpression [191, 217), i=44, next=0
                    KindCallExpression [191, 209), i=45, next=49
                      KindPropertyAccessExpression [191, 207), i=46, next=0
                        KindIdentifier "arg" [191, 195), i=47, next=48
                        KindIdentifier "toUpperCase" [196, 207), i=48, next=0
                    KindEqualsEqualsEqualsToken [209, 213), i=49, next=50
                    KindStringLiteral "C" [213, 217), i=50, next=0
                KindCaseClause [218, 280), i=51, next=0
                  KindBinaryExpression [227, 253), i=52, next=59
                    KindCallExpression [227, 245), i=53, next=57
                      KindPropertyAccessExpression [227, 243), i=54, next=0
                        KindIdentifier "arg" [227, 231), i=55, next=56
                        KindIdentifier "toUpperCase" [232, 243), i=56, next=0
                    KindEqualsEqualsEqualsToken [245, 249), i=57, next=58
                    KindStringLiteral "D" [249, 253), i=58, next=0
                  NodeList [254, 280), i=59, next=0
                    KindReturnStatement [254, 280), i=60, next=0
                      KindStringLiteral "B, C or D" [267, 279), i=61, next=0
          KindReturnStatement [284, 314), i=62, next=0
            KindStringLiteral "Not A, B, C or D" [294, 313), i=63, next=0
    KindFunctionDeclaration [316, 633), i=64, next=125
      KindIdentifier "test2" [326, 332), i=65, next=66
      NodeList [333, 356), i=66, next=73
        KindParameter [333, 356), i=67, next=0
          KindIdentifier "arg" [333, 336), i=68, next=69
          KindUnionType [337, 356), i=69, next=0
            NodeList [337, 356), i=70, next=0
              KindStringKeyword [337, 344), i=71, next=72
              KindUndefinedKeyword [346, 356), i=72, next=0
      KindBlock [357, 633), i=73, next=0
        NodeList [359, 631), i=74, next=0
          KindIfStatement [359, 390), i=75, next=81
            KindPrefixUnaryExpression [366, 370), i=76, next=78
              KindIdentifier "arg" [367, 370), i=77, next=0
            KindThrowStatement [371, 390), i=78, next=0
              KindNewExpression [377, 389), i=79, next=0
                KindIdentifier "Error" [381, 387), i=80, next=0
          KindSwitchStatement [390, 601), i=81, next=123
            KindTrueKeyword [402, 406), i=82, next=83
            KindCaseBlock [407, 601), i=83, next=0
              NodeList [409, 597), i=84, next=0
                KindCaseClause [409, 445), i=85, next=93
                  KindBinaryExpression [418, 444), i=86, next=0
                    KindCallExpression [418, 436), i=87, next=91
                      KindPropertyAccessExpression [418, 434), i=88, next=0
                        KindIdentifier "arg" [418, 422), i=89, next=90
                        KindIdentifier "toUpperCase" [423, 434), i=90, next=0
                    KindEqualsEqualsEqualsToken [436, 440), i=91, next=92
                    KindStringLiteral "A" [440, 444), i=92, next=0
                KindCaseClause [445, 481), i=93, next=101
                  KindBinaryExpression [454, 480), i=94, next=0
                    KindCallExpression [454, 472), i=95, next=99
                      KindPropertyAccessExpression [454, 470), i=96, next=0
                        KindIdentifier "arg" [454, 458), i=97, next=98
                        KindIdentifier "toUpperCase" [459, 470), i=98, next=0
                    KindEqualsEqualsEqualsToken [472, 476), i=99, next=100
                    KindStringLiteral "B" [476, 480), i=100, next=0
                KindCaseClause [481, 543), i=101, next=112
                  KindBinaryExpression [490, 516), i=102, next=109
                    KindCallExpression [490, 508), i=103, next=107
                      KindPropertyAccessExpression [490, 506), i=104, next=0
                        KindIdentifier "arg" [490, 494), i=105, next=106
                        KindIdentifier "toUpperCase" [495, 506), i=106, next=0
                    KindEqualsEqualsEqualsToken [508, 512), i=107, next=108
                    KindStringLiteral "C" [512, 516), i=108, next=0
                  NodeList [517, 543), i=109, next=0
                    KindReturnStatement [517, 543), i=110, next=0
                      KindStringLiteral "A, B or C" [530, 542), i=111, next=0
                KindCaseClause [543, 597), i=112, next=0
                  KindBinaryExpression [552, 578), i=113, next=120
                    KindCallExpression [552, 570), i=114, next=118
                      KindPropertyAccessExpression [552, 568), i=115, next=0
                        KindIdentifier "arg" [552, 556), i=116, next=117
                        KindIdentifier "toUpperCase" [557, 568), i=117, next=0
                    KindEqualsEqualsEqualsToken [570, 574), i=118, next=119
                    KindStringLiteral "D" [574, 578), i=119, next=0
                  NodeList [579, 597), i=120, next=0
                    KindReturnStatement [579, 597), i=121, next=0
                      KindStringLiteral "D" [592, 596), i=122, next=0
          KindReturnStatement [601, 631), i=123, next=0
            KindStringLiteral "Not A, B, C or D" [611, 630), i=124, next=0
    KindFunctionDeclaration [633, 929), i=125, next=0
      KindIdentifier "test3" [643, 649), i=126, next=127
      NodeList [650, 791), i=127, next=168
        KindParameter [650, 760), i=128, next=159
          KindIdentifier "foo" [650, 656), i=129, next=130
          KindUnionType [657, 760), i=130, next=0
            NodeList [657, 760), i=131, next=0
              KindTypeLiteral [663, 691), i=132, next=141
                NodeList [665, 689), i=133, next=0
                  KindPropertySignature [665, 676), i=134, next=138
                    KindIdentifier "kind" [665, 670), i=135, next=136
                    KindLiteralType [671, 675), i=136, next=0
                      KindStringLiteral "a" [671, 675), i=137, next=0
                  KindPropertySignature [676, 689), i=138, next=0
                    KindIdentifier "prop" [676, 681), i=139, next=140
                    KindStringKeyword [682, 689), i=140, next=0
              KindTypeLiteral [697, 725), i=141, next=150
                NodeList [699, 723), i=142, next=0
                  KindPropertySignature [699, 710), i=143, next=147
                    KindIdentifier "kind" [699, 704), i=144, next=145
                    KindLiteralType [705, 709), i=145, next=0
                      KindStringLiteral "b" [705, 709), i=146, next=0
                  KindPropertySignature [710, 723), i=147, next=0
                    KindIdentifier "prop" [710, 715), i=148, next=149
                    KindNumberKeyword [716, 723), i=149, next=0
              KindTypeLiteral [731, 760), i=150, next=0
                NodeList [733, 758), i=151, next=0
                  KindPropertySignature [733, 744), i=152, next=156
                    KindIdentifier "kind" [733, 738), i=153, next=154
                    KindLiteralType [739, 743), i=154, next=0
                      KindStringLiteral "c" [739, 743), i=155, next=0
                  KindPropertySignature [744, 758), i=156, next=0
                    KindIdentifier "prop" [744, 749), i=157, next=158
                    KindBooleanKeyword [750, 758), i=158, next=0
        KindParameter [761, 790), i=159, next=0
          KindIdentifier "bar" [761, 767), i=160, next=161
          KindQuestionToken [767, 768), i=161, next=162
          KindTypeLiteral [769, 790), i=162, next=0
            NodeList [771, 786), i=163, next=0
              KindPropertySignature [771, 786), i=164, next=0
                KindIdentifier "type" [771, 780), i=165, next=166
                KindLiteralType [781, 785), i=166, next=0
                  KindStringLiteral "b" [781, 785), i=167, next=0
      KindBlock [793, 929), i=168, next=0
        NodeList [795, 927), i=169, next=0
          KindIfStatement [795, 825), i=170, next=176
            KindPrefixUnaryExpression [802, 806), i=171, next=173
              KindIdentifier "bar" [803, 806), i=172, next=0
            KindBlock [807, 825), i=173, next=0
              NodeList [809, 821), i=174, next=0
                KindReturnStatement [809, 821), i=175, next=0
          KindSwitchStatement [825, 927), i=176, next=0
            KindPropertyAccessExpression [837, 845), i=177, next=180
              KindIdentifier "foo" [837, 840), i=178, next=179
              KindIdentifier "kind" [841, 845), i=179, next=0
            KindCaseBlock [846, 927), i=180, next=0
              NodeList [848, 923), i=181, next=0
                KindCaseClause [848, 876), i=182, next=186
                  KindStringLiteral "a" [857, 861), i=183, next=184
                  NodeList [862, 876), i=184, next=0
                    KindReturnStatement [862, 876), i=185, next=0
                KindCaseClause [876, 895), i=186, next=190
                  KindPropertyAccessExpression [885, 894), i=187, next=0
                    KindIdentifier "bar" [885, 889), i=188, next=189
                    KindIdentifier "type" [890, 894), i=189, next=0
                KindCaseClause [895, 923), i=190, next=0
                  KindStringLiteral "c" [904, 908), i=191, next=192
                  NodeList [909, 923), i=192, next=0
                    KindReturnStatement [909, 923), i=193, next=0
