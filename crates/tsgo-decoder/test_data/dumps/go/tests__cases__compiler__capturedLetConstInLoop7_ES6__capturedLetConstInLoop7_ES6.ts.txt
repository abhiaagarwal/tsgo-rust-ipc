KindSourceFile [0, 5612), i=1, next=0
  NodeList [0, 5612), i=2, next=0
    KindLabeledStatement [0, 254), i=3, next=59
      KindIdentifier "l0" [0, 2), i=4, next=5
      KindForOfStatement [3, 254), i=5, next=0
        KindVariableDeclarationList [10, 15), i=6, next=10
          NodeList [13, 15), i=7, next=0
            KindVariableDeclaration [13, 15), i=8, next=0
              KindIdentifier "x" [13, 15), i=9, next=0
        KindArrayLiteralExpression [18, 21), i=10, next=11
        KindBlock [22, 254), i=11, next=0
          NodeList [24, 251), i=12, next=0
            KindExpressionStatement [24, 55), i=13, next=20
              KindParenthesizedExpression [24, 54), i=14, next=0
                KindFunctionExpression [31, 53), i=15, next=0
                  KindBlock [41, 53), i=16, next=0
                    NodeList [43, 52), i=17, next=0
                      KindReturnStatement [43, 52), i=18, next=0
                        KindIdentifier "x" [50, 52), i=19, next=0
            KindExpressionStatement [55, 71), i=20, next=25
              KindParenthesizedExpression [55, 70), i=21, next=0
                KindArrowFunction [62, 69), i=22, next=0
                  KindEqualsGreaterThanToken [64, 67), i=23, next=24
                  KindIdentifier "x" [67, 69), i=24, next=0
            KindIfStatement [71, 113), i=25, next=33
              KindBinaryExpression [81, 87), i=26, next=30
                KindIdentifier "x" [81, 82), i=27, next=28
                KindEqualsEqualsToken [82, 85), i=28, next=29
                KindNumericLiteral [85, 87), i=29, next=0
              KindBlock [88, 113), i=30, next=0
                NodeList [90, 106), i=31, next=0
                  KindBreakStatement [90, 106), i=32, next=0
            KindIfStatement [113, 158), i=33, next=42
              KindBinaryExpression [123, 129), i=34, next=38
                KindIdentifier "x" [123, 124), i=35, next=36
                KindEqualsEqualsToken [124, 127), i=36, next=37
                KindNumericLiteral [127, 129), i=37, next=0
              KindBlock [130, 158), i=38, next=0
                NodeList [132, 151), i=39, next=0
                  KindBreakStatement [132, 151), i=40, next=0
                    KindIdentifier "l0" [147, 150), i=41, next=0
            KindIfStatement [158, 203), i=42, next=50
              KindBinaryExpression [168, 174), i=43, next=47
                KindIdentifier "x" [168, 169), i=44, next=45
                KindEqualsEqualsToken [169, 172), i=45, next=46
                KindNumericLiteral [172, 174), i=46, next=0
              KindBlock [175, 203), i=47, next=0
                NodeList [177, 196), i=48, next=0
                  KindContinueStatement [177, 196), i=49, next=0
            KindIfStatement [203, 251), i=50, next=0
              KindBinaryExpression [213, 219), i=51, next=55
                KindIdentifier "x" [213, 214), i=52, next=53
                KindEqualsEqualsToken [214, 217), i=53, next=54
                KindNumericLiteral [217, 219), i=54, next=0
              KindBlock [220, 251), i=55, next=0
                NodeList [222, 244), i=56, next=0
                  KindContinueStatement [222, 244), i=57, next=0
                    KindIdentifier "l0" [240, 243), i=58, next=0
    KindLabeledStatement [254, 523), i=59, next=115
      KindIdentifier "l00" [254, 261), i=60, next=61
      KindForInStatement [262, 523), i=61, next=0
        KindVariableDeclarationList [269, 274), i=62, next=66
          NodeList [272, 274), i=63, next=0
            KindVariableDeclaration [272, 274), i=64, next=0
              KindIdentifier "x" [272, 274), i=65, next=0
        KindArrayLiteralExpression [277, 280), i=66, next=67
        KindBlock [281, 523), i=67, next=0
          NodeList [283, 520), i=68, next=0
            KindExpressionStatement [283, 314), i=69, next=76
              KindParenthesizedExpression [283, 313), i=70, next=0
                KindFunctionExpression [290, 312), i=71, next=0
                  KindBlock [300, 312), i=72, next=0
                    NodeList [302, 311), i=73, next=0
                      KindReturnStatement [302, 311), i=74, next=0
                        KindIdentifier "x" [309, 311), i=75, next=0
            KindExpressionStatement [314, 330), i=76, next=81
              KindParenthesizedExpression [314, 329), i=77, next=0
                KindArrowFunction [321, 328), i=78, next=0
                  KindEqualsGreaterThanToken [323, 326), i=79, next=80
                  KindIdentifier "x" [326, 328), i=80, next=0
            KindIfStatement [330, 374), i=81, next=89
              KindBinaryExpression [340, 348), i=82, next=86
                KindIdentifier "x" [340, 341), i=83, next=84
                KindEqualsEqualsToken [341, 344), i=84, next=85
                KindStringLiteral "1" [344, 348), i=85, next=0
              KindBlock [349, 374), i=86, next=0
                NodeList [351, 367), i=87, next=0
                  KindBreakStatement [351, 367), i=88, next=0
            KindIfStatement [374, 422), i=89, next=98
              KindBinaryExpression [384, 392), i=90, next=94
                KindIdentifier "x" [384, 385), i=91, next=92
                KindEqualsEqualsToken [385, 388), i=92, next=93
                KindStringLiteral "1" [388, 392), i=93, next=0
              KindBlock [393, 422), i=94, next=0
                NodeList [395, 415), i=95, next=0
                  KindBreakStatement [395, 415), i=96, next=0
                    KindIdentifier "l00" [410, 414), i=97, next=0
            KindIfStatement [422, 469), i=98, next=106
              KindBinaryExpression [432, 440), i=99, next=103
                KindIdentifier "x" [432, 433), i=100, next=101
                KindEqualsEqualsToken [433, 436), i=101, next=102
                KindStringLiteral "2" [436, 440), i=102, next=0
              KindBlock [441, 469), i=103, next=0
                NodeList [443, 462), i=104, next=0
                  KindContinueStatement [443, 462), i=105, next=0
            KindIfStatement [469, 520), i=106, next=0
              KindBinaryExpression [479, 487), i=107, next=111
                KindIdentifier "x" [479, 480), i=108, next=109
                KindEqualsEqualsToken [480, 483), i=109, next=110
                KindStringLiteral "2" [483, 487), i=110, next=0
              KindBlock [488, 520), i=111, next=0
                NodeList [490, 513), i=112, next=0
                  KindContinueStatement [490, 513), i=113, next=0
                    KindIdentifier "l00" [508, 512), i=114, next=0
    KindLabeledStatement [523, 791), i=115, next=177
      KindIdentifier "l1" [523, 529), i=116, next=117
      KindForStatement [530, 791), i=117, next=0
        KindVariableDeclarationList [537, 546), i=118, next=123
          NodeList [540, 546), i=119, next=0
            KindVariableDeclaration [540, 546), i=120, next=0
              KindIdentifier "x" [540, 542), i=121, next=122
              KindNumericLiteral [544, 546), i=122, next=0
        KindBinaryExpression [547, 553), i=123, next=127
          KindIdentifier "x" [547, 549), i=124, next=125
          KindLessThanToken [549, 551), i=125, next=126
          KindNumericLiteral [551, 553), i=126, next=0
        KindPrefixUnaryExpression [554, 558), i=127, next=129
          KindIdentifier "x" [557, 558), i=128, next=0
        KindBlock [559, 791), i=129, next=0
          NodeList [561, 788), i=130, next=0
            KindExpressionStatement [561, 592), i=131, next=138
              KindParenthesizedExpression [561, 591), i=132, next=0
                KindFunctionExpression [568, 590), i=133, next=0
                  KindBlock [578, 590), i=134, next=0
                    NodeList [580, 589), i=135, next=0
                      KindReturnStatement [580, 589), i=136, next=0
                        KindIdentifier "x" [587, 589), i=137, next=0
            KindExpressionStatement [592, 608), i=138, next=143
              KindParenthesizedExpression [592, 607), i=139, next=0
                KindArrowFunction [599, 606), i=140, next=0
                  KindEqualsGreaterThanToken [601, 604), i=141, next=142
                  KindIdentifier "x" [604, 606), i=142, next=0
            KindIfStatement [608, 650), i=143, next=151
              KindBinaryExpression [618, 624), i=144, next=148
                KindIdentifier "x" [618, 619), i=145, next=146
                KindEqualsEqualsToken [619, 622), i=146, next=147
                KindNumericLiteral [622, 624), i=147, next=0
              KindBlock [625, 650), i=148, next=0
                NodeList [627, 643), i=149, next=0
                  KindBreakStatement [627, 643), i=150, next=0
            KindIfStatement [650, 695), i=151, next=160
              KindBinaryExpression [660, 666), i=152, next=156
                KindIdentifier "x" [660, 661), i=153, next=154
                KindEqualsEqualsToken [661, 664), i=154, next=155
                KindNumericLiteral [664, 666), i=155, next=0
              KindBlock [667, 695), i=156, next=0
                NodeList [669, 688), i=157, next=0
                  KindBreakStatement [669, 688), i=158, next=0
                    KindIdentifier "l1" [684, 687), i=159, next=0
            KindIfStatement [695, 740), i=160, next=168
              KindBinaryExpression [705, 711), i=161, next=165
                KindIdentifier "x" [705, 706), i=162, next=163
                KindEqualsEqualsToken [706, 709), i=163, next=164
                KindNumericLiteral [709, 711), i=164, next=0
              KindBlock [712, 740), i=165, next=0
                NodeList [714, 733), i=166, next=0
                  KindContinueStatement [714, 733), i=167, next=0
            KindIfStatement [740, 788), i=168, next=0
              KindBinaryExpression [750, 756), i=169, next=173
                KindIdentifier "x" [750, 751), i=170, next=171
                KindEqualsEqualsToken [751, 754), i=171, next=172
                KindNumericLiteral [754, 756), i=172, next=0
              KindBlock [757, 788), i=173, next=0
                NodeList [759, 781), i=174, next=0
                  KindContinueStatement [759, 781), i=175, next=0
                    KindIdentifier "l1" [777, 780), i=176, next=0
    KindLabeledStatement [791, 1059), i=177, next=237
      KindIdentifier "l2" [791, 797), i=178, next=179
      KindWhileStatement [798, 1059), i=179, next=0
        KindBinaryExpression [807, 814), i=180, next=184
          KindNumericLiteral [807, 808), i=181, next=182
          KindEqualsEqualsEqualsToken [808, 812), i=182, next=183
          KindNumericLiteral [812, 814), i=183, next=0
        KindBlock [815, 1059), i=184, next=0
          NodeList [817, 1056), i=185, next=0
            KindVariableStatement [817, 829), i=186, next=191
              KindVariableDeclarationList [817, 828), i=187, next=0
                NodeList [826, 828), i=188, next=0
                  KindVariableDeclaration [826, 828), i=189, next=0
                    KindIdentifier "x" [826, 828), i=190, next=0
            KindExpressionStatement [829, 860), i=191, next=198
              KindParenthesizedExpression [829, 859), i=192, next=0
                KindFunctionExpression [836, 858), i=193, next=0
                  KindBlock [846, 858), i=194, next=0
                    NodeList [848, 857), i=195, next=0
                      KindReturnStatement [848, 857), i=196, next=0
                        KindIdentifier "x" [855, 857), i=197, next=0
            KindExpressionStatement [860, 876), i=198, next=203
              KindParenthesizedExpression [860, 875), i=199, next=0
                KindArrowFunction [867, 874), i=200, next=0
                  KindEqualsGreaterThanToken [869, 872), i=201, next=202
                  KindIdentifier "x" [872, 874), i=202, next=0
            KindIfStatement [876, 918), i=203, next=211
              KindBinaryExpression [886, 892), i=204, next=208
                KindIdentifier "x" [886, 887), i=205, next=206
                KindEqualsEqualsToken [887, 890), i=206, next=207
                KindNumericLiteral [890, 892), i=207, next=0
              KindBlock [893, 918), i=208, next=0
                NodeList [895, 911), i=209, next=0
                  KindBreakStatement [895, 911), i=210, next=0
            KindIfStatement [918, 963), i=211, next=220
              KindBinaryExpression [928, 934), i=212, next=216
                KindIdentifier "x" [928, 929), i=213, next=214
                KindEqualsEqualsToken [929, 932), i=214, next=215
                KindNumericLiteral [932, 934), i=215, next=0
              KindBlock [935, 963), i=216, next=0
                NodeList [937, 956), i=217, next=0
                  KindBreakStatement [937, 956), i=218, next=0
                    KindIdentifier "l2" [952, 955), i=219, next=0
            KindIfStatement [963, 1008), i=220, next=228
              KindBinaryExpression [973, 979), i=221, next=225
                KindIdentifier "x" [973, 974), i=222, next=223
                KindEqualsEqualsToken [974, 977), i=223, next=224
                KindNumericLiteral [977, 979), i=224, next=0
              KindBlock [980, 1008), i=225, next=0
                NodeList [982, 1001), i=226, next=0
                  KindContinueStatement [982, 1001), i=227, next=0
            KindIfStatement [1008, 1056), i=228, next=0
              KindBinaryExpression [1018, 1024), i=229, next=233
                KindIdentifier "x" [1018, 1019), i=230, next=231
                KindEqualsEqualsToken [1019, 1022), i=231, next=232
                KindNumericLiteral [1022, 1024), i=232, next=0
              KindBlock [1025, 1056), i=233, next=0
                NodeList [1027, 1049), i=234, next=0
                  KindContinueStatement [1027, 1049), i=235, next=0
                    KindIdentifier "l2" [1045, 1048), i=236, next=0
    KindLabeledStatement [1059, 1330), i=237, next=41
      KindIdentifier "l3" [1059, 1065), i=238, next=239
      KindDoStatement [1066, 1330), i=239, next=0
        KindBlock [1070, 1314), i=240, next=37
          NodeList [1072, 1311), i=241, next=0
            KindVariableStatement [1072, 1084), i=242, next=247
              KindVariableDeclarationList [1072, 1083), i=243, next=0
                NodeList [1081, 1083), i=244, next=0
                  KindVariableDeclaration [1081, 1083), i=245, next=0
                    KindIdentifier "x" [1081, 1083), i=246, next=0
            KindExpressionStatement [1084, 1115), i=247, next=254
              KindParenthesizedExpression [1084, 1114), i=248, next=0
                KindFunctionExpression [1091, 1113), i=249, next=0
                  KindBlock [1101, 1113), i=250, next=0
                    NodeList [1103, 1112), i=251, next=0
                      KindReturnStatement [1103, 1112), i=252, next=0
                        KindIdentifier "x" [1110, 1112), i=253, next=0
            KindExpressionStatement [1115, 1131), i=254, next=3
              KindParenthesizedExpression [1115, 1130), i=255, next=0
                KindArrowFunction [1122, 1129), i=256, next=0
                  KindEqualsGreaterThanToken [1124, 1127), i=257, next=2
                  KindIdentifier "x" [1127, 1129), i=258, next=0
            KindIfStatement [1131, 1173), i=259, next=11
              KindBinaryExpression [1141, 1147), i=260, next=8
                KindIdentifier "x" [1141, 1142), i=261, next=6
                KindEqualsEqualsToken [1142, 1145), i=262, next=7
                KindNumericLiteral [1145, 1147), i=263, next=0
              KindBlock [1148, 1173), i=264, next=0
                NodeList [1150, 1166), i=265, next=0
                  KindBreakStatement [1150, 1166), i=266, next=0
            KindIfStatement [1173, 1218), i=267, next=20
              KindBinaryExpression [1183, 1189), i=268, next=16
                KindIdentifier "x" [1183, 1184), i=269, next=14
                KindEqualsEqualsToken [1184, 1187), i=270, next=15
                KindNumericLiteral [1187, 1189), i=271, next=0
              KindBlock [1190, 1218), i=272, next=0
                NodeList [1192, 1211), i=273, next=0
                  KindBreakStatement [1192, 1211), i=274, next=0
                    KindIdentifier "l3" [1207, 1210), i=275, next=0
            KindIfStatement [1218, 1263), i=276, next=28
              KindBinaryExpression [1228, 1234), i=277, next=25
                KindIdentifier "x" [1228, 1229), i=278, next=23
                KindEqualsEqualsToken [1229, 1232), i=279, next=24
                KindNumericLiteral [1232, 1234), i=280, next=0
              KindBlock [1235, 1263), i=281, next=0
                NodeList [1237, 1256), i=282, next=0
                  KindContinueStatement [1237, 1256), i=283, next=0
            KindIfStatement [1263, 1311), i=284, next=0
              KindBinaryExpression [1273, 1279), i=285, next=33
                KindIdentifier "x" [1273, 1274), i=286, next=31
                KindEqualsEqualsToken [1274, 1277), i=287, next=32
                KindNumericLiteral [1277, 1279), i=288, next=0
              KindBlock [1280, 1311), i=289, next=0
                NodeList [1282, 1304), i=290, next=0
                  KindContinueStatement [1282, 1304), i=291, next=0
                    KindIdentifier "l3" [1300, 1303), i=292, next=0
        KindBinaryExpression [1322, 1329), i=293, next=0
          KindNumericLiteral [1322, 1323), i=294, next=39
          KindEqualsEqualsEqualsToken [1323, 1327), i=295, next=40
          KindNumericLiteral [1327, 1329), i=296, next=0
    KindLabeledStatement [1330, 1614), i=297, next=109
      KindIdentifier "l4" [1330, 1336), i=298, next=43
      KindForStatement [1337, 1614), i=299, next=0
        KindVariableDeclarationList [1344, 1353), i=300, next=49
          NodeList [1347, 1353), i=301, next=0
            KindVariableDeclaration [1347, 1353), i=302, next=0
              KindIdentifier "y" [1347, 1349), i=303, next=48
              KindNumericLiteral [1351, 1353), i=304, next=0
        KindBinaryExpression [1354, 1360), i=305, next=53
          KindIdentifier "y" [1354, 1356), i=306, next=51
          KindLessThanToken [1356, 1358), i=307, next=52
          KindNumericLiteral [1358, 1360), i=308, next=0
        KindPrefixUnaryExpression [1361, 1365), i=309, next=55
          KindIdentifier "y" [1364, 1365), i=310, next=0
        KindBlock [1366, 1614), i=311, next=0
          NodeList [1368, 1611), i=312, next=0
            KindVariableStatement [1368, 1384), i=313, next=63
              KindVariableDeclarationList [1368, 1383), i=314, next=0
                NodeList [1377, 1383), i=315, next=0
                  KindVariableDeclaration [1377, 1383), i=316, next=0
                    KindIdentifier "x" [1377, 1379), i=317, next=62
                    KindNumericLiteral [1381, 1383), i=318, next=0
            KindExpressionStatement [1384, 1415), i=319, next=70
              KindParenthesizedExpression [1384, 1414), i=320, next=0
                KindFunctionExpression [1391, 1413), i=321, next=0
                  KindBlock [1401, 1413), i=322, next=0
                    NodeList [1403, 1412), i=323, next=0
                      KindReturnStatement [1403, 1412), i=324, next=0
                        KindIdentifier "x" [1410, 1412), i=325, next=0
            KindExpressionStatement [1415, 1431), i=326, next=75
              KindParenthesizedExpression [1415, 1430), i=327, next=0
                KindArrowFunction [1422, 1429), i=328, next=0
                  KindEqualsGreaterThanToken [1424, 1427), i=329, next=74
                  KindIdentifier "x" [1427, 1429), i=330, next=0
            KindIfStatement [1431, 1473), i=331, next=83
              KindBinaryExpression [1441, 1447), i=332, next=80
                KindIdentifier "x" [1441, 1442), i=333, next=78
                KindEqualsEqualsToken [1442, 1445), i=334, next=79
                KindNumericLiteral [1445, 1447), i=335, next=0
              KindBlock [1448, 1473), i=336, next=0
                NodeList [1450, 1466), i=337, next=0
                  KindBreakStatement [1450, 1466), i=338, next=0
            KindIfStatement [1473, 1518), i=339, next=92
              KindBinaryExpression [1483, 1489), i=340, next=88
                KindIdentifier "x" [1483, 1484), i=341, next=86
                KindEqualsEqualsToken [1484, 1487), i=342, next=87
                KindNumericLiteral [1487, 1489), i=343, next=0
              KindBlock [1490, 1518), i=344, next=0
                NodeList [1492, 1511), i=345, next=0
                  KindBreakStatement [1492, 1511), i=346, next=0
                    KindIdentifier "l4" [1507, 1510), i=347, next=0
            KindIfStatement [1518, 1563), i=348, next=100
              KindBinaryExpression [1528, 1534), i=349, next=97
                KindIdentifier "x" [1528, 1529), i=350, next=95
                KindEqualsEqualsToken [1529, 1532), i=351, next=96
                KindNumericLiteral [1532, 1534), i=352, next=0
              KindBlock [1535, 1563), i=353, next=0
                NodeList [1537, 1556), i=354, next=0
                  KindContinueStatement [1537, 1556), i=355, next=0
            KindIfStatement [1563, 1611), i=356, next=0
              KindBinaryExpression [1573, 1579), i=357, next=105
                KindIdentifier "x" [1573, 1574), i=358, next=103
                KindEqualsEqualsToken [1574, 1577), i=359, next=104
                KindNumericLiteral [1577, 1579), i=360, next=0
              KindBlock [1580, 1611), i=361, next=0
                NodeList [1582, 1604), i=362, next=0
                  KindContinueStatement [1582, 1604), i=363, next=0
                    KindIdentifier "l4" [1600, 1603), i=364, next=0
    KindLabeledStatement [1614, 1897), i=365, next=180
      KindIdentifier "l5" [1614, 1620), i=366, next=111
      KindForStatement [1621, 1897), i=367, next=0
        KindVariableDeclarationList [1628, 1644), i=368, next=120
          NodeList [1631, 1644), i=369, next=0
            KindVariableDeclaration [1631, 1637), i=370, next=117
              KindIdentifier "x" [1631, 1633), i=371, next=116
              KindNumericLiteral [1635, 1637), i=372, next=0
            KindVariableDeclaration [1638, 1644), i=373, next=0
              KindIdentifier "y" [1638, 1640), i=374, next=119
              KindNumericLiteral [1642, 1644), i=375, next=0
        KindBinaryExpression [1645, 1651), i=376, next=124
          KindIdentifier "x" [1645, 1647), i=377, next=122
          KindLessThanToken [1647, 1649), i=378, next=123
          KindNumericLiteral [1649, 1651), i=379, next=0
        KindPrefixUnaryExpression [1652, 1656), i=380, next=126
          KindIdentifier "x" [1655, 1656), i=381, next=0
        KindBlock [1657, 1897), i=382, next=0
          NodeList [1659, 1894), i=383, next=0
            KindExpressionStatement [1659, 1694), i=384, next=138
              KindParenthesizedExpression [1659, 1693), i=385, next=0
                KindFunctionExpression [1666, 1692), i=386, next=0
                  KindBlock [1676, 1692), i=387, next=0
                    NodeList [1678, 1691), i=388, next=0
                      KindReturnStatement [1678, 1691), i=389, next=0
                        KindBinaryExpression [1685, 1691), i=390, next=0
                          KindIdentifier "x" [1685, 1687), i=391, next=136
                          KindPlusToken [1687, 1689), i=392, next=137
                          KindIdentifier "y" [1689, 1691), i=393, next=0
            KindExpressionStatement [1694, 1714), i=394, next=146
              KindParenthesizedExpression [1694, 1713), i=395, next=0
                KindArrowFunction [1701, 1712), i=396, next=0
                  KindEqualsGreaterThanToken [1703, 1706), i=397, next=142
                  KindBinaryExpression [1706, 1712), i=398, next=0
                    KindIdentifier "x" [1706, 1708), i=399, next=144
                    KindPlusToken [1708, 1710), i=400, next=145
                    KindIdentifier "y" [1710, 1712), i=401, next=0
            KindIfStatement [1714, 1756), i=402, next=154
              KindBinaryExpression [1724, 1730), i=403, next=151
                KindIdentifier "x" [1724, 1725), i=404, next=149
                KindEqualsEqualsToken [1725, 1728), i=405, next=150
                KindNumericLiteral [1728, 1730), i=406, next=0
              KindBlock [1731, 1756), i=407, next=0
                NodeList [1733, 1749), i=408, next=0
                  KindBreakStatement [1733, 1749), i=409, next=0
            KindIfStatement [1756, 1801), i=410, next=163
              KindBinaryExpression [1766, 1772), i=411, next=159
                KindIdentifier "x" [1766, 1767), i=412, next=157
                KindEqualsEqualsToken [1767, 1770), i=413, next=158
                KindNumericLiteral [1770, 1772), i=414, next=0
              KindBlock [1773, 1801), i=415, next=0
                NodeList [1775, 1794), i=416, next=0
                  KindBreakStatement [1775, 1794), i=417, next=0
                    KindIdentifier "l5" [1790, 1793), i=418, next=0
            KindIfStatement [1801, 1846), i=419, next=171
              KindBinaryExpression [1811, 1817), i=420, next=168
                KindIdentifier "x" [1811, 1812), i=421, next=166
                KindEqualsEqualsToken [1812, 1815), i=422, next=167
                KindNumericLiteral [1815, 1817), i=423, next=0
              KindBlock [1818, 1846), i=424, next=0
                NodeList [1820, 1839), i=425, next=0
                  KindContinueStatement [1820, 1839), i=426, next=0
            KindIfStatement [1846, 1894), i=427, next=0
              KindBinaryExpression [1856, 1862), i=428, next=176
                KindIdentifier "x" [1856, 1857), i=429, next=174
                KindEqualsEqualsToken [1857, 1860), i=430, next=175
                KindNumericLiteral [1860, 1862), i=431, next=0
              KindBlock [1863, 1894), i=432, next=0
                NodeList [1865, 1887), i=433, next=0
                  KindContinueStatement [1865, 1887), i=434, next=0
                    KindIdentifier "l5" [1883, 1886), i=435, next=0
    KindLabeledStatement [1897, 2178), i=436, next=248
      KindIdentifier "l6" [1897, 1903), i=437, next=182
      KindWhileStatement [1904, 2178), i=438, next=0
        KindBinaryExpression [1913, 1920), i=439, next=187
          KindNumericLiteral [1913, 1914), i=440, next=185
          KindEqualsEqualsEqualsToken [1914, 1918), i=441, next=186
          KindNumericLiteral [1918, 1920), i=442, next=0
        KindBlock [1921, 2178), i=443, next=0
          NodeList [1923, 2173), i=444, next=0
            KindVariableStatement [1923, 1938), i=445, next=196
              KindVariableDeclarationList [1923, 1937), i=446, next=0
                NodeList [1932, 1937), i=447, next=0
                  KindVariableDeclaration [1932, 1934), i=448, next=194
                    KindIdentifier "x" [1932, 1934), i=449, next=0
                  KindVariableDeclaration [1935, 1937), i=450, next=0
                    KindIdentifier "y" [1935, 1937), i=451, next=0
            KindExpressionStatement [1938, 1973), i=452, next=206
              KindParenthesizedExpression [1938, 1972), i=453, next=0
                KindFunctionExpression [1945, 1971), i=454, next=0
                  KindBlock [1955, 1971), i=455, next=0
                    NodeList [1957, 1970), i=456, next=0
                      KindReturnStatement [1957, 1970), i=457, next=0
                        KindBinaryExpression [1964, 1970), i=458, next=0
                          KindIdentifier "x" [1964, 1966), i=459, next=204
                          KindPlusToken [1966, 1968), i=460, next=205
                          KindIdentifier "y" [1968, 1970), i=461, next=0
            KindExpressionStatement [1973, 1993), i=462, next=214
              KindParenthesizedExpression [1973, 1992), i=463, next=0
                KindArrowFunction [1980, 1991), i=464, next=0
                  KindEqualsGreaterThanToken [1982, 1985), i=465, next=210
                  KindBinaryExpression [1985, 1991), i=466, next=0
                    KindIdentifier "x" [1985, 1987), i=467, next=212
                    KindPlusToken [1987, 1989), i=468, next=213
                    KindIdentifier "y" [1989, 1991), i=469, next=0
            KindIfStatement [1993, 2035), i=470, next=222
              KindBinaryExpression [2003, 2009), i=471, next=219
                KindIdentifier "x" [2003, 2004), i=472, next=217
                KindEqualsEqualsToken [2004, 2007), i=473, next=218
                KindNumericLiteral [2007, 2009), i=474, next=0
              KindBlock [2010, 2035), i=475, next=0
                NodeList [2012, 2028), i=476, next=0
                  KindBreakStatement [2012, 2028), i=477, next=0
            KindIfStatement [2035, 2080), i=478, next=231
              KindBinaryExpression [2045, 2051), i=479, next=227
                KindIdentifier "x" [2045, 2046), i=480, next=225
                KindEqualsEqualsToken [2046, 2049), i=481, next=226
                KindNumericLiteral [2049, 2051), i=482, next=0
              KindBlock [2052, 2080), i=483, next=0
                NodeList [2054, 2073), i=484, next=0
                  KindBreakStatement [2054, 2073), i=485, next=0
                    KindIdentifier "l6" [2069, 2072), i=486, next=0
            KindIfStatement [2080, 2125), i=487, next=239
              KindBinaryExpression [2090, 2096), i=488, next=236
                KindIdentifier "x" [2090, 2091), i=489, next=234
                KindEqualsEqualsToken [2091, 2094), i=490, next=235
                KindNumericLiteral [2094, 2096), i=491, next=0
              KindBlock [2097, 2125), i=492, next=0
                NodeList [2099, 2118), i=493, next=0
                  KindContinueStatement [2099, 2118), i=494, next=0
            KindIfStatement [2125, 2173), i=495, next=0
              KindBinaryExpression [2135, 2141), i=496, next=244
                KindIdentifier "x" [2135, 2136), i=497, next=242
                KindEqualsEqualsToken [2136, 2139), i=498, next=243
                KindNumericLiteral [2139, 2141), i=499, next=0
              KindBlock [2142, 2173), i=500, next=0
                NodeList [2144, 2166), i=501, next=0
                  KindContinueStatement [2144, 2166), i=502, next=0
                    KindIdentifier "l6" [2162, 2165), i=503, next=0
    KindLabeledStatement [2178, 2460), i=504, next=60
      KindIdentifier "l7" [2178, 2184), i=505, next=250
      KindDoStatement [2185, 2460), i=506, next=0
        KindBlock [2189, 2444), i=507, next=56
          NodeList [2191, 2441), i=508, next=0
            KindVariableStatement [2191, 2206), i=509, next=4
              KindVariableDeclarationList [2191, 2205), i=510, next=0
                NodeList [2200, 2205), i=511, next=0
                  KindVariableDeclaration [2200, 2202), i=512, next=2
                    KindIdentifier "x" [2200, 2202), i=513, next=0
                  KindVariableDeclaration [2203, 2205), i=514, next=0
                    KindIdentifier "y" [2203, 2205), i=515, next=0
            KindExpressionStatement [2206, 2241), i=516, next=14
              KindParenthesizedExpression [2206, 2240), i=517, next=0
                KindFunctionExpression [2213, 2239), i=518, next=0
                  KindBlock [2223, 2239), i=519, next=0
                    NodeList [2225, 2238), i=520, next=0
                      KindReturnStatement [2225, 2238), i=521, next=0
                        KindBinaryExpression [2232, 2238), i=522, next=0
                          KindIdentifier "x" [2232, 2234), i=523, next=12
                          KindPlusToken [2234, 2236), i=524, next=13
                          KindIdentifier "y" [2236, 2238), i=525, next=0
            KindExpressionStatement [2241, 2261), i=526, next=22
              KindParenthesizedExpression [2241, 2260), i=527, next=0
                KindArrowFunction [2248, 2259), i=528, next=0
                  KindEqualsGreaterThanToken [2250, 2253), i=529, next=18
                  KindBinaryExpression [2253, 2259), i=530, next=0
                    KindIdentifier "x" [2253, 2255), i=531, next=20
                    KindPlusToken [2255, 2257), i=532, next=21
                    KindIdentifier "y" [2257, 2259), i=533, next=0
            KindIfStatement [2261, 2303), i=534, next=30
              KindBinaryExpression [2271, 2277), i=535, next=27
                KindIdentifier "x" [2271, 2272), i=536, next=25
                KindEqualsEqualsToken [2272, 2275), i=537, next=26
                KindNumericLiteral [2275, 2277), i=538, next=0
              KindBlock [2278, 2303), i=539, next=0
                NodeList [2280, 2296), i=540, next=0
                  KindBreakStatement [2280, 2296), i=541, next=0
            KindIfStatement [2303, 2348), i=542, next=39
              KindBinaryExpression [2313, 2319), i=543, next=35
                KindIdentifier "x" [2313, 2314), i=544, next=33
                KindEqualsEqualsToken [2314, 2317), i=545, next=34
                KindNumericLiteral [2317, 2319), i=546, next=0
              KindBlock [2320, 2348), i=547, next=0
                NodeList [2322, 2341), i=548, next=0
                  KindBreakStatement [2322, 2341), i=549, next=0
                    KindIdentifier "l7" [2337, 2340), i=550, next=0
            KindIfStatement [2348, 2393), i=551, next=47
              KindBinaryExpression [2358, 2364), i=552, next=44
                KindIdentifier "x" [2358, 2359), i=553, next=42
                KindEqualsEqualsToken [2359, 2362), i=554, next=43
                KindNumericLiteral [2362, 2364), i=555, next=0
              KindBlock [2365, 2393), i=556, next=0
                NodeList [2367, 2386), i=557, next=0
                  KindContinueStatement [2367, 2386), i=558, next=0
            KindIfStatement [2393, 2441), i=559, next=0
              KindBinaryExpression [2403, 2409), i=560, next=52
                KindIdentifier "x" [2403, 2404), i=561, next=50
                KindEqualsEqualsToken [2404, 2407), i=562, next=51
                KindNumericLiteral [2407, 2409), i=563, next=0
              KindBlock [2410, 2441), i=564, next=0
                NodeList [2412, 2434), i=565, next=0
                  KindContinueStatement [2412, 2434), i=566, next=0
                    KindIdentifier "l7" [2430, 2433), i=567, next=0
        KindBinaryExpression [2452, 2459), i=568, next=0
          KindNumericLiteral [2452, 2453), i=569, next=58
          KindEqualsEqualsEqualsToken [2453, 2457), i=570, next=59
          KindNumericLiteral [2457, 2459), i=571, next=0
    KindLabeledStatement [2460, 2752), i=572, next=134
      KindIdentifier "l8" [2460, 2466), i=573, next=62
      KindForStatement [2467, 2752), i=574, next=0
        KindVariableDeclarationList [2474, 2483), i=575, next=68
          NodeList [2477, 2483), i=576, next=0
            KindVariableDeclaration [2477, 2483), i=577, next=0
              KindIdentifier "y" [2477, 2479), i=578, next=67
              KindNumericLiteral [2481, 2483), i=579, next=0
        KindBinaryExpression [2484, 2490), i=580, next=72
          KindIdentifier "y" [2484, 2486), i=581, next=70
          KindLessThanToken [2486, 2488), i=582, next=71
          KindNumericLiteral [2488, 2490), i=583, next=0
        KindPrefixUnaryExpression [2491, 2495), i=584, next=74
          KindIdentifier "y" [2494, 2495), i=585, next=0
        KindBlock [2496, 2752), i=586, next=0
          NodeList [2498, 2749), i=587, next=0
            KindVariableStatement [2498, 2514), i=588, next=82
              KindVariableDeclarationList [2498, 2513), i=589, next=0
                NodeList [2507, 2513), i=590, next=0
                  KindVariableDeclaration [2507, 2513), i=591, next=0
                    KindIdentifier "x" [2507, 2509), i=592, next=81
                    KindNumericLiteral [2511, 2513), i=593, next=0
            KindExpressionStatement [2514, 2549), i=594, next=92
              KindParenthesizedExpression [2514, 2548), i=595, next=0
                KindFunctionExpression [2521, 2547), i=596, next=0
                  KindBlock [2531, 2547), i=597, next=0
                    NodeList [2533, 2546), i=598, next=0
                      KindReturnStatement [2533, 2546), i=599, next=0
                        KindBinaryExpression [2540, 2546), i=600, next=0
                          KindIdentifier "x" [2540, 2542), i=601, next=90
                          KindPlusToken [2542, 2544), i=602, next=91
                          KindIdentifier "y" [2544, 2546), i=603, next=0
            KindExpressionStatement [2549, 2569), i=604, next=100
              KindParenthesizedExpression [2549, 2568), i=605, next=0
                KindArrowFunction [2556, 2567), i=606, next=0
                  KindEqualsGreaterThanToken [2558, 2561), i=607, next=96
                  KindBinaryExpression [2561, 2567), i=608, next=0
                    KindIdentifier "x" [2561, 2563), i=609, next=98
                    KindPlusToken [2563, 2565), i=610, next=99
                    KindIdentifier "y" [2565, 2567), i=611, next=0
            KindIfStatement [2569, 2611), i=612, next=108
              KindBinaryExpression [2579, 2585), i=613, next=105
                KindIdentifier "x" [2579, 2580), i=614, next=103
                KindEqualsEqualsToken [2580, 2583), i=615, next=104
                KindNumericLiteral [2583, 2585), i=616, next=0
              KindBlock [2586, 2611), i=617, next=0
                NodeList [2588, 2604), i=618, next=0
                  KindBreakStatement [2588, 2604), i=619, next=0
            KindIfStatement [2611, 2656), i=620, next=117
              KindBinaryExpression [2621, 2627), i=621, next=113
                KindIdentifier "x" [2621, 2622), i=622, next=111
                KindEqualsEqualsToken [2622, 2625), i=623, next=112
                KindNumericLiteral [2625, 2627), i=624, next=0
              KindBlock [2628, 2656), i=625, next=0
                NodeList [2630, 2649), i=626, next=0
                  KindBreakStatement [2630, 2649), i=627, next=0
                    KindIdentifier "l8" [2645, 2648), i=628, next=0
            KindIfStatement [2656, 2701), i=629, next=125
              KindBinaryExpression [2666, 2672), i=630, next=122
                KindIdentifier "x" [2666, 2667), i=631, next=120
                KindEqualsEqualsToken [2667, 2670), i=632, next=121
                KindNumericLiteral [2670, 2672), i=633, next=0
              KindBlock [2673, 2701), i=634, next=0
                NodeList [2675, 2694), i=635, next=0
                  KindContinueStatement [2675, 2694), i=636, next=0
            KindIfStatement [2701, 2749), i=637, next=0
              KindBinaryExpression [2711, 2717), i=638, next=130
                KindIdentifier "x" [2711, 2712), i=639, next=128
                KindEqualsEqualsToken [2712, 2715), i=640, next=129
                KindNumericLiteral [2715, 2717), i=641, next=0
              KindBlock [2718, 2749), i=642, next=0
                NodeList [2720, 2742), i=643, next=0
                  KindContinueStatement [2720, 2742), i=644, next=0
                    KindIdentifier "l8" [2738, 2741), i=645, next=0
    KindLabeledStatement [2752, 3030), i=646, next=190
      KindIdentifier "l0_c" [2752, 2772), i=647, next=136
      KindForOfStatement [2773, 3030), i=648, next=0
        KindVariableDeclarationList [2780, 2787), i=649, next=141
          NodeList [2785, 2787), i=650, next=0
            KindVariableDeclaration [2785, 2787), i=651, next=0
              KindIdentifier "x" [2785, 2787), i=652, next=0
        KindArrayLiteralExpression [2790, 2793), i=653, next=142
        KindBlock [2794, 3030), i=654, next=0
          NodeList [2796, 3027), i=655, next=0
            KindExpressionStatement [2796, 2827), i=656, next=151
              KindParenthesizedExpression [2796, 2826), i=657, next=0
                KindFunctionExpression [2803, 2825), i=658, next=0
                  KindBlock [2813, 2825), i=659, next=0
                    NodeList [2815, 2824), i=660, next=0
                      KindReturnStatement [2815, 2824), i=661, next=0
                        KindIdentifier "x" [2822, 2824), i=662, next=0
            KindExpressionStatement [2827, 2843), i=663, next=156
              KindParenthesizedExpression [2827, 2842), i=664, next=0
                KindArrowFunction [2834, 2841), i=665, next=0
                  KindEqualsGreaterThanToken [2836, 2839), i=666, next=155
                  KindIdentifier "x" [2839, 2841), i=667, next=0
            KindIfStatement [2843, 2885), i=668, next=164
              KindBinaryExpression [2853, 2859), i=669, next=161
                KindIdentifier "x" [2853, 2854), i=670, next=159
                KindEqualsEqualsToken [2854, 2857), i=671, next=160
                KindNumericLiteral [2857, 2859), i=672, next=0
              KindBlock [2860, 2885), i=673, next=0
                NodeList [2862, 2878), i=674, next=0
                  KindBreakStatement [2862, 2878), i=675, next=0
            KindIfStatement [2885, 2932), i=676, next=173
              KindBinaryExpression [2895, 2901), i=677, next=169
                KindIdentifier "x" [2895, 2896), i=678, next=167
                KindEqualsEqualsToken [2896, 2899), i=679, next=168
                KindNumericLiteral [2899, 2901), i=680, next=0
              KindBlock [2902, 2932), i=681, next=0
                NodeList [2904, 2925), i=682, next=0
                  KindBreakStatement [2904, 2925), i=683, next=0
                    KindIdentifier "l0_c" [2919, 2924), i=684, next=0
            KindIfStatement [2932, 2977), i=685, next=181
              KindBinaryExpression [2942, 2948), i=686, next=178
                KindIdentifier "x" [2942, 2943), i=687, next=176
                KindEqualsEqualsToken [2943, 2946), i=688, next=177
                KindNumericLiteral [2946, 2948), i=689, next=0
              KindBlock [2949, 2977), i=690, next=0
                NodeList [2951, 2970), i=691, next=0
                  KindContinueStatement [2951, 2970), i=692, next=0
            KindIfStatement [2977, 3027), i=693, next=0
              KindBinaryExpression [2987, 2993), i=694, next=186
                KindIdentifier "x" [2987, 2988), i=695, next=184
                KindEqualsEqualsToken [2988, 2991), i=696, next=185
                KindNumericLiteral [2991, 2993), i=697, next=0
              KindBlock [2994, 3027), i=698, next=0
                NodeList [2996, 3020), i=699, next=0
                  KindContinueStatement [2996, 3020), i=700, next=0
                    KindIdentifier "l0_c" [3014, 3019), i=701, next=0
    KindLabeledStatement [3030, 3307), i=702, next=246
      KindIdentifier "l00_c" [3030, 3039), i=703, next=192
      KindForInStatement [3040, 3307), i=704, next=0
        KindVariableDeclarationList [3047, 3054), i=705, next=197
          NodeList [3052, 3054), i=706, next=0
            KindVariableDeclaration [3052, 3054), i=707, next=0
              KindIdentifier "x" [3052, 3054), i=708, next=0
        KindArrayLiteralExpression [3057, 3060), i=709, next=198
        KindBlock [3061, 3307), i=710, next=0
          NodeList [3063, 3304), i=711, next=0
            KindExpressionStatement [3063, 3094), i=712, next=207
              KindParenthesizedExpression [3063, 3093), i=713, next=0
                KindFunctionExpression [3070, 3092), i=714, next=0
                  KindBlock [3080, 3092), i=715, next=0
                    NodeList [3082, 3091), i=716, next=0
                      KindReturnStatement [3082, 3091), i=717, next=0
                        KindIdentifier "x" [3089, 3091), i=718, next=0
            KindExpressionStatement [3094, 3110), i=719, next=212
              KindParenthesizedExpression [3094, 3109), i=720, next=0
                KindArrowFunction [3101, 3108), i=721, next=0
                  KindEqualsGreaterThanToken [3103, 3106), i=722, next=211
                  KindIdentifier "x" [3106, 3108), i=723, next=0
            KindIfStatement [3110, 3154), i=724, next=220
              KindBinaryExpression [3120, 3128), i=725, next=217
                KindIdentifier "x" [3120, 3121), i=726, next=215
                KindEqualsEqualsToken [3121, 3124), i=727, next=216
                KindStringLiteral "1" [3124, 3128), i=728, next=0
              KindBlock [3129, 3154), i=729, next=0
                NodeList [3131, 3147), i=730, next=0
                  KindBreakStatement [3131, 3147), i=731, next=0
            KindIfStatement [3154, 3204), i=732, next=229
              KindBinaryExpression [3164, 3172), i=733, next=225
                KindIdentifier "x" [3164, 3165), i=734, next=223
                KindEqualsEqualsToken [3165, 3168), i=735, next=224
                KindStringLiteral "1" [3168, 3172), i=736, next=0
              KindBlock [3173, 3204), i=737, next=0
                NodeList [3175, 3197), i=738, next=0
                  KindBreakStatement [3175, 3197), i=739, next=0
                    KindIdentifier "l00_c" [3190, 3196), i=740, next=0
            KindIfStatement [3204, 3251), i=741, next=237
              KindBinaryExpression [3214, 3222), i=742, next=234
                KindIdentifier "x" [3214, 3215), i=743, next=232
                KindEqualsEqualsToken [3215, 3218), i=744, next=233
                KindStringLiteral "2" [3218, 3222), i=745, next=0
              KindBlock [3223, 3251), i=746, next=0
                NodeList [3225, 3244), i=747, next=0
                  KindContinueStatement [3225, 3244), i=748, next=0
            KindIfStatement [3251, 3304), i=749, next=0
              KindBinaryExpression [3261, 3269), i=750, next=242
                KindIdentifier "x" [3261, 3262), i=751, next=240
                KindEqualsEqualsToken [3262, 3265), i=752, next=241
                KindStringLiteral "2" [3265, 3269), i=753, next=0
              KindBlock [3270, 3304), i=754, next=0
                NodeList [3272, 3297), i=755, next=0
                  KindContinueStatement [3272, 3297), i=756, next=0
                    KindIdentifier "l00_c" [3290, 3296), i=757, next=0
    KindLabeledStatement [3307, 3579), i=758, next=50
      KindIdentifier "l1_c" [3307, 3315), i=759, next=248
      KindForStatement [3316, 3579), i=760, next=0
        KindVariableDeclarationList [3323, 3334), i=761, next=254
          NodeList [3328, 3334), i=762, next=0
            KindVariableDeclaration [3328, 3334), i=763, next=0
              KindIdentifier "x" [3328, 3330), i=764, next=253
              KindNumericLiteral [3332, 3334), i=765, next=0
        KindBinaryExpression [3335, 3341), i=766, next=2
          KindIdentifier "x" [3335, 3337), i=767, next=0
          KindLessThanToken [3337, 3339), i=768, next=1
          KindNumericLiteral [3339, 3341), i=769, next=0
        KindBlock [3343, 3579), i=770, next=0
          NodeList [3345, 3576), i=771, next=0
            KindExpressionStatement [3345, 3376), i=772, next=11
              KindParenthesizedExpression [3345, 3375), i=773, next=0
                KindFunctionExpression [3352, 3374), i=774, next=0
                  KindBlock [3362, 3374), i=775, next=0
                    NodeList [3364, 3373), i=776, next=0
                      KindReturnStatement [3364, 3373), i=777, next=0
                        KindIdentifier "x" [3371, 3373), i=778, next=0
            KindExpressionStatement [3376, 3392), i=779, next=16
              KindParenthesizedExpression [3376, 3391), i=780, next=0
                KindArrowFunction [3383, 3390), i=781, next=0
                  KindEqualsGreaterThanToken [3385, 3388), i=782, next=15
                  KindIdentifier "x" [3388, 3390), i=783, next=0
            KindIfStatement [3392, 3434), i=784, next=24
              KindBinaryExpression [3402, 3408), i=785, next=21
                KindIdentifier "x" [3402, 3403), i=786, next=19
                KindEqualsEqualsToken [3403, 3406), i=787, next=20
                KindNumericLiteral [3406, 3408), i=788, next=0
              KindBlock [3409, 3434), i=789, next=0
                NodeList [3411, 3427), i=790, next=0
                  KindBreakStatement [3411, 3427), i=791, next=0
            KindIfStatement [3434, 3481), i=792, next=33
              KindBinaryExpression [3444, 3450), i=793, next=29
                KindIdentifier "x" [3444, 3445), i=794, next=27
                KindEqualsEqualsToken [3445, 3448), i=795, next=28
                KindNumericLiteral [3448, 3450), i=796, next=0
              KindBlock [3451, 3481), i=797, next=0
                NodeList [3453, 3474), i=798, next=0
                  KindBreakStatement [3453, 3474), i=799, next=0
                    KindIdentifier "l1_c" [3468, 3473), i=800, next=0
            KindIfStatement [3481, 3526), i=801, next=41
              KindBinaryExpression [3491, 3497), i=802, next=38
                KindIdentifier "x" [3491, 3492), i=803, next=36
                KindEqualsEqualsToken [3492, 3495), i=804, next=37
                KindNumericLiteral [3495, 3497), i=805, next=0
              KindBlock [3498, 3526), i=806, next=0
                NodeList [3500, 3519), i=807, next=0
                  KindContinueStatement [3500, 3519), i=808, next=0
            KindIfStatement [3526, 3576), i=809, next=0
              KindBinaryExpression [3536, 3542), i=810, next=46
                KindIdentifier "x" [3536, 3537), i=811, next=44
                KindEqualsEqualsToken [3537, 3540), i=812, next=45
                KindNumericLiteral [3540, 3542), i=813, next=0
              KindBlock [3543, 3576), i=814, next=0
                NodeList [3545, 3569), i=815, next=0
                  KindContinueStatement [3545, 3569), i=816, next=0
                    KindIdentifier "l1_c" [3563, 3568), i=817, next=0
    KindLabeledStatement [3579, 3859), i=818, next=111
      KindIdentifier "l2_c" [3579, 3587), i=819, next=52
      KindWhileStatement [3588, 3859), i=820, next=0
        KindBinaryExpression [3597, 3604), i=821, next=57
          KindNumericLiteral [3597, 3598), i=822, next=55
          KindEqualsEqualsEqualsToken [3598, 3602), i=823, next=56
          KindNumericLiteral [3602, 3604), i=824, next=0
        KindBlock [3605, 3859), i=825, next=0
          NodeList [3607, 3856), i=826, next=0
            KindVariableStatement [3607, 3625), i=827, next=65
              KindVariableDeclarationList [3607, 3624), i=828, next=0
                NodeList [3618, 3624), i=829, next=0
                  KindVariableDeclaration [3618, 3624), i=830, next=0
                    KindIdentifier "x" [3618, 3620), i=831, next=64
                    KindNumericLiteral [3622, 3624), i=832, next=0
            KindExpressionStatement [3625, 3656), i=833, next=72
              KindParenthesizedExpression [3625, 3655), i=834, next=0
                KindFunctionExpression [3632, 3654), i=835, next=0
                  KindBlock [3642, 3654), i=836, next=0
                    NodeList [3644, 3653), i=837, next=0
                      KindReturnStatement [3644, 3653), i=838, next=0
                        KindIdentifier "x" [3651, 3653), i=839, next=0
            KindExpressionStatement [3656, 3672), i=840, next=77
              KindParenthesizedExpression [3656, 3671), i=841, next=0
                KindArrowFunction [3663, 3670), i=842, next=0
                  KindEqualsGreaterThanToken [3665, 3668), i=843, next=76
                  KindIdentifier "x" [3668, 3670), i=844, next=0
            KindIfStatement [3672, 3714), i=845, next=85
              KindBinaryExpression [3682, 3688), i=846, next=82
                KindIdentifier "x" [3682, 3683), i=847, next=80
                KindEqualsEqualsToken [3683, 3686), i=848, next=81
                KindNumericLiteral [3686, 3688), i=849, next=0
              KindBlock [3689, 3714), i=850, next=0
                NodeList [3691, 3707), i=851, next=0
                  KindBreakStatement [3691, 3707), i=852, next=0
            KindIfStatement [3714, 3761), i=853, next=94
              KindBinaryExpression [3724, 3730), i=854, next=90
                KindIdentifier "x" [3724, 3725), i=855, next=88
                KindEqualsEqualsToken [3725, 3728), i=856, next=89
                KindNumericLiteral [3728, 3730), i=857, next=0
              KindBlock [3731, 3761), i=858, next=0
                NodeList [3733, 3754), i=859, next=0
                  KindBreakStatement [3733, 3754), i=860, next=0
                    KindIdentifier "l2_c" [3748, 3753), i=861, next=0
            KindIfStatement [3761, 3806), i=862, next=102
              KindBinaryExpression [3771, 3777), i=863, next=99
                KindIdentifier "x" [3771, 3772), i=864, next=97
                KindEqualsEqualsToken [3772, 3775), i=865, next=98
                KindNumericLiteral [3775, 3777), i=866, next=0
              KindBlock [3778, 3806), i=867, next=0
                NodeList [3780, 3799), i=868, next=0
                  KindContinueStatement [3780, 3799), i=869, next=0
            KindIfStatement [3806, 3856), i=870, next=0
              KindBinaryExpression [3816, 3822), i=871, next=107
                KindIdentifier "x" [3816, 3817), i=872, next=105
                KindEqualsEqualsToken [3817, 3820), i=873, next=106
                KindNumericLiteral [3820, 3822), i=874, next=0
              KindBlock [3823, 3856), i=875, next=0
                NodeList [3825, 3849), i=876, next=0
                  KindContinueStatement [3825, 3849), i=877, next=0
                    KindIdentifier "l2_c" [3843, 3848), i=878, next=0
    KindLabeledStatement [3859, 4142), i=879, next=172
      KindIdentifier "l3_c" [3859, 3867), i=880, next=113
      KindDoStatement [3868, 4142), i=881, next=0
        KindBlock [3872, 4126), i=882, next=168
          NodeList [3874, 4123), i=883, next=0
            KindVariableStatement [3874, 3892), i=884, next=122
              KindVariableDeclarationList [3874, 3891), i=885, next=0
                NodeList [3885, 3891), i=886, next=0
                  KindVariableDeclaration [3885, 3891), i=887, next=0
                    KindIdentifier "x" [3885, 3887), i=888, next=121
                    KindNumericLiteral [3889, 3891), i=889, next=0
            KindExpressionStatement [3892, 3923), i=890, next=129
              KindParenthesizedExpression [3892, 3922), i=891, next=0
                KindFunctionExpression [3899, 3921), i=892, next=0
                  KindBlock [3909, 3921), i=893, next=0
                    NodeList [3911, 3920), i=894, next=0
                      KindReturnStatement [3911, 3920), i=895, next=0
                        KindIdentifier "x" [3918, 3920), i=896, next=0
            KindExpressionStatement [3923, 3939), i=897, next=134
              KindParenthesizedExpression [3923, 3938), i=898, next=0
                KindArrowFunction [3930, 3937), i=899, next=0
                  KindEqualsGreaterThanToken [3932, 3935), i=900, next=133
                  KindIdentifier "x" [3935, 3937), i=901, next=0
            KindIfStatement [3939, 3981), i=902, next=142
              KindBinaryExpression [3949, 3955), i=903, next=139
                KindIdentifier "x" [3949, 3950), i=904, next=137
                KindEqualsEqualsToken [3950, 3953), i=905, next=138
                KindNumericLiteral [3953, 3955), i=906, next=0
              KindBlock [3956, 3981), i=907, next=0
                NodeList [3958, 3974), i=908, next=0
                  KindBreakStatement [3958, 3974), i=909, next=0
            KindIfStatement [3981, 4028), i=910, next=151
              KindBinaryExpression [3991, 3997), i=911, next=147
                KindIdentifier "x" [3991, 3992), i=912, next=145
                KindEqualsEqualsToken [3992, 3995), i=913, next=146
                KindNumericLiteral [3995, 3997), i=914, next=0
              KindBlock [3998, 4028), i=915, next=0
                NodeList [4000, 4021), i=916, next=0
                  KindBreakStatement [4000, 4021), i=917, next=0
                    KindIdentifier "l3_c" [4015, 4020), i=918, next=0
            KindIfStatement [4028, 4073), i=919, next=159
              KindBinaryExpression [4038, 4044), i=920, next=156
                KindIdentifier "x" [4038, 4039), i=921, next=154
                KindEqualsEqualsToken [4039, 4042), i=922, next=155
                KindNumericLiteral [4042, 4044), i=923, next=0
              KindBlock [4045, 4073), i=924, next=0
                NodeList [4047, 4066), i=925, next=0
                  KindContinueStatement [4047, 4066), i=926, next=0
            KindIfStatement [4073, 4123), i=927, next=0
              KindBinaryExpression [4083, 4089), i=928, next=164
                KindIdentifier "x" [4083, 4084), i=929, next=162
                KindEqualsEqualsToken [4084, 4087), i=930, next=163
                KindNumericLiteral [4087, 4089), i=931, next=0
              KindBlock [4090, 4123), i=932, next=0
                NodeList [4092, 4116), i=933, next=0
                  KindContinueStatement [4092, 4116), i=934, next=0
                    KindIdentifier "l3_c" [4110, 4115), i=935, next=0
        KindBinaryExpression [4134, 4141), i=936, next=0
          KindNumericLiteral [4134, 4135), i=937, next=170
          KindEqualsEqualsEqualsToken [4135, 4139), i=938, next=171
          KindNumericLiteral [4139, 4141), i=939, next=0
    KindLabeledStatement [4142, 4432), i=940, next=238
      KindIdentifier "l4_c" [4142, 4150), i=941, next=174
      KindForStatement [4151, 4432), i=942, next=0
        KindVariableDeclarationList [4158, 4169), i=943, next=180
          NodeList [4163, 4169), i=944, next=0
            KindVariableDeclaration [4163, 4169), i=945, next=0
              KindIdentifier "y" [4163, 4165), i=946, next=179
              KindNumericLiteral [4167, 4169), i=947, next=0
        KindBinaryExpression [4170, 4176), i=948, next=184
          KindIdentifier "y" [4170, 4172), i=949, next=182
          KindLessThanToken [4172, 4174), i=950, next=183
          KindNumericLiteral [4174, 4176), i=951, next=0
        KindBlock [4178, 4432), i=952, next=0
          NodeList [4180, 4429), i=953, next=0
            KindVariableStatement [4180, 4198), i=954, next=192
              KindVariableDeclarationList [4180, 4197), i=955, next=0
                NodeList [4191, 4197), i=956, next=0
                  KindVariableDeclaration [4191, 4197), i=957, next=0
                    KindIdentifier "x" [4191, 4193), i=958, next=191
                    KindNumericLiteral [4195, 4197), i=959, next=0
            KindExpressionStatement [4198, 4229), i=960, next=199
              KindParenthesizedExpression [4198, 4228), i=961, next=0
                KindFunctionExpression [4205, 4227), i=962, next=0
                  KindBlock [4215, 4227), i=963, next=0
                    NodeList [4217, 4226), i=964, next=0
                      KindReturnStatement [4217, 4226), i=965, next=0
                        KindIdentifier "x" [4224, 4226), i=966, next=0
            KindExpressionStatement [4229, 4245), i=967, next=204
              KindParenthesizedExpression [4229, 4244), i=968, next=0
                KindArrowFunction [4236, 4243), i=969, next=0
                  KindEqualsGreaterThanToken [4238, 4241), i=970, next=203
                  KindIdentifier "x" [4241, 4243), i=971, next=0
            KindIfStatement [4245, 4287), i=972, next=212
              KindBinaryExpression [4255, 4261), i=973, next=209
                KindIdentifier "x" [4255, 4256), i=974, next=207
                KindEqualsEqualsToken [4256, 4259), i=975, next=208
                KindNumericLiteral [4259, 4261), i=976, next=0
              KindBlock [4262, 4287), i=977, next=0
                NodeList [4264, 4280), i=978, next=0
                  KindBreakStatement [4264, 4280), i=979, next=0
            KindIfStatement [4287, 4334), i=980, next=221
              KindBinaryExpression [4297, 4303), i=981, next=217
                KindIdentifier "x" [4297, 4298), i=982, next=215
                KindEqualsEqualsToken [4298, 4301), i=983, next=216
                KindNumericLiteral [4301, 4303), i=984, next=0
              KindBlock [4304, 4334), i=985, next=0
                NodeList [4306, 4327), i=986, next=0
                  KindBreakStatement [4306, 4327), i=987, next=0
                    KindIdentifier "l4_c" [4321, 4326), i=988, next=0
            KindIfStatement [4334, 4379), i=989, next=229
              KindBinaryExpression [4344, 4350), i=990, next=226
                KindIdentifier "x" [4344, 4345), i=991, next=224
                KindEqualsEqualsToken [4345, 4348), i=992, next=225
                KindNumericLiteral [4348, 4350), i=993, next=0
              KindBlock [4351, 4379), i=994, next=0
                NodeList [4353, 4372), i=995, next=0
                  KindContinueStatement [4353, 4372), i=996, next=0
            KindIfStatement [4379, 4429), i=997, next=0
              KindBinaryExpression [4389, 4395), i=998, next=234
                KindIdentifier "x" [4389, 4390), i=999, next=232
                KindEqualsEqualsToken [4390, 4393), i=1000, next=233
                KindNumericLiteral [4393, 4395), i=1001, next=0
              KindBlock [4396, 4429), i=1002, next=0
                NodeList [4398, 4422), i=1003, next=0
                  KindContinueStatement [4398, 4422), i=1004, next=0
                    KindIdentifier "l4_c" [4416, 4421), i=1005, next=0
    KindLabeledStatement [4432, 4719), i=1006, next=51
      KindIdentifier "l5_c" [4432, 4440), i=1007, next=240
      KindForStatement [4441, 4719), i=1008, next=0
        KindVariableDeclarationList [4448, 4466), i=1009, next=249
          NodeList [4453, 4466), i=1010, next=0
            KindVariableDeclaration [4453, 4459), i=1011, next=246
              KindIdentifier "x" [4453, 4455), i=1012, next=245
              KindNumericLiteral [4457, 4459), i=1013, next=0
            KindVariableDeclaration [4460, 4466), i=1014, next=0
              KindIdentifier "y" [4460, 4462), i=1015, next=248
              KindNumericLiteral [4464, 4466), i=1016, next=0
        KindBinaryExpression [4467, 4473), i=1017, next=253
          KindIdentifier "x" [4467, 4469), i=1018, next=251
          KindLessThanToken [4469, 4471), i=1019, next=252
          KindNumericLiteral [4471, 4473), i=1020, next=0
        KindBlock [4475, 4719), i=1021, next=0
          NodeList [4477, 4716), i=1022, next=0
            KindExpressionStatement [4477, 4512), i=1023, next=9
              KindParenthesizedExpression [4477, 4511), i=1024, next=0
                KindFunctionExpression [4484, 4510), i=1025, next=0
                  KindBlock [4494, 4510), i=1026, next=0
                    NodeList [4496, 4509), i=1027, next=0
                      KindReturnStatement [4496, 4509), i=1028, next=0
                        KindBinaryExpression [4503, 4509), i=1029, next=0
                          KindIdentifier "x" [4503, 4505), i=1030, next=7
                          KindPlusToken [4505, 4507), i=1031, next=8
                          KindIdentifier "y" [4507, 4509), i=1032, next=0
            KindExpressionStatement [4512, 4532), i=1033, next=17
              KindParenthesizedExpression [4512, 4531), i=1034, next=0
                KindArrowFunction [4519, 4530), i=1035, next=0
                  KindEqualsGreaterThanToken [4521, 4524), i=1036, next=13
                  KindBinaryExpression [4524, 4530), i=1037, next=0
                    KindIdentifier "x" [4524, 4526), i=1038, next=15
                    KindPlusToken [4526, 4528), i=1039, next=16
                    KindIdentifier "y" [4528, 4530), i=1040, next=0
            KindIfStatement [4532, 4574), i=1041, next=25
              KindBinaryExpression [4542, 4548), i=1042, next=22
                KindIdentifier "x" [4542, 4543), i=1043, next=20
                KindEqualsEqualsToken [4543, 4546), i=1044, next=21
                KindNumericLiteral [4546, 4548), i=1045, next=0
              KindBlock [4549, 4574), i=1046, next=0
                NodeList [4551, 4567), i=1047, next=0
                  KindBreakStatement [4551, 4567), i=1048, next=0
            KindIfStatement [4574, 4621), i=1049, next=34
              KindBinaryExpression [4584, 4590), i=1050, next=30
                KindIdentifier "x" [4584, 4585), i=1051, next=28
                KindEqualsEqualsToken [4585, 4588), i=1052, next=29
                KindNumericLiteral [4588, 4590), i=1053, next=0
              KindBlock [4591, 4621), i=1054, next=0
                NodeList [4593, 4614), i=1055, next=0
                  KindBreakStatement [4593, 4614), i=1056, next=0
                    KindIdentifier "l5_c" [4608, 4613), i=1057, next=0
            KindIfStatement [4621, 4666), i=1058, next=42
              KindBinaryExpression [4631, 4637), i=1059, next=39
                KindIdentifier "x" [4631, 4632), i=1060, next=37
                KindEqualsEqualsToken [4632, 4635), i=1061, next=38
                KindNumericLiteral [4635, 4637), i=1062, next=0
              KindBlock [4638, 4666), i=1063, next=0
                NodeList [4640, 4659), i=1064, next=0
                  KindContinueStatement [4640, 4659), i=1065, next=0
            KindIfStatement [4666, 4716), i=1066, next=0
              KindBinaryExpression [4676, 4682), i=1067, next=47
                KindIdentifier "x" [4676, 4677), i=1068, next=45
                KindEqualsEqualsToken [4677, 4680), i=1069, next=46
                KindNumericLiteral [4680, 4682), i=1070, next=0
              KindBlock [4683, 4716), i=1071, next=0
                NodeList [4685, 4709), i=1072, next=0
                  KindContinueStatement [4685, 4709), i=1073, next=0
                    KindIdentifier "l5_c" [4703, 4708), i=1074, next=0
    KindLabeledStatement [4719, 5016), i=1075, next=121
      KindIdentifier "l6_c" [4719, 4727), i=1076, next=53
      KindWhileStatement [4728, 5016), i=1077, next=0
        KindBinaryExpression [4737, 4744), i=1078, next=58
          KindNumericLiteral [4737, 4738), i=1079, next=56
          KindEqualsEqualsEqualsToken [4738, 4742), i=1080, next=57
          KindNumericLiteral [4742, 4744), i=1081, next=0
        KindBlock [4745, 5016), i=1082, next=0
          NodeList [4747, 5011), i=1083, next=0
            KindVariableStatement [4747, 4772), i=1084, next=69
              KindVariableDeclarationList [4747, 4771), i=1085, next=0
                NodeList [4758, 4771), i=1086, next=0
                  KindVariableDeclaration [4758, 4764), i=1087, next=66
                    KindIdentifier "x" [4758, 4760), i=1088, next=65
                    KindNumericLiteral [4762, 4764), i=1089, next=0
                  KindVariableDeclaration [4765, 4771), i=1090, next=0
                    KindIdentifier "y" [4765, 4767), i=1091, next=68
                    KindNumericLiteral [4769, 4771), i=1092, next=0
            KindExpressionStatement [4772, 4807), i=1093, next=79
              KindParenthesizedExpression [4772, 4806), i=1094, next=0
                KindFunctionExpression [4779, 4805), i=1095, next=0
                  KindBlock [4789, 4805), i=1096, next=0
                    NodeList [4791, 4804), i=1097, next=0
                      KindReturnStatement [4791, 4804), i=1098, next=0
                        KindBinaryExpression [4798, 4804), i=1099, next=0
                          KindIdentifier "x" [4798, 4800), i=1100, next=77
                          KindPlusToken [4800, 4802), i=1101, next=78
                          KindIdentifier "y" [4802, 4804), i=1102, next=0
            KindExpressionStatement [4807, 4827), i=1103, next=87
              KindParenthesizedExpression [4807, 4826), i=1104, next=0
                KindArrowFunction [4814, 4825), i=1105, next=0
                  KindEqualsGreaterThanToken [4816, 4819), i=1106, next=83
                  KindBinaryExpression [4819, 4825), i=1107, next=0
                    KindIdentifier "x" [4819, 4821), i=1108, next=85
                    KindPlusToken [4821, 4823), i=1109, next=86
                    KindIdentifier "y" [4823, 4825), i=1110, next=0
            KindIfStatement [4827, 4869), i=1111, next=95
              KindBinaryExpression [4837, 4843), i=1112, next=92
                KindIdentifier "x" [4837, 4838), i=1113, next=90
                KindEqualsEqualsToken [4838, 4841), i=1114, next=91
                KindNumericLiteral [4841, 4843), i=1115, next=0
              KindBlock [4844, 4869), i=1116, next=0
                NodeList [4846, 4862), i=1117, next=0
                  KindBreakStatement [4846, 4862), i=1118, next=0
            KindIfStatement [4869, 4916), i=1119, next=104
              KindBinaryExpression [4879, 4885), i=1120, next=100
                KindIdentifier "x" [4879, 4880), i=1121, next=98
                KindEqualsEqualsToken [4880, 4883), i=1122, next=99
                KindNumericLiteral [4883, 4885), i=1123, next=0
              KindBlock [4886, 4916), i=1124, next=0
                NodeList [4888, 4909), i=1125, next=0
                  KindBreakStatement [4888, 4909), i=1126, next=0
                    KindIdentifier "l6_c" [4903, 4908), i=1127, next=0
            KindIfStatement [4916, 4961), i=1128, next=112
              KindBinaryExpression [4926, 4932), i=1129, next=109
                KindIdentifier "x" [4926, 4927), i=1130, next=107
                KindEqualsEqualsToken [4927, 4930), i=1131, next=108
                KindNumericLiteral [4930, 4932), i=1132, next=0
              KindBlock [4933, 4961), i=1133, next=0
                NodeList [4935, 4954), i=1134, next=0
                  KindContinueStatement [4935, 4954), i=1135, next=0
            KindIfStatement [4961, 5011), i=1136, next=0
              KindBinaryExpression [4971, 4977), i=1137, next=117
                KindIdentifier "x" [4971, 4972), i=1138, next=115
                KindEqualsEqualsToken [4972, 4975), i=1139, next=116
                KindNumericLiteral [4975, 4977), i=1140, next=0
              KindBlock [4978, 5011), i=1141, next=0
                NodeList [4980, 5004), i=1142, next=0
                  KindContinueStatement [4980, 5004), i=1143, next=0
                    KindIdentifier "l6_c" [4998, 5003), i=1144, next=0
    KindLabeledStatement [5016, 5314), i=1145, next=191
      KindIdentifier "l7_c" [5016, 5024), i=1146, next=123
      KindDoStatement [5025, 5314), i=1147, next=0
        KindBlock [5029, 5298), i=1148, next=187
          NodeList [5031, 5295), i=1149, next=0
            KindVariableStatement [5031, 5056), i=1150, next=135
              KindVariableDeclarationList [5031, 5055), i=1151, next=0
                NodeList [5042, 5055), i=1152, next=0
                  KindVariableDeclaration [5042, 5048), i=1153, next=132
                    KindIdentifier "x" [5042, 5044), i=1154, next=131
                    KindNumericLiteral [5046, 5048), i=1155, next=0
                  KindVariableDeclaration [5049, 5055), i=1156, next=0
                    KindIdentifier "y" [5049, 5051), i=1157, next=134
                    KindNumericLiteral [5053, 5055), i=1158, next=0
            KindExpressionStatement [5056, 5091), i=1159, next=145
              KindParenthesizedExpression [5056, 5090), i=1160, next=0
                KindFunctionExpression [5063, 5089), i=1161, next=0
                  KindBlock [5073, 5089), i=1162, next=0
                    NodeList [5075, 5088), i=1163, next=0
                      KindReturnStatement [5075, 5088), i=1164, next=0
                        KindBinaryExpression [5082, 5088), i=1165, next=0
                          KindIdentifier "x" [5082, 5084), i=1166, next=143
                          KindPlusToken [5084, 5086), i=1167, next=144
                          KindIdentifier "y" [5086, 5088), i=1168, next=0
            KindExpressionStatement [5091, 5111), i=1169, next=153
              KindParenthesizedExpression [5091, 5110), i=1170, next=0
                KindArrowFunction [5098, 5109), i=1171, next=0
                  KindEqualsGreaterThanToken [5100, 5103), i=1172, next=149
                  KindBinaryExpression [5103, 5109), i=1173, next=0
                    KindIdentifier "x" [5103, 5105), i=1174, next=151
                    KindPlusToken [5105, 5107), i=1175, next=152
                    KindIdentifier "y" [5107, 5109), i=1176, next=0
            KindIfStatement [5111, 5153), i=1177, next=161
              KindBinaryExpression [5121, 5127), i=1178, next=158
                KindIdentifier "x" [5121, 5122), i=1179, next=156
                KindEqualsEqualsToken [5122, 5125), i=1180, next=157
                KindNumericLiteral [5125, 5127), i=1181, next=0
              KindBlock [5128, 5153), i=1182, next=0
                NodeList [5130, 5146), i=1183, next=0
                  KindBreakStatement [5130, 5146), i=1184, next=0
            KindIfStatement [5153, 5200), i=1185, next=170
              KindBinaryExpression [5163, 5169), i=1186, next=166
                KindIdentifier "x" [5163, 5164), i=1187, next=164
                KindEqualsEqualsToken [5164, 5167), i=1188, next=165
                KindNumericLiteral [5167, 5169), i=1189, next=0
              KindBlock [5170, 5200), i=1190, next=0
                NodeList [5172, 5193), i=1191, next=0
                  KindBreakStatement [5172, 5193), i=1192, next=0
                    KindIdentifier "l7_c" [5187, 5192), i=1193, next=0
            KindIfStatement [5200, 5245), i=1194, next=178
              KindBinaryExpression [5210, 5216), i=1195, next=175
                KindIdentifier "x" [5210, 5211), i=1196, next=173
                KindEqualsEqualsToken [5211, 5214), i=1197, next=174
                KindNumericLiteral [5214, 5216), i=1198, next=0
              KindBlock [5217, 5245), i=1199, next=0
                NodeList [5219, 5238), i=1200, next=0
                  KindContinueStatement [5219, 5238), i=1201, next=0
            KindIfStatement [5245, 5295), i=1202, next=0
              KindBinaryExpression [5255, 5261), i=1203, next=183
                KindIdentifier "x" [5255, 5256), i=1204, next=181
                KindEqualsEqualsToken [5256, 5259), i=1205, next=182
                KindNumericLiteral [5259, 5261), i=1206, next=0
              KindBlock [5262, 5295), i=1207, next=0
                NodeList [5264, 5288), i=1208, next=0
                  KindContinueStatement [5264, 5288), i=1209, next=0
                    KindIdentifier "l7_c" [5282, 5287), i=1210, next=0
        KindBinaryExpression [5306, 5313), i=1211, next=0
          KindNumericLiteral [5306, 5307), i=1212, next=189
          KindEqualsEqualsEqualsToken [5307, 5311), i=1213, next=190
          KindNumericLiteral [5311, 5313), i=1214, next=0
    KindLabeledStatement [5314, 5612), i=1215, next=0
      KindIdentifier "l8_c" [5314, 5322), i=1216, next=193
      KindForStatement [5323, 5612), i=1217, next=0
        KindVariableDeclarationList [5330, 5341), i=1218, next=199
          NodeList [5335, 5341), i=1219, next=0
            KindVariableDeclaration [5335, 5341), i=1220, next=0
              KindIdentifier "y" [5335, 5337), i=1221, next=198
              KindNumericLiteral [5339, 5341), i=1222, next=0
        KindBinaryExpression [5342, 5348), i=1223, next=203
          KindIdentifier "y" [5342, 5344), i=1224, next=201
          KindLessThanToken [5344, 5346), i=1225, next=202
          KindNumericLiteral [5346, 5348), i=1226, next=0
        KindBlock [5350, 5612), i=1227, next=0
          NodeList [5352, 5609), i=1228, next=0
            KindVariableStatement [5352, 5370), i=1229, next=211
              KindVariableDeclarationList [5352, 5369), i=1230, next=0
                NodeList [5363, 5369), i=1231, next=0
                  KindVariableDeclaration [5363, 5369), i=1232, next=0
                    KindIdentifier "x" [5363, 5365), i=1233, next=210
                    KindNumericLiteral [5367, 5369), i=1234, next=0
            KindExpressionStatement [5370, 5405), i=1235, next=221
              KindParenthesizedExpression [5370, 5404), i=1236, next=0
                KindFunctionExpression [5377, 5403), i=1237, next=0
                  KindBlock [5387, 5403), i=1238, next=0
                    NodeList [5389, 5402), i=1239, next=0
                      KindReturnStatement [5389, 5402), i=1240, next=0
                        KindBinaryExpression [5396, 5402), i=1241, next=0
                          KindIdentifier "x" [5396, 5398), i=1242, next=219
                          KindPlusToken [5398, 5400), i=1243, next=220
                          KindIdentifier "y" [5400, 5402), i=1244, next=0
            KindExpressionStatement [5405, 5425), i=1245, next=229
              KindParenthesizedExpression [5405, 5424), i=1246, next=0
                KindArrowFunction [5412, 5423), i=1247, next=0
                  KindEqualsGreaterThanToken [5414, 5417), i=1248, next=225
                  KindBinaryExpression [5417, 5423), i=1249, next=0
                    KindIdentifier "x" [5417, 5419), i=1250, next=227
                    KindPlusToken [5419, 5421), i=1251, next=228
                    KindIdentifier "y" [5421, 5423), i=1252, next=0
            KindIfStatement [5425, 5467), i=1253, next=237
              KindBinaryExpression [5435, 5441), i=1254, next=234
                KindIdentifier "x" [5435, 5436), i=1255, next=232
                KindEqualsEqualsToken [5436, 5439), i=1256, next=233
                KindNumericLiteral [5439, 5441), i=1257, next=0
              KindBlock [5442, 5467), i=1258, next=0
                NodeList [5444, 5460), i=1259, next=0
                  KindBreakStatement [5444, 5460), i=1260, next=0
            KindIfStatement [5467, 5514), i=1261, next=246
              KindBinaryExpression [5477, 5483), i=1262, next=242
                KindIdentifier "x" [5477, 5478), i=1263, next=240
                KindEqualsEqualsToken [5478, 5481), i=1264, next=241
                KindNumericLiteral [5481, 5483), i=1265, next=0
              KindBlock [5484, 5514), i=1266, next=0
                NodeList [5486, 5507), i=1267, next=0
                  KindBreakStatement [5486, 5507), i=1268, next=0
                    KindIdentifier "l8_c" [5501, 5506), i=1269, next=0
            KindIfStatement [5514, 5559), i=1270, next=254
              KindBinaryExpression [5524, 5530), i=1271, next=251
                KindIdentifier "x" [5524, 5525), i=1272, next=249
                KindEqualsEqualsToken [5525, 5528), i=1273, next=250
                KindNumericLiteral [5528, 5530), i=1274, next=0
              KindBlock [5531, 5559), i=1275, next=0
                NodeList [5533, 5552), i=1276, next=0
                  KindContinueStatement [5533, 5552), i=1277, next=0
            KindIfStatement [5559, 5609), i=1278, next=0
              KindBinaryExpression [5569, 5575), i=1279, next=3
                KindIdentifier "x" [5569, 5570), i=1280, next=1
                KindEqualsEqualsToken [5570, 5573), i=1281, next=2
                KindNumericLiteral [5573, 5575), i=1282, next=0
              KindBlock [5576, 5609), i=1283, next=0
                NodeList [5578, 5602), i=1284, next=0
                  KindContinueStatement [5578, 5602), i=1285, next=0
                    KindIdentifier "l8_c" [5596, 5601), i=1286, next=0
