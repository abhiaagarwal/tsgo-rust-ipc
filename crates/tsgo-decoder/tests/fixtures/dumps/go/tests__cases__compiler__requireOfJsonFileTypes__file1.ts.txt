KindSourceFile [0, 543), i=1, next=0
  NodeList [0, 540), i=2, next=0
    KindImportEqualsDeclaration [0, 31), i=3, next=7
      KindIdentifier "b" [6, 8), i=4, next=5
      KindExternalModuleReference [10, 30), i=5, next=0
        KindStringLiteral "./b.json" [19, 29), i=6, next=0
    KindImportEqualsDeclaration [31, 64), i=7, next=11
      KindIdentifier "c" [39, 41), i=8, next=9
      KindExternalModuleReference [43, 63), i=9, next=0
        KindStringLiteral "./c.json" [52, 62), i=10, next=0
    KindImportEqualsDeclaration [64, 97), i=11, next=15
      KindIdentifier "d" [72, 74), i=12, next=13
      KindExternalModuleReference [76, 96), i=13, next=0
        KindStringLiteral "./d.json" [85, 95), i=14, next=0
    KindImportEqualsDeclaration [97, 130), i=15, next=19
      KindIdentifier "e" [105, 107), i=16, next=17
      KindExternalModuleReference [109, 129), i=17, next=0
        KindStringLiteral "./e.json" [118, 128), i=18, next=0
    KindImportEqualsDeclaration [130, 163), i=19, next=23
      KindIdentifier "f" [138, 140), i=20, next=21
      KindExternalModuleReference [142, 162), i=21, next=0
        KindStringLiteral "./f.json" [151, 161), i=22, next=0
    KindImportEqualsDeclaration [163, 196), i=23, next=27
      KindIdentifier "g" [171, 173), i=24, next=25
      KindExternalModuleReference [175, 195), i=25, next=0
        KindStringLiteral "./g.json" [184, 194), i=26, next=0
    KindVariableStatement [196, 247), i=27, next=37
      KindVariableDeclarationList [196, 246), i=28, next=0
        NodeList [203, 246), i=29, next=0
          KindVariableDeclaration [203, 227), i=30, next=33
            KindIdentifier "booleanLiteral" [203, 218), i=31, next=32
            KindBooleanKeyword [219, 227), i=32, next=0
          KindVariableDeclaration [228, 246), i=33, next=0
            KindIdentifier "nullLiteral" [228, 240), i=34, next=35
            KindLiteralType [241, 246), i=35, next=0
              KindNullKeyword [241, 246), i=36, next=0
    KindVariableStatement [247, 275), i=37, next=43
      KindVariableDeclarationList [247, 274), i=38, next=0
        NodeList [252, 274), i=39, next=0
          KindVariableDeclaration [252, 274), i=40, next=0
            KindIdentifier "stringLiteral" [252, 266), i=41, next=42
            KindStringKeyword [267, 274), i=42, next=0
    KindVariableStatement [275, 303), i=43, next=49
      KindVariableDeclarationList [275, 302), i=44, next=0
        NodeList [280, 302), i=45, next=0
          KindVariableDeclaration [280, 302), i=46, next=0
            KindIdentifier "numberLiteral" [280, 294), i=47, next=48
            KindNumberKeyword [295, 302), i=48, next=0
    KindExpressionStatement [303, 328), i=49, next=56
      KindBinaryExpression [303, 327), i=50, next=0
        KindIdentifier "booleanLiteral" [303, 321), i=51, next=52
        KindEqualsToken [321, 323), i=52, next=53
        KindPropertyAccessExpression [323, 327), i=53, next=0
          KindIdentifier "b" [323, 325), i=54, next=55
          KindIdentifier "a" [326, 327), i=55, next=0
    KindExpressionStatement [328, 350), i=56, next=63
      KindBinaryExpression [328, 349), i=57, next=0
        KindIdentifier "stringLiteral" [328, 343), i=58, next=59
        KindEqualsToken [343, 345), i=59, next=60
        KindPropertyAccessExpression [345, 349), i=60, next=0
          KindIdentifier "b" [345, 347), i=61, next=62
          KindIdentifier "b" [348, 349), i=62, next=0
    KindExpressionStatement [350, 370), i=63, next=70
      KindBinaryExpression [350, 369), i=64, next=0
        KindIdentifier "nullLiteral" [350, 363), i=65, next=66
        KindEqualsToken [363, 365), i=66, next=67
        KindPropertyAccessExpression [365, 369), i=67, next=0
          KindIdentifier "b" [365, 367), i=68, next=69
          KindIdentifier "c" [368, 369), i=69, next=0
    KindExpressionStatement [370, 393), i=70, next=77
      KindBinaryExpression [370, 392), i=71, next=0
        KindIdentifier "booleanLiteral" [370, 386), i=72, next=73
        KindEqualsToken [386, 388), i=73, next=74
        KindPropertyAccessExpression [388, 392), i=74, next=0
          KindIdentifier "b" [388, 390), i=75, next=76
          KindIdentifier "d" [391, 392), i=76, next=0
    KindVariableStatement [393, 453), i=77, next=91
      KindVariableDeclarationList [393, 452), i=78, next=0
        NodeList [400, 452), i=79, next=0
          KindVariableDeclaration [400, 452), i=80, next=0
            KindIdentifier "stringOrNumberOrNull" [400, 421), i=81, next=82
            KindUnionType [422, 445), i=82, next=88
              NodeList [422, 445), i=83, next=0
                KindStringKeyword [422, 429), i=84, next=85
                KindNumberKeyword [431, 438), i=85, next=86
                KindLiteralType [440, 445), i=86, next=0
                  KindNullKeyword [440, 445), i=87, next=0
            KindElementAccessExpression [447, 452), i=88, next=0
              KindIdentifier "c" [447, 449), i=89, next=90
              KindNumericLiteral [450, 451), i=90, next=0
    KindExpressionStatement [453, 473), i=91, next=96
      KindBinaryExpression [453, 472), i=92, next=0
        KindIdentifier "stringLiteral" [453, 468), i=93, next=94
        KindEqualsToken [468, 470), i=94, next=95
        KindIdentifier "d" [470, 472), i=95, next=0
    KindExpressionStatement [473, 493), i=96, next=101
      KindBinaryExpression [473, 492), i=97, next=0
        KindIdentifier "numberLiteral" [473, 488), i=98, next=99
        KindEqualsToken [488, 490), i=99, next=100
        KindIdentifier "e" [490, 492), i=100, next=0
    KindExpressionStatement [493, 516), i=101, next=108
      KindBinaryExpression [493, 515), i=102, next=0
        KindIdentifier "numberLiteral" [493, 508), i=103, next=104
        KindEqualsToken [508, 510), i=104, next=105
        KindElementAccessExpression [510, 515), i=105, next=0
          KindIdentifier "f" [510, 512), i=106, next=107
          KindNumericLiteral [513, 514), i=107, next=0
    KindExpressionStatement [516, 540), i=108, next=0
      KindBinaryExpression [516, 539), i=109, next=0
        KindIdentifier "booleanLiteral" [516, 532), i=110, next=111
        KindEqualsToken [532, 534), i=111, next=112
        KindElementAccessExpression [534, 539), i=112, next=0
          KindIdentifier "g" [534, 536), i=113, next=114
          KindNumericLiteral [537, 538), i=114, next=0
