KindSourceFile [0, 573), i=1, next=0
  NodeList [0, 572), i=2, next=0
    KindVariableStatement [0, 30), i=3, next=12
      KindVariableDeclarationList [0, 29), i=4, next=0
        NodeList [3, 29), i=5, next=0
          KindVariableDeclaration [3, 29), i=6, next=0
            KindIdentifier "strOrNum" [3, 12), i=7, next=8
            KindUnionType [13, 29), i=8, next=0
              NodeList [13, 29), i=9, next=0
                KindStringKeyword [13, 20), i=10, next=11
                KindNumberKeyword [22, 29), i=11, next=0
    KindVariableStatement [30, 63), i=12, next=21
      KindVariableDeclarationList [30, 62), i=13, next=0
        NodeList [34, 62), i=14, next=0
          KindVariableDeclaration [34, 62), i=15, next=0
            KindIdentifier "strOrBool" [34, 44), i=16, next=17
            KindUnionType [45, 62), i=17, next=0
              NodeList [45, 62), i=18, next=0
                KindStringKeyword [45, 52), i=19, next=20
                KindBooleanKeyword [54, 62), i=20, next=0
    KindVariableStatement [63, 101), i=21, next=32
      KindVariableDeclarationList [63, 100), i=22, next=0
        NodeList [67, 100), i=23, next=0
          KindVariableDeclaration [67, 100), i=24, next=0
            KindIdentifier "strOrFunc" [67, 77), i=25, next=26
            KindUnionType [78, 100), i=26, next=0
              NodeList [78, 100), i=27, next=0
                KindStringKeyword [78, 85), i=28, next=29
                KindParenthesizedType [87, 100), i=29, next=0
                  KindFunctionType [89, 99), i=30, next=0
                    KindVoidKeyword [94, 99), i=31, next=0
    KindVariableStatement [101, 133), i=32, next=41
      KindVariableDeclarationList [101, 133), i=33, next=0
        NodeList [105, 133), i=34, next=0
          KindVariableDeclaration [105, 133), i=35, next=0
            KindIdentifier "numOrBool" [105, 115), i=36, next=37
            KindUnionType [116, 133), i=37, next=0
              NodeList [116, 133), i=38, next=0
                KindNumberKeyword [116, 123), i=39, next=40
                KindBooleanKeyword [125, 133), i=40, next=0
    KindVariableStatement [133, 150), i=41, next=47
      KindVariableDeclarationList [133, 149), i=42, next=0
        NodeList [137, 149), i=43, next=0
          KindVariableDeclaration [137, 149), i=44, next=0
            KindIdentifier "str" [137, 141), i=45, next=46
            KindStringKeyword [142, 149), i=46, next=0
    KindVariableStatement [150, 167), i=47, next=53
      KindVariableDeclarationList [150, 166), i=48, next=0
        NodeList [154, 166), i=49, next=0
          KindVariableDeclaration [154, 166), i=50, next=0
            KindIdentifier "num" [154, 158), i=51, next=52
            KindNumberKeyword [159, 166), i=52, next=0
    KindVariableStatement [167, 186), i=53, next=59
      KindVariableDeclarationList [167, 185), i=54, next=0
        NodeList [171, 185), i=55, next=0
          KindVariableDeclaration [171, 185), i=56, next=0
            KindIdentifier "bool" [171, 176), i=57, next=58
            KindBooleanKeyword [177, 185), i=58, next=0
    KindVariableStatement [186, 208), i=59, next=66
      KindVariableDeclarationList [186, 207), i=60, next=0
        NodeList [190, 207), i=61, next=0
          KindVariableDeclaration [190, 207), i=62, next=0
            KindIdentifier "func" [190, 195), i=63, next=64
            KindFunctionType [196, 207), i=64, next=0
              KindVoidKeyword [202, 207), i=65, next=0
    KindIfStatement [208, 296), i=66, next=86
      KindBinaryExpression [214, 242), i=67, next=72
        KindStringLiteral "string" [214, 222), i=68, next=69
        KindEqualsEqualsEqualsToken [222, 226), i=69, next=70
        KindTypeOfExpression [226, 242), i=70, next=0
          KindIdentifier "strOrNum" [233, 242), i=71, next=0
      KindBlock [243, 267), i=72, next=79
        NodeList [245, 265), i=73, next=0
          KindExpressionStatement [245, 265), i=74, next=0
            KindBinaryExpression [245, 264), i=75, next=0
              KindIdentifier "str" [245, 253), i=76, next=77
              KindEqualsToken [253, 255), i=77, next=78
              KindIdentifier "strOrNum" [255, 264), i=78, next=0
      KindBlock [272, 296), i=79, next=0
        NodeList [274, 294), i=80, next=0
          KindExpressionStatement [274, 294), i=81, next=0
            KindBinaryExpression [274, 293), i=82, next=0
              KindIdentifier "num" [274, 282), i=83, next=84
              KindEqualsToken [282, 284), i=84, next=85
              KindIdentifier "strOrNum" [284, 293), i=85, next=0
    KindIfStatement [296, 389), i=86, next=106
      KindBinaryExpression [301, 332), i=87, next=92
        KindStringLiteral "function" [301, 311), i=88, next=89
        KindEqualsEqualsEqualsToken [311, 315), i=89, next=90
        KindTypeOfExpression [315, 332), i=90, next=0
          KindIdentifier "strOrFunc" [322, 332), i=91, next=0
      KindBlock [333, 359), i=92, next=99
        NodeList [335, 357), i=93, next=0
          KindExpressionStatement [335, 357), i=94, next=0
            KindBinaryExpression [335, 356), i=95, next=0
              KindIdentifier "func" [335, 344), i=96, next=97
              KindEqualsToken [344, 346), i=97, next=98
              KindIdentifier "strOrFunc" [346, 356), i=98, next=0
      KindBlock [364, 389), i=99, next=0
        NodeList [366, 387), i=100, next=0
          KindExpressionStatement [366, 387), i=101, next=0
            KindBinaryExpression [366, 386), i=102, next=0
              KindIdentifier "str" [366, 374), i=103, next=104
              KindEqualsToken [374, 376), i=104, next=105
              KindIdentifier "strOrFunc" [376, 386), i=105, next=0
    KindIfStatement [389, 480), i=106, next=126
      KindBinaryExpression [394, 423), i=107, next=112
        KindStringLiteral "number" [394, 402), i=108, next=109
        KindEqualsEqualsEqualsToken [402, 406), i=109, next=110
        KindTypeOfExpression [406, 423), i=110, next=0
          KindIdentifier "numOrBool" [413, 423), i=111, next=0
      KindBlock [424, 449), i=112, next=119
        NodeList [426, 447), i=113, next=0
          KindExpressionStatement [426, 447), i=114, next=0
            KindBinaryExpression [426, 446), i=115, next=0
              KindIdentifier "num" [426, 434), i=116, next=117
              KindEqualsToken [434, 436), i=117, next=118
              KindIdentifier "numOrBool" [436, 446), i=118, next=0
      KindBlock [454, 480), i=119, next=0
        NodeList [456, 478), i=120, next=0
          KindExpressionStatement [456, 478), i=121, next=0
            KindBinaryExpression [456, 477), i=122, next=0
              KindIdentifier "bool" [456, 465), i=123, next=124
              KindEqualsToken [465, 467), i=124, next=125
              KindIdentifier "numOrBool" [467, 477), i=125, next=0
    KindIfStatement [480, 572), i=126, next=0
      KindBinaryExpression [485, 515), i=127, next=132
        KindStringLiteral "boolean" [485, 494), i=128, next=129
        KindEqualsEqualsEqualsToken [494, 498), i=129, next=130
        KindTypeOfExpression [498, 515), i=130, next=0
          KindIdentifier "strOrBool" [505, 515), i=131, next=0
      KindBlock [516, 542), i=132, next=139
        NodeList [518, 540), i=133, next=0
          KindExpressionStatement [518, 540), i=134, next=0
            KindBinaryExpression [518, 539), i=135, next=0
              KindIdentifier "bool" [518, 527), i=136, next=137
              KindEqualsToken [527, 529), i=137, next=138
              KindIdentifier "strOrBool" [529, 539), i=138, next=0
      KindBlock [547, 572), i=139, next=0
        NodeList [549, 570), i=140, next=0
          KindExpressionStatement [549, 570), i=141, next=0
            KindBinaryExpression [549, 569), i=142, next=0
              KindIdentifier "str" [549, 557), i=143, next=144
              KindEqualsToken [557, 559), i=144, next=145
              KindIdentifier "strOrBool" [559, 569), i=145, next=0
