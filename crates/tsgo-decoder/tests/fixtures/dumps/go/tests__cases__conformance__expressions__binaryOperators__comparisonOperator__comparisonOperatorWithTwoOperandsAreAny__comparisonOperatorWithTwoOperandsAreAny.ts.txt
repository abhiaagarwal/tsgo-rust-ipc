KindSourceFile [0, 148), i=1, next=0
  NodeList [0, 148), i=2, next=0
    KindVariableStatement [0, 11), i=3, next=9
      KindVariableDeclarationList [0, 10), i=4, next=0
        NodeList [3, 10), i=5, next=0
          KindVariableDeclaration [3, 10), i=6, next=0
            KindIdentifier "a" [3, 5), i=7, next=8
            KindAnyKeyword [6, 10), i=8, next=0
    KindVariableStatement [11, 28), i=9, next=18
      KindVariableDeclarationList [11, 27), i=10, next=0
        NodeList [16, 27), i=11, next=0
          KindVariableDeclaration [16, 27), i=12, next=0
            KindIdentifier "r1" [16, 19), i=13, next=14
            KindBinaryExpression [21, 27), i=14, next=0
              KindIdentifier "a" [21, 23), i=15, next=16
              KindLessThanToken [23, 25), i=16, next=17
              KindIdentifier "a" [25, 27), i=17, next=0
    KindVariableStatement [28, 44), i=18, next=27
      KindVariableDeclarationList [28, 43), i=19, next=0
        NodeList [32, 43), i=20, next=0
          KindVariableDeclaration [32, 43), i=21, next=0
            KindIdentifier "r2" [32, 35), i=22, next=23
            KindBinaryExpression [37, 43), i=23, next=0
              KindIdentifier "a" [37, 39), i=24, next=25
              KindGreaterThanToken [39, 41), i=25, next=26
              KindIdentifier "a" [41, 43), i=26, next=0
    KindVariableStatement [44, 61), i=27, next=36
      KindVariableDeclarationList [44, 60), i=28, next=0
        NodeList [48, 60), i=29, next=0
          KindVariableDeclaration [48, 60), i=30, next=0
            KindIdentifier "r3" [48, 51), i=31, next=32
            KindBinaryExpression [53, 60), i=32, next=0
              KindIdentifier "a" [53, 55), i=33, next=34
              KindLessThanEqualsToken [55, 58), i=34, next=35
              KindIdentifier "a" [58, 60), i=35, next=0
    KindVariableStatement [61, 78), i=36, next=45
      KindVariableDeclarationList [61, 77), i=37, next=0
        NodeList [65, 77), i=38, next=0
          KindVariableDeclaration [65, 77), i=39, next=0
            KindIdentifier "r4" [65, 68), i=40, next=41
            KindBinaryExpression [70, 77), i=41, next=0
              KindIdentifier "a" [70, 72), i=42, next=43
              KindGreaterThanEqualsToken [72, 75), i=43, next=44
              KindIdentifier "a" [75, 77), i=44, next=0
    KindVariableStatement [78, 95), i=45, next=54
      KindVariableDeclarationList [78, 94), i=46, next=0
        NodeList [82, 94), i=47, next=0
          KindVariableDeclaration [82, 94), i=48, next=0
            KindIdentifier "r5" [82, 85), i=49, next=50
            KindBinaryExpression [87, 94), i=50, next=0
              KindIdentifier "a" [87, 89), i=51, next=52
              KindEqualsEqualsToken [89, 92), i=52, next=53
              KindIdentifier "a" [92, 94), i=53, next=0
    KindVariableStatement [95, 112), i=54, next=63
      KindVariableDeclarationList [95, 111), i=55, next=0
        NodeList [99, 111), i=56, next=0
          KindVariableDeclaration [99, 111), i=57, next=0
            KindIdentifier "r6" [99, 102), i=58, next=59
            KindBinaryExpression [104, 111), i=59, next=0
              KindIdentifier "a" [104, 106), i=60, next=61
              KindExclamationEqualsToken [106, 109), i=61, next=62
              KindIdentifier "a" [109, 111), i=62, next=0
    KindVariableStatement [112, 130), i=63, next=72
      KindVariableDeclarationList [112, 129), i=64, next=0
        NodeList [116, 129), i=65, next=0
          KindVariableDeclaration [116, 129), i=66, next=0
            KindIdentifier "r7" [116, 119), i=67, next=68
            KindBinaryExpression [121, 129), i=68, next=0
              KindIdentifier "a" [121, 123), i=69, next=70
              KindEqualsEqualsEqualsToken [123, 127), i=70, next=71
              KindIdentifier "a" [127, 129), i=71, next=0
    KindVariableStatement [130, 148), i=72, next=0
      KindVariableDeclarationList [130, 147), i=73, next=0
        NodeList [134, 147), i=74, next=0
          KindVariableDeclaration [134, 147), i=75, next=0
            KindIdentifier "r8" [134, 137), i=76, next=77
            KindBinaryExpression [139, 147), i=77, next=0
              KindIdentifier "a" [139, 141), i=78, next=79
              KindExclamationEqualsEqualsToken [141, 145), i=79, next=80
              KindIdentifier "a" [145, 147), i=80, next=0
