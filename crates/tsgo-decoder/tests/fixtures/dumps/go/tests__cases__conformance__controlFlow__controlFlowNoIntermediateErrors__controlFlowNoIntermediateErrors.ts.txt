KindSourceFile [0, 433), i=1, next=0
  NodeList [0, 431), i=2, next=0
    KindFunctionDeclaration [0, 320), i=3, next=89
      KindIdentifier "f1" [8, 11), i=4, next=5
      KindBlock [13, 320), i=5, next=0
        NodeList [15, 317), i=6, next=0
          KindVariableStatement [15, 45), i=7, next=21
            KindVariableDeclarationList [15, 44), i=8, next=0
              NodeList [24, 44), i=9, next=0
                KindVariableDeclaration [24, 44), i=10, next=0
                  KindIdentifier "code" [24, 29), i=11, next=12
                  KindUnionType [30, 40), i=12, next=20
                    NodeList [30, 40), i=13, next=0
                      KindLiteralType [30, 32), i=14, next=16
                        KindNumericLiteral [30, 32), i=15, next=0
                      KindLiteralType [34, 36), i=16, next=18
                        KindNumericLiteral [34, 36), i=17, next=0
                      KindLiteralType [38, 40), i=18, next=0
                        KindNumericLiteral [38, 40), i=19, next=0
                  KindNumericLiteral [42, 44), i=20, next=0
          KindVariableStatement [45, 134), i=21, next=54
            KindVariableDeclarationList [45, 133), i=22, next=0
              NodeList [56, 133), i=23, next=0
                KindVariableDeclaration [56, 133), i=24, next=0
                  KindIdentifier "otherCodes" [56, 67), i=25, next=26
                  KindArrayType [68, 82), i=26, next=36
                    KindParenthesizedType [68, 80), i=27, next=0
                      KindUnionType [70, 79), i=28, next=0
                        NodeList [70, 79), i=29, next=0
                          KindLiteralType [70, 71), i=30, next=32
                            KindNumericLiteral [70, 71), i=31, next=0
                          KindLiteralType [73, 75), i=32, next=34
                            KindNumericLiteral [73, 75), i=33, next=0
                          KindLiteralType [77, 79), i=34, next=0
                            KindNumericLiteral [77, 79), i=35, next=0
                  KindArrayLiteralExpression [84, 133), i=36, next=0
                    NodeList [86, 132), i=37, next=0
                      KindNumericLiteral [86, 87), i=38, next=39
                      KindNumericLiteral [88, 90), i=39, next=40
                      KindNumericLiteral [91, 93), i=40, next=41
                      KindNumericLiteral [94, 96), i=41, next=42
                      KindNumericLiteral [97, 99), i=42, next=43
                      KindNumericLiteral [100, 102), i=43, next=44
                      KindNumericLiteral [103, 105), i=44, next=45
                      KindNumericLiteral [106, 108), i=45, next=46
                      KindNumericLiteral [109, 111), i=46, next=47
                      KindNumericLiteral [112, 114), i=47, next=48
                      KindNumericLiteral [115, 117), i=48, next=49
                      KindNumericLiteral [118, 120), i=49, next=50
                      KindNumericLiteral [121, 123), i=50, next=51
                      KindNumericLiteral [124, 126), i=51, next=52
                      KindNumericLiteral [127, 129), i=52, next=53
                      KindNumericLiteral [130, 132), i=53, next=0
          KindForOfStatement [134, 317), i=54, next=0
            KindVariableDeclarationList [145, 156), i=55, next=59
              NodeList [150, 156), i=56, next=0
                KindVariableDeclaration [150, 156), i=57, next=0
                  KindIdentifier "code2" [150, 156), i=58, next=0
            KindIdentifier "otherCodes" [159, 170), i=59, next=60
            KindBlock [171, 317), i=60, next=0
              NodeList [173, 310), i=61, next=0
                KindIfStatement [173, 310), i=62, next=0
                  KindBinaryExpression [187, 198), i=63, next=67
                    KindIdentifier "code2" [187, 192), i=64, next=65
                    KindEqualsEqualsEqualsToken [192, 196), i=65, next=66
                    KindNumericLiteral [196, 198), i=66, next=0
                  KindBlock [199, 260), i=67, next=82
                    NodeList [201, 249), i=68, next=0
                      KindExpressionStatement [201, 249), i=69, next=0
                        KindBinaryExpression [201, 248), i=70, next=0
                          KindIdentifier "code" [201, 227), i=71, next=72
                          KindEqualsToken [227, 229), i=72, next=73
                          KindConditionalExpression [229, 248), i=73, next=0
                            KindBinaryExpression [229, 240), i=74, next=78
                              KindIdentifier "code" [229, 234), i=75, next=76
                              KindEqualsEqualsEqualsToken [234, 238), i=76, next=77
                              KindNumericLiteral [238, 240), i=77, next=0
                            KindQuestionToken [240, 242), i=78, next=79
                            KindNumericLiteral [242, 244), i=79, next=80
                            KindColonToken [244, 246), i=80, next=81
                            KindNumericLiteral [246, 248), i=81, next=0
                  KindBlock [274, 310), i=82, next=0
                    NodeList [276, 299), i=83, next=0
                      KindExpressionStatement [276, 299), i=84, next=0
                        KindBinaryExpression [276, 298), i=85, next=0
                          KindIdentifier "code" [276, 294), i=86, next=87
                          KindEqualsToken [294, 296), i=87, next=88
                          KindNumericLiteral [296, 298), i=88, next=0
    KindFunctionDeclaration [320, 431), i=89, next=0
      KindIdentifier "f2" [332, 335), i=90, next=91
      KindBlock [337, 431), i=91, next=0
        NodeList [339, 428), i=92, next=0
          KindVariableStatement [339, 365), i=93, next=105
            KindVariableDeclarationList [339, 364), i=94, next=0
              NodeList [348, 364), i=95, next=0
                KindVariableDeclaration [348, 364), i=96, next=0
                  KindIdentifier "code" [348, 353), i=97, next=98
                  KindUnionType [354, 360), i=98, next=104
                    NodeList [354, 360), i=99, next=0
                      KindLiteralType [354, 356), i=100, next=102
                        KindNumericLiteral [354, 356), i=101, next=0
                      KindLiteralType [358, 360), i=102, next=0
                        KindNumericLiteral [358, 360), i=103, next=0
                  KindNumericLiteral [362, 364), i=104, next=0
          KindWhileStatement [365, 428), i=105, next=0
            KindTrueKeyword [378, 382), i=106, next=107
            KindBlock [383, 428), i=107, next=0
              NodeList [385, 421), i=108, next=0
                KindExpressionStatement [385, 421), i=109, next=0
                  KindBinaryExpression [385, 420), i=110, next=0
                    KindIdentifier "code" [385, 399), i=111, next=112
                    KindEqualsToken [399, 401), i=112, next=113
                    KindConditionalExpression [401, 420), i=113, next=0
                      KindBinaryExpression [401, 412), i=114, next=118
                        KindIdentifier "code" [401, 406), i=115, next=116
                        KindEqualsEqualsEqualsToken [406, 410), i=116, next=117
                        KindNumericLiteral [410, 412), i=117, next=0
                      KindQuestionToken [412, 414), i=118, next=119
                      KindNumericLiteral [414, 416), i=119, next=120
                      KindColonToken [416, 418), i=120, next=121
                      KindNumericLiteral [418, 420), i=121, next=0
