KindSourceFile [0, 135), i=1, next=0
  NodeList [0, 133), i=2, next=0
    KindModuleDeclaration [0, 36), i=3, next=15
      KindIdentifier "A" [6, 8), i=4, next=5
      KindModuleBlock [8, 36), i=5, next=0
        NodeList [10, 33), i=6, next=0
          KindVariableStatement [10, 33), i=7, next=0
            NodeList [10, 22), i=8, next=10
              KindExportKeyword [10, 22), i=9, next=0
            KindVariableDeclarationList [22, 32), i=10, next=0
              NodeList [26, 32), i=11, next=0
                KindVariableDeclaration [26, 32), i=12, next=0
                  KindIdentifier "x" [26, 28), i=13, next=14
                  KindNumericLiteral [30, 32), i=14, next=0
    KindModuleDeclaration [36, 75), i=15, next=27
      KindIdentifier "B" [44, 46), i=16, next=17
      KindModuleBlock [46, 75), i=17, next=0
        NodeList [48, 72), i=18, next=0
          KindVariableStatement [48, 72), i=19, next=0
            NodeList [48, 60), i=20, next=22
              KindExportKeyword [48, 60), i=21, next=0
            KindVariableDeclarationList [60, 71), i=22, next=0
              NodeList [64, 71), i=23, next=0
                KindVariableDeclaration [64, 71), i=24, next=0
                  KindIdentifier "x" [64, 66), i=25, next=26
                  KindStringLiteral "" [68, 71), i=26, next=0
    KindVariableStatement [75, 88), i=27, next=34
      KindVariableDeclarationList [75, 87), i=28, next=0
        NodeList [82, 87), i=29, next=0
          KindVariableDeclaration [82, 87), i=30, next=0
            KindIdentifier "a" [82, 84), i=31, next=32
            KindTypeReference [85, 87), i=32, next=0
              KindIdentifier "A" [85, 87), i=33, next=0
    KindVariableStatement [88, 99), i=34, next=41
      KindVariableDeclarationList [88, 98), i=35, next=0
        NodeList [93, 98), i=36, next=0
          KindVariableDeclaration [93, 98), i=37, next=0
            KindIdentifier "b" [93, 95), i=38, next=39
            KindTypeReference [96, 98), i=39, next=0
              KindIdentifier "B" [96, 98), i=40, next=0
    KindExpressionStatement [99, 125), i=41, next=46
      KindBinaryExpression [99, 124), i=42, next=0
        KindIdentifier "a" [99, 120), i=43, next=44
        KindEqualsToken [120, 122), i=44, next=45
        KindIdentifier "b" [122, 124), i=45, next=0
    KindExpressionStatement [125, 133), i=46, next=0
      KindBinaryExpression [125, 132), i=47, next=0
        KindIdentifier "b" [125, 128), i=48, next=49
        KindEqualsToken [128, 130), i=49, next=50
        KindIdentifier "a" [130, 132), i=50, next=0
