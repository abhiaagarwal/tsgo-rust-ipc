KindSourceFile [0, 676), i=1, next=0
  NodeList [0, 674), i=2, next=0
    KindFunctionDeclaration [0, 650), i=3, next=123
      KindIdentifier "testcase" [152, 161), i=4, next=5
      KindBlock [163, 650), i=5, next=0
        NodeList [165, 646), i=6, next=0
          KindVariableStatement [165, 212), i=7, next=21
            KindVariableDeclarationList [165, 211), i=8, next=0
              NodeList [172, 211), i=9, next=0
                KindVariableDeclaration [172, 211), i=10, next=0
                  KindIdentifier "obj" [172, 176), i=11, next=12
                  KindObjectLiteralExpression [178, 211), i=12, next=0
                    NodeList [180, 210), i=13, next=0
                      KindPropertyAssignment [180, 210), i=14, next=0
                        KindIdentifier "toString" [180, 188), i=15, next=16
                        KindFunctionExpression [189, 210), i=16, next=0
                          KindBlock [200, 210), i=17, next=0
                            NodeList [201, 209), i=18, next=0
                              KindReturnStatement [201, 209), i=19, next=0
                                KindNumericLiteral [207, 209), i=20, next=0
          KindVariableStatement [212, 228), i=21, next=27
            KindVariableDeclarationList [212, 227), i=22, next=0
              NodeList [219, 227), i=23, next=0
                KindVariableDeclaration [219, 227), i=24, next=0
                  KindIdentifier "one" [219, 223), i=25, next=26
                  KindNumericLiteral [225, 227), i=26, next=0
          KindVariableStatement [228, 252), i=27, next=38
            KindVariableDeclarationList [228, 251), i=28, next=0
              NodeList [235, 251), i=29, next=0
                KindVariableDeclaration [235, 251), i=30, next=0
                  KindIdentifier "_float" [235, 242), i=31, next=32
                  KindPrefixUnaryExpression [244, 251), i=32, next=0
                    KindParenthesizedExpression [246, 251), i=33, next=0
                      KindBinaryExpression [247, 250), i=34, next=0
                        KindNumericLiteral [247, 248), i=35, next=36
                        KindSlashToken [248, 249), i=36, next=37
                        KindNumericLiteral [249, 250), i=37, next=0
          KindVariableStatement [252, 372), i=38, next=70
            KindVariableDeclarationList [252, 371), i=39, next=0
              NodeList [259, 371), i=40, next=0
                KindVariableDeclaration [259, 371), i=41, next=0
                  KindIdentifier "a" [259, 261), i=42, next=43
                  KindNewExpression [263, 371), i=43, next=0
                    KindIdentifier "Array" [267, 273), i=44, next=45
                    NodeList [274, 370), i=45, next=0
                      KindFalseKeyword [274, 279), i=46, next=47
                      KindIdentifier "undefined" [280, 289), i=47, next=48
                      KindNullKeyword [290, 294), i=48, next=49
                      KindStringLiteral "0" [295, 298), i=49, next=50
                      KindIdentifier "obj" [299, 302), i=50, next=51
                      KindPrefixUnaryExpression [303, 319), i=51, next=53
                        KindNumericLiteral [304, 319), i=52, next=0
                      KindStringLiteral "str" [320, 326), i=53, next=54
                      KindPrefixUnaryExpression [327, 329), i=54, next=56
                        KindNumericLiteral [328, 329), i=55, next=0
                      KindTrueKeyword [330, 334), i=56, next=57
                      KindPrefixUnaryExpression [335, 337), i=57, next=59
                        KindNumericLiteral [336, 337), i=58, next=0
                      KindIdentifier "one" [338, 342), i=59, next=60
                      KindNumericLiteral [343, 345), i=60, next=61
                      KindNumericLiteral [346, 347), i=61, next=62
                      KindFalseKeyword [348, 354), i=62, next=63
                      KindIdentifier "_float" [355, 362), i=63, next=64
                      KindPrefixUnaryExpression [363, 370), i=64, next=0
                        KindParenthesizedExpression [365, 370), i=65, next=0
                          KindBinaryExpression [366, 369), i=66, next=0
                            KindNumericLiteral [366, 367), i=67, next=68
                            KindSlashToken [367, 368), i=68, next=69
                            KindNumericLiteral [368, 369), i=69, next=0
          KindIfStatement [372, 646), i=70, next=0
            KindBinaryExpression [380, 586), i=71, next=119
              KindBinaryExpression [380, 525), i=72, next=109
                KindBinaryExpression [380, 463), i=73, next=98
                  KindBinaryExpression [380, 404), i=74, next=88
                    KindCallExpression [380, 397), i=75, next=86
                      KindPropertyAccessExpression [380, 389), i=76, next=79
                        KindIdentifier "a" [380, 381), i=77, next=78
                        KindIdentifier "indexOf" [382, 389), i=78, next=0
                      NodeList [390, 396), i=79, next=0
                        KindPrefixUnaryExpression [390, 396), i=80, next=0
                          KindParenthesizedExpression [391, 396), i=81, next=0
                            KindBinaryExpression [392, 395), i=82, next=0
                              KindNumericLiteral [392, 393), i=83, next=84
                              KindSlashToken [393, 394), i=84, next=85
                              KindNumericLiteral [394, 395), i=85, next=0
                    KindEqualsEqualsEqualsToken [397, 401), i=86, next=87
                    KindNumericLiteral [401, 404), i=87, next=0
                  KindAmpersandAmpersandToken [404, 407), i=88, next=89
                  KindBinaryExpression [407, 463), i=89, next=0
                    KindCallExpression [407, 457), i=90, next=96
                      KindPropertyAccessExpression [407, 454), i=91, next=94
                        KindIdentifier "a" [407, 446), i=92, next=93
                        KindIdentifier "indexOf" [447, 454), i=93, next=0
                      NodeList [455, 456), i=94, next=0
                        KindNumericLiteral [455, 456), i=95, next=0
                    KindEqualsEqualsEqualsToken [457, 461), i=96, next=97
                    KindNumericLiteral [461, 463), i=97, next=0
                KindAmpersandAmpersandToken [463, 471), i=98, next=99
                KindBinaryExpression [471, 525), i=99, next=0
                  KindCallExpression [471, 519), i=100, next=107
                    KindPropertyAccessExpression [471, 515), i=101, next=104
                      KindIdentifier "a" [471, 507), i=102, next=103
                      KindIdentifier "indexOf" [508, 515), i=103, next=0
                    NodeList [516, 518), i=104, next=0
                      KindPrefixUnaryExpression [516, 518), i=105, next=0
                        KindNumericLiteral [517, 518), i=106, next=0
                  KindEqualsEqualsEqualsToken [519, 523), i=107, next=108
                  KindNumericLiteral [523, 525), i=108, next=0
              KindAmpersandAmpersandToken [525, 533), i=109, next=110
              KindBinaryExpression [533, 586), i=110, next=0
                KindCallExpression [533, 579), i=111, next=117
                  KindPropertyAccessExpression [533, 576), i=112, next=115
                    KindIdentifier "a" [533, 568), i=113, next=114
                    KindIdentifier "indexOf" [569, 576), i=114, next=0
                  NodeList [577, 578), i=115, next=0
                    KindNumericLiteral [577, 578), i=116, next=0
                KindEqualsEqualsEqualsToken [579, 583), i=117, next=118
                KindNumericLiteral [583, 586), i=118, next=0
            KindBlock [588, 646), i=119, next=0
              NodeList [623, 641), i=120, next=0
                KindReturnStatement [623, 641), i=121, next=0
                  KindTrueKeyword [635, 640), i=122, next=0
    KindExpressionStatement [650, 674), i=123, next=0
      KindCallExpression [650, 673), i=124, next=0
        KindIdentifier "runTestCase" [650, 663), i=125, next=126
        NodeList [664, 672), i=126, next=0
          KindIdentifier "testcase" [664, 672), i=127, next=0
