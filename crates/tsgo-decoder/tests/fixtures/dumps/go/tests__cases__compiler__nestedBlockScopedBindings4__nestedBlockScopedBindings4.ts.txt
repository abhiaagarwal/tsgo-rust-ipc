KindSourceFile [0, 566), i=1, next=0
  NodeList [0, 566), i=2, next=0
    KindFunctionDeclaration [0, 120), i=3, next=41
      KindIdentifier "a0" [8, 11), i=4, next=5
      KindBlock [13, 120), i=5, next=0
        NodeList [15, 117), i=6, next=0
          KindForStatement [15, 69), i=7, next=26
            KindVariableDeclarationList [26, 31), i=8, next=12
              NodeList [29, 31), i=9, next=0
                KindVariableDeclaration [29, 31), i=10, next=0
                  KindIdentifier "x" [29, 31), i=11, next=0
            KindBinaryExpression [32, 38), i=12, next=16
              KindIdentifier "x" [32, 34), i=13, next=14
              KindLessThanToken [34, 36), i=14, next=15
              KindNumericLiteral [36, 38), i=15, next=0
            KindBlock [40, 69), i=16, next=0
              NodeList [42, 62), i=17, next=0
                KindExpressionStatement [42, 62), i=18, next=0
                  KindBinaryExpression [42, 61), i=19, next=0
                    KindIdentifier "x" [42, 53), i=20, next=21
                    KindEqualsToken [53, 55), i=21, next=22
                    KindBinaryExpression [55, 61), i=22, next=0
                      KindIdentifier "x" [55, 57), i=23, next=24
                      KindPlusToken [57, 59), i=24, next=25
                      KindNumericLiteral [59, 61), i=25, next=0
          KindForStatement [69, 117), i=26, next=0
            KindVariableDeclarationList [80, 85), i=27, next=31
              NodeList [83, 85), i=28, next=0
                KindVariableDeclaration [83, 85), i=29, next=0
                  KindIdentifier "x" [83, 85), i=30, next=0
            KindBlock [88, 117), i=31, next=0
              NodeList [90, 110), i=32, next=0
                KindExpressionStatement [90, 110), i=33, next=0
                  KindBinaryExpression [90, 109), i=34, next=0
                    KindIdentifier "x" [90, 101), i=35, next=36
                    KindEqualsToken [101, 103), i=36, next=37
                    KindBinaryExpression [103, 109), i=37, next=0
                      KindIdentifier "x" [103, 105), i=38, next=39
                      KindPlusToken [105, 107), i=39, next=40
                      KindNumericLiteral [107, 109), i=40, next=0
    KindFunctionDeclaration [120, 262), i=41, next=83
      KindIdentifier "a1" [132, 135), i=42, next=43
      KindBlock [137, 262), i=43, next=0
        NodeList [139, 259), i=44, next=0
          KindForStatement [139, 211), i=45, next=68
            KindVariableDeclarationList [150, 155), i=46, next=50
              NodeList [153, 155), i=47, next=0
                KindVariableDeclaration [153, 155), i=48, next=0
                  KindIdentifier "x" [153, 155), i=49, next=0
            KindBinaryExpression [156, 162), i=50, next=54
              KindIdentifier "x" [156, 158), i=51, next=52
              KindLessThanToken [158, 160), i=52, next=53
              KindNumericLiteral [160, 162), i=53, next=0
            KindBlock [164, 211), i=54, next=0
              NodeList [166, 204), i=55, next=0
                KindExpressionStatement [166, 186), i=56, next=64
                  KindBinaryExpression [166, 185), i=57, next=0
                    KindIdentifier "x" [166, 177), i=58, next=59
                    KindEqualsToken [177, 179), i=59, next=60
                    KindBinaryExpression [179, 185), i=60, next=0
                      KindIdentifier "x" [179, 181), i=61, next=62
                      KindPlusToken [181, 183), i=62, next=63
                      KindNumericLiteral [183, 185), i=63, next=0
                KindExpressionStatement [186, 204), i=64, next=0
                  KindArrowFunction [186, 203), i=65, next=0
                    KindEqualsGreaterThanToken [198, 201), i=66, next=67
                    KindIdentifier "x" [201, 203), i=67, next=0
          KindForStatement [211, 259), i=68, next=0
            KindVariableDeclarationList [222, 227), i=69, next=73
              NodeList [225, 227), i=70, next=0
                KindVariableDeclaration [225, 227), i=71, next=0
                  KindIdentifier "x" [225, 227), i=72, next=0
            KindBlock [230, 259), i=73, next=0
              NodeList [232, 252), i=74, next=0
                KindExpressionStatement [232, 252), i=75, next=0
                  KindBinaryExpression [232, 251), i=76, next=0
                    KindIdentifier "x" [232, 243), i=77, next=78
                    KindEqualsToken [243, 245), i=78, next=79
                    KindBinaryExpression [245, 251), i=79, next=0
                      KindIdentifier "x" [245, 247), i=80, next=81
                      KindPlusToken [247, 249), i=81, next=82
                      KindNumericLiteral [249, 251), i=82, next=0
    KindFunctionDeclaration [262, 404), i=83, next=125
      KindIdentifier "a2" [274, 277), i=84, next=85
      KindBlock [279, 404), i=85, next=0
        NodeList [281, 401), i=86, next=0
          KindForStatement [281, 335), i=87, next=106
            KindVariableDeclarationList [292, 297), i=88, next=92
              NodeList [295, 297), i=89, next=0
                KindVariableDeclaration [295, 297), i=90, next=0
                  KindIdentifier "x" [295, 297), i=91, next=0
            KindBinaryExpression [298, 304), i=92, next=96
              KindIdentifier "x" [298, 300), i=93, next=94
              KindLessThanToken [300, 302), i=94, next=95
              KindNumericLiteral [302, 304), i=95, next=0
            KindBlock [306, 335), i=96, next=0
              NodeList [308, 328), i=97, next=0
                KindExpressionStatement [308, 328), i=98, next=0
                  KindBinaryExpression [308, 327), i=99, next=0
                    KindIdentifier "x" [308, 319), i=100, next=101
                    KindEqualsToken [319, 321), i=101, next=102
                    KindBinaryExpression [321, 327), i=102, next=0
                      KindIdentifier "x" [321, 323), i=103, next=104
                      KindPlusToken [323, 325), i=104, next=105
                      KindNumericLiteral [325, 327), i=105, next=0
          KindForStatement [335, 401), i=106, next=0
            KindVariableDeclarationList [346, 351), i=107, next=111
              NodeList [349, 351), i=108, next=0
                KindVariableDeclaration [349, 351), i=109, next=0
                  KindIdentifier "x" [349, 351), i=110, next=0
            KindBlock [354, 401), i=111, next=0
              NodeList [356, 394), i=112, next=0
                KindExpressionStatement [356, 376), i=113, next=121
                  KindBinaryExpression [356, 375), i=114, next=0
                    KindIdentifier "x" [356, 367), i=115, next=116
                    KindEqualsToken [367, 369), i=116, next=117
                    KindBinaryExpression [369, 375), i=117, next=0
                      KindIdentifier "x" [369, 371), i=118, next=119
                      KindPlusToken [371, 373), i=119, next=120
                      KindNumericLiteral [373, 375), i=120, next=0
                KindExpressionStatement [376, 394), i=121, next=0
                  KindArrowFunction [376, 393), i=122, next=0
                    KindEqualsGreaterThanToken [388, 391), i=123, next=124
                    KindIdentifier "x" [391, 393), i=124, next=0
    KindFunctionDeclaration [404, 566), i=125, next=0
      KindIdentifier "a3" [418, 421), i=126, next=127
      KindBlock [423, 566), i=127, next=0
        NodeList [425, 563), i=128, next=0
          KindForStatement [425, 497), i=129, next=152
            KindVariableDeclarationList [436, 441), i=130, next=134
              NodeList [439, 441), i=131, next=0
                KindVariableDeclaration [439, 441), i=132, next=0
                  KindIdentifier "x" [439, 441), i=133, next=0
            KindBinaryExpression [442, 448), i=134, next=138
              KindIdentifier "x" [442, 444), i=135, next=136
              KindLessThanToken [444, 446), i=136, next=137
              KindNumericLiteral [446, 448), i=137, next=0
            KindBlock [450, 497), i=138, next=0
              NodeList [452, 490), i=139, next=0
                KindExpressionStatement [452, 472), i=140, next=148
                  KindBinaryExpression [452, 471), i=141, next=0
                    KindIdentifier "x" [452, 463), i=142, next=143
                    KindEqualsToken [463, 465), i=143, next=144
                    KindBinaryExpression [465, 471), i=144, next=0
                      KindIdentifier "x" [465, 467), i=145, next=146
                      KindPlusToken [467, 469), i=146, next=147
                      KindNumericLiteral [469, 471), i=147, next=0
                KindExpressionStatement [472, 490), i=148, next=0
                  KindArrowFunction [472, 489), i=149, next=0
                    KindEqualsGreaterThanToken [484, 487), i=150, next=151
                    KindIdentifier "x" [487, 489), i=151, next=0
          KindForStatement [497, 563), i=152, next=0
            KindVariableDeclarationList [508, 513), i=153, next=157
              NodeList [511, 513), i=154, next=0
                KindVariableDeclaration [511, 513), i=155, next=0
                  KindIdentifier "x" [511, 513), i=156, next=0
            KindBlock [516, 563), i=157, next=0
              NodeList [518, 556), i=158, next=0
                KindExpressionStatement [518, 538), i=159, next=167
                  KindBinaryExpression [518, 537), i=160, next=0
                    KindIdentifier "x" [518, 529), i=161, next=162
                    KindEqualsToken [529, 531), i=162, next=163
                    KindBinaryExpression [531, 537), i=163, next=0
                      KindIdentifier "x" [531, 533), i=164, next=165
                      KindPlusToken [533, 535), i=165, next=166
                      KindNumericLiteral [535, 537), i=166, next=0
                KindExpressionStatement [538, 556), i=167, next=0
                  KindArrowFunction [538, 555), i=168, next=0
                    KindEqualsGreaterThanToken [550, 553), i=169, next=170
                    KindIdentifier "x" [553, 555), i=170, next=0
