KindSourceFile [0, 446), i=1, next=0
  NodeList [0, 446), i=2, next=0
    KindVariableStatement [0, 16), i=3, next=9
      KindVariableDeclarationList [0, 15), i=4, next=0
        NodeList [3, 15), i=5, next=0
          KindVariableDeclaration [3, 15), i=6, next=0
            KindIdentifier "num" [3, 7), i=7, next=8
            KindNumberKeyword [8, 15), i=8, next=0
    KindVariableStatement [16, 44), i=9, next=18
      KindVariableDeclarationList [16, 43), i=10, next=0
        NodeList [21, 43), i=11, next=0
          KindVariableDeclaration [21, 43), i=12, next=0
            KindIdentifier "var1" [21, 26), i=13, next=14
            KindUnionType [27, 43), i=14, next=0
              NodeList [27, 43), i=15, next=0
                KindStringKeyword [27, 34), i=16, next=17
                KindNumberKeyword [36, 43), i=17, next=0
    KindIfStatement [44, 152), i=18, next=40
      KindBinaryExpression [50, 74), i=19, next=24
        KindTypeOfExpression [50, 61), i=20, next=22
          KindIdentifier "var1" [56, 61), i=21, next=0
        KindEqualsEqualsEqualsToken [61, 65), i=22, next=23
        KindStringLiteral "string" [65, 74), i=23, next=0
      KindBlock [75, 114), i=24, next=33
        NodeList [77, 101), i=25, next=0
          KindExpressionStatement [77, 101), i=26, next=0
            KindBinaryExpression [77, 100), i=27, next=0
              KindIdentifier "num" [77, 86), i=28, next=29
              KindEqualsToken [86, 88), i=29, next=30
              KindPropertyAccessExpression [88, 100), i=30, next=0
                KindIdentifier "var1" [88, 93), i=31, next=32
                KindIdentifier "length" [94, 100), i=32, next=0
      KindBlock [120, 152), i=33, next=0
        NodeList [122, 139), i=34, next=0
          KindExpressionStatement [122, 139), i=35, next=0
            KindBinaryExpression [122, 138), i=36, next=0
              KindIdentifier "num" [122, 131), i=37, next=38
              KindEqualsToken [131, 133), i=38, next=39
              KindIdentifier "var1" [133, 138), i=39, next=0
    KindVariableStatement [152, 227), i=40, next=49
      KindVariableDeclarationList [152, 226), i=41, next=0
        NodeList [200, 226), i=42, next=0
          KindVariableDeclaration [200, 226), i=43, next=0
            KindIdentifier "strOrNum" [200, 209), i=44, next=45
            KindUnionType [210, 226), i=45, next=0
              NodeList [210, 226), i=46, next=0
                KindStringKeyword [210, 217), i=47, next=48
                KindNumberKeyword [219, 226), i=48, next=0
    KindVariableStatement [227, 262), i=49, next=60
      NodeList [227, 235), i=50, next=52
        KindExportKeyword [227, 235), i=51, next=0
      KindVariableDeclarationList [235, 261), i=52, next=0
        NodeList [239, 261), i=53, next=0
          KindVariableDeclaration [239, 261), i=54, next=0
            KindIdentifier "var2" [239, 244), i=55, next=56
            KindUnionType [245, 261), i=56, next=0
              NodeList [245, 261), i=57, next=0
                KindStringKeyword [245, 252), i=58, next=59
                KindNumberKeyword [254, 261), i=59, next=0
    KindIfStatement [262, 446), i=60, next=0
      KindBinaryExpression [268, 292), i=61, next=66
        KindTypeOfExpression [268, 279), i=62, next=64
          KindIdentifier "var2" [274, 279), i=63, next=0
        KindEqualsEqualsEqualsToken [279, 283), i=64, next=65
        KindStringLiteral "string" [283, 292), i=65, next=0
      KindBlock [293, 394), i=66, next=73
        NodeList [295, 372), i=67, next=0
          KindExpressionStatement [295, 372), i=68, next=0
            KindBinaryExpression [295, 371), i=69, next=0
              KindIdentifier "strOrNum" [295, 364), i=70, next=71
              KindEqualsToken [364, 366), i=71, next=72
              KindIdentifier "var2" [366, 371), i=72, next=0
      KindBlock [400, 446), i=73, next=0
        NodeList [402, 424), i=74, next=0
          KindExpressionStatement [402, 424), i=75, next=0
            KindBinaryExpression [402, 423), i=76, next=0
              KindIdentifier "strOrNum" [402, 416), i=77, next=78
              KindEqualsToken [416, 418), i=78, next=79
              KindIdentifier "var2" [418, 423), i=79, next=0
