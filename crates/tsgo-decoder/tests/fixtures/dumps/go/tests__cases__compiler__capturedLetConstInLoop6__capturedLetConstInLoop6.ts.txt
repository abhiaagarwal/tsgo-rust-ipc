KindSourceFile [0, 3586), i=1, next=0
  NodeList [0, 3582), i=2, next=0
    KindForOfStatement [0, 156), i=3, next=39
      KindVariableDeclarationList [5, 10), i=4, next=8
        NodeList [8, 10), i=5, next=0
          KindVariableDeclaration [8, 10), i=6, next=0
            KindIdentifier "x" [8, 10), i=7, next=0
      KindArrayLiteralExpression [13, 16), i=8, next=9
      KindBlock [17, 156), i=9, next=0
        NodeList [19, 153), i=10, next=0
          KindExpressionStatement [19, 50), i=11, next=18
            KindParenthesizedExpression [19, 49), i=12, next=0
              KindFunctionExpression [26, 48), i=13, next=0
                KindBlock [36, 48), i=14, next=0
                  NodeList [38, 47), i=15, next=0
                    KindReturnStatement [38, 47), i=16, next=0
                      KindIdentifier "x" [45, 47), i=17, next=0
          KindExpressionStatement [50, 66), i=18, next=23
            KindParenthesizedExpression [50, 65), i=19, next=0
              KindArrowFunction [57, 64), i=20, next=0
                KindEqualsGreaterThanToken [59, 62), i=21, next=22
                KindIdentifier "x" [62, 64), i=22, next=0
          KindIfStatement [66, 108), i=23, next=31
            KindBinaryExpression [76, 82), i=24, next=28
              KindIdentifier "x" [76, 77), i=25, next=26
              KindEqualsEqualsToken [77, 80), i=26, next=27
              KindNumericLiteral [80, 82), i=27, next=0
            KindBlock [83, 108), i=28, next=0
              NodeList [85, 101), i=29, next=0
                KindBreakStatement [85, 101), i=30, next=0
          KindIfStatement [108, 153), i=31, next=0
            KindBinaryExpression [118, 124), i=32, next=36
              KindIdentifier "x" [118, 119), i=33, next=34
              KindEqualsEqualsToken [119, 122), i=34, next=35
              KindNumericLiteral [122, 124), i=35, next=0
            KindBlock [125, 153), i=36, next=0
              NodeList [127, 146), i=37, next=0
                KindContinueStatement [127, 146), i=38, next=0
    KindForInStatement [156, 320), i=39, next=75
      KindVariableDeclarationList [165, 170), i=40, next=44
        NodeList [168, 170), i=41, next=0
          KindVariableDeclaration [168, 170), i=42, next=0
            KindIdentifier "x" [168, 170), i=43, next=0
      KindArrayLiteralExpression [173, 176), i=44, next=45
      KindBlock [177, 320), i=45, next=0
        NodeList [179, 317), i=46, next=0
          KindExpressionStatement [179, 210), i=47, next=54
            KindParenthesizedExpression [179, 209), i=48, next=0
              KindFunctionExpression [186, 208), i=49, next=0
                KindBlock [196, 208), i=50, next=0
                  NodeList [198, 207), i=51, next=0
                    KindReturnStatement [198, 207), i=52, next=0
                      KindIdentifier "x" [205, 207), i=53, next=0
          KindExpressionStatement [210, 226), i=54, next=59
            KindParenthesizedExpression [210, 225), i=55, next=0
              KindArrowFunction [217, 224), i=56, next=0
                KindEqualsGreaterThanToken [219, 222), i=57, next=58
                KindIdentifier "x" [222, 224), i=58, next=0
          KindIfStatement [226, 270), i=59, next=67
            KindBinaryExpression [236, 244), i=60, next=64
              KindIdentifier "x" [236, 237), i=61, next=62
              KindEqualsEqualsToken [237, 240), i=62, next=63
              KindStringLiteral "1" [240, 244), i=63, next=0
            KindBlock [245, 270), i=64, next=0
              NodeList [247, 263), i=65, next=0
                KindBreakStatement [247, 263), i=66, next=0
          KindIfStatement [270, 317), i=67, next=0
            KindBinaryExpression [280, 288), i=68, next=72
              KindIdentifier "x" [280, 281), i=69, next=70
              KindEqualsEqualsToken [281, 284), i=70, next=71
              KindStringLiteral "2" [284, 288), i=71, next=0
            KindBlock [289, 317), i=72, next=0
              NodeList [291, 310), i=73, next=0
                KindContinueStatement [291, 310), i=74, next=0
    KindForStatement [320, 492), i=75, next=117
      KindVariableDeclarationList [331, 340), i=76, next=81
        NodeList [334, 340), i=77, next=0
          KindVariableDeclaration [334, 340), i=78, next=0
            KindIdentifier "x" [334, 336), i=79, next=80
            KindNumericLiteral [338, 340), i=80, next=0
      KindBinaryExpression [341, 347), i=81, next=85
        KindIdentifier "x" [341, 343), i=82, next=83
        KindLessThanToken [343, 345), i=83, next=84
        KindNumericLiteral [345, 347), i=84, next=0
      KindPrefixUnaryExpression [348, 352), i=85, next=87
        KindIdentifier "x" [351, 352), i=86, next=0
      KindBlock [353, 492), i=87, next=0
        NodeList [355, 489), i=88, next=0
          KindExpressionStatement [355, 386), i=89, next=96
            KindParenthesizedExpression [355, 385), i=90, next=0
              KindFunctionExpression [362, 384), i=91, next=0
                KindBlock [372, 384), i=92, next=0
                  NodeList [374, 383), i=93, next=0
                    KindReturnStatement [374, 383), i=94, next=0
                      KindIdentifier "x" [381, 383), i=95, next=0
          KindExpressionStatement [386, 402), i=96, next=101
            KindParenthesizedExpression [386, 401), i=97, next=0
              KindArrowFunction [393, 400), i=98, next=0
                KindEqualsGreaterThanToken [395, 398), i=99, next=100
                KindIdentifier "x" [398, 400), i=100, next=0
          KindIfStatement [402, 444), i=101, next=109
            KindBinaryExpression [412, 418), i=102, next=106
              KindIdentifier "x" [412, 413), i=103, next=104
              KindEqualsEqualsToken [413, 416), i=104, next=105
              KindNumericLiteral [416, 418), i=105, next=0
            KindBlock [419, 444), i=106, next=0
              NodeList [421, 437), i=107, next=0
                KindBreakStatement [421, 437), i=108, next=0
          KindIfStatement [444, 489), i=109, next=0
            KindBinaryExpression [454, 460), i=110, next=114
              KindIdentifier "x" [454, 455), i=111, next=112
              KindEqualsEqualsToken [455, 458), i=112, next=113
              KindNumericLiteral [458, 460), i=113, next=0
            KindBlock [461, 489), i=114, next=0
              NodeList [463, 482), i=115, next=0
                KindContinueStatement [463, 482), i=116, next=0
    KindWhileStatement [492, 662), i=117, next=157
      KindBinaryExpression [503, 510), i=118, next=122
        KindNumericLiteral [503, 504), i=119, next=120
        KindEqualsEqualsEqualsToken [504, 508), i=120, next=121
        KindNumericLiteral [508, 510), i=121, next=0
      KindBlock [511, 662), i=122, next=0
        NodeList [513, 659), i=123, next=0
          KindVariableStatement [513, 525), i=124, next=129
            KindVariableDeclarationList [513, 524), i=125, next=0
              NodeList [522, 524), i=126, next=0
                KindVariableDeclaration [522, 524), i=127, next=0
                  KindIdentifier "x" [522, 524), i=128, next=0
          KindExpressionStatement [525, 556), i=129, next=136
            KindParenthesizedExpression [525, 555), i=130, next=0
              KindFunctionExpression [532, 554), i=131, next=0
                KindBlock [542, 554), i=132, next=0
                  NodeList [544, 553), i=133, next=0
                    KindReturnStatement [544, 553), i=134, next=0
                      KindIdentifier "x" [551, 553), i=135, next=0
          KindExpressionStatement [556, 572), i=136, next=141
            KindParenthesizedExpression [556, 571), i=137, next=0
              KindArrowFunction [563, 570), i=138, next=0
                KindEqualsGreaterThanToken [565, 568), i=139, next=140
                KindIdentifier "x" [568, 570), i=140, next=0
          KindIfStatement [572, 614), i=141, next=149
            KindBinaryExpression [582, 588), i=142, next=146
              KindIdentifier "x" [582, 583), i=143, next=144
              KindEqualsEqualsToken [583, 586), i=144, next=145
              KindNumericLiteral [586, 588), i=145, next=0
            KindBlock [589, 614), i=146, next=0
              NodeList [591, 607), i=147, next=0
                KindBreakStatement [591, 607), i=148, next=0
          KindIfStatement [614, 659), i=149, next=0
            KindBinaryExpression [624, 630), i=150, next=154
              KindIdentifier "x" [624, 625), i=151, next=152
              KindEqualsEqualsToken [625, 628), i=152, next=153
              KindNumericLiteral [628, 630), i=153, next=0
            KindBlock [631, 659), i=154, next=0
              NodeList [633, 652), i=155, next=0
                KindContinueStatement [633, 652), i=156, next=0
    KindDoStatement [662, 835), i=157, next=197
      KindBlock [668, 819), i=158, next=193
        NodeList [670, 816), i=159, next=0
          KindVariableStatement [670, 682), i=160, next=165
            KindVariableDeclarationList [670, 681), i=161, next=0
              NodeList [679, 681), i=162, next=0
                KindVariableDeclaration [679, 681), i=163, next=0
                  KindIdentifier "x" [679, 681), i=164, next=0
          KindExpressionStatement [682, 713), i=165, next=172
            KindParenthesizedExpression [682, 712), i=166, next=0
              KindFunctionExpression [689, 711), i=167, next=0
                KindBlock [699, 711), i=168, next=0
                  NodeList [701, 710), i=169, next=0
                    KindReturnStatement [701, 710), i=170, next=0
                      KindIdentifier "x" [708, 710), i=171, next=0
          KindExpressionStatement [713, 729), i=172, next=177
            KindParenthesizedExpression [713, 728), i=173, next=0
              KindArrowFunction [720, 727), i=174, next=0
                KindEqualsGreaterThanToken [722, 725), i=175, next=176
                KindIdentifier "x" [725, 727), i=176, next=0
          KindIfStatement [729, 771), i=177, next=185
            KindBinaryExpression [739, 745), i=178, next=182
              KindIdentifier "x" [739, 740), i=179, next=180
              KindEqualsEqualsToken [740, 743), i=180, next=181
              KindNumericLiteral [743, 745), i=181, next=0
            KindBlock [746, 771), i=182, next=0
              NodeList [748, 764), i=183, next=0
                KindBreakStatement [748, 764), i=184, next=0
          KindIfStatement [771, 816), i=185, next=0
            KindBinaryExpression [781, 787), i=186, next=190
              KindIdentifier "x" [781, 782), i=187, next=188
              KindEqualsEqualsToken [782, 785), i=188, next=189
              KindNumericLiteral [785, 787), i=189, next=0
            KindBlock [788, 816), i=190, next=0
              NodeList [790, 809), i=191, next=0
                KindContinueStatement [790, 809), i=192, next=0
      KindBinaryExpression [827, 834), i=193, next=0
        KindNumericLiteral [827, 828), i=194, next=195
        KindEqualsEqualsEqualsToken [828, 832), i=195, next=196
        KindNumericLiteral [832, 834), i=196, next=0
    KindForStatement [835, 1021), i=197, next=245
      KindVariableDeclarationList [844, 853), i=198, next=203
        NodeList [847, 853), i=199, next=0
          KindVariableDeclaration [847, 853), i=200, next=0
            KindIdentifier "y" [847, 849), i=201, next=202
            KindNumericLiteral [851, 853), i=202, next=0
      KindBinaryExpression [854, 860), i=203, next=207
        KindIdentifier "y" [854, 856), i=204, next=205
        KindLessThanToken [856, 858), i=205, next=206
        KindNumericLiteral [858, 860), i=206, next=0
      KindPrefixUnaryExpression [861, 865), i=207, next=209
        KindIdentifier "y" [864, 865), i=208, next=0
      KindBlock [866, 1021), i=209, next=0
        NodeList [868, 1018), i=210, next=0
          KindVariableStatement [868, 884), i=211, next=217
            KindVariableDeclarationList [868, 883), i=212, next=0
              NodeList [877, 883), i=213, next=0
                KindVariableDeclaration [877, 883), i=214, next=0
                  KindIdentifier "x" [877, 879), i=215, next=216
                  KindNumericLiteral [881, 883), i=216, next=0
          KindExpressionStatement [884, 915), i=217, next=224
            KindParenthesizedExpression [884, 914), i=218, next=0
              KindFunctionExpression [891, 913), i=219, next=0
                KindBlock [901, 913), i=220, next=0
                  NodeList [903, 912), i=221, next=0
                    KindReturnStatement [903, 912), i=222, next=0
                      KindIdentifier "x" [910, 912), i=223, next=0
          KindExpressionStatement [915, 931), i=224, next=229
            KindParenthesizedExpression [915, 930), i=225, next=0
              KindArrowFunction [922, 929), i=226, next=0
                KindEqualsGreaterThanToken [924, 927), i=227, next=228
                KindIdentifier "x" [927, 929), i=228, next=0
          KindIfStatement [931, 973), i=229, next=237
            KindBinaryExpression [941, 947), i=230, next=234
              KindIdentifier "x" [941, 942), i=231, next=232
              KindEqualsEqualsToken [942, 945), i=232, next=233
              KindNumericLiteral [945, 947), i=233, next=0
            KindBlock [948, 973), i=234, next=0
              NodeList [950, 966), i=235, next=0
                KindBreakStatement [950, 966), i=236, next=0
          KindIfStatement [973, 1018), i=237, next=0
            KindBinaryExpression [983, 989), i=238, next=242
              KindIdentifier "x" [983, 984), i=239, next=240
              KindEqualsEqualsToken [984, 987), i=240, next=241
              KindNumericLiteral [987, 989), i=241, next=0
            KindBlock [990, 1018), i=242, next=0
              NodeList [992, 1011), i=243, next=0
                KindContinueStatement [992, 1011), i=244, next=0
    KindForStatement [1021, 1206), i=245, next=40
      KindVariableDeclarationList [1030, 1046), i=246, next=254
        NodeList [1033, 1046), i=247, next=0
          KindVariableDeclaration [1033, 1039), i=248, next=251
            KindIdentifier "x" [1033, 1035), i=249, next=250
            KindNumericLiteral [1037, 1039), i=250, next=0
          KindVariableDeclaration [1040, 1046), i=251, next=0
            KindIdentifier "y" [1040, 1042), i=252, next=253
            KindNumericLiteral [1044, 1046), i=253, next=0
      KindBinaryExpression [1047, 1053), i=254, next=2
        KindIdentifier "x" [1047, 1049), i=255, next=0
        KindLessThanToken [1049, 1051), i=256, next=1
        KindNumericLiteral [1051, 1053), i=257, next=0
      KindPrefixUnaryExpression [1054, 1058), i=258, next=4
        KindIdentifier "x" [1057, 1058), i=259, next=0
      KindBlock [1059, 1206), i=260, next=0
        NodeList [1061, 1203), i=261, next=0
          KindExpressionStatement [1061, 1096), i=262, next=16
            KindParenthesizedExpression [1061, 1095), i=263, next=0
              KindFunctionExpression [1068, 1094), i=264, next=0
                KindBlock [1078, 1094), i=265, next=0
                  NodeList [1080, 1093), i=266, next=0
                    KindReturnStatement [1080, 1093), i=267, next=0
                      KindBinaryExpression [1087, 1093), i=268, next=0
                        KindIdentifier "x" [1087, 1089), i=269, next=14
                        KindPlusToken [1089, 1091), i=270, next=15
                        KindIdentifier "y" [1091, 1093), i=271, next=0
          KindExpressionStatement [1096, 1116), i=272, next=24
            KindParenthesizedExpression [1096, 1115), i=273, next=0
              KindArrowFunction [1103, 1114), i=274, next=0
                KindEqualsGreaterThanToken [1105, 1108), i=275, next=20
                KindBinaryExpression [1108, 1114), i=276, next=0
                  KindIdentifier "x" [1108, 1110), i=277, next=22
                  KindPlusToken [1110, 1112), i=278, next=23
                  KindIdentifier "y" [1112, 1114), i=279, next=0
          KindIfStatement [1116, 1158), i=280, next=32
            KindBinaryExpression [1126, 1132), i=281, next=29
              KindIdentifier "x" [1126, 1127), i=282, next=27
              KindEqualsEqualsToken [1127, 1130), i=283, next=28
              KindNumericLiteral [1130, 1132), i=284, next=0
            KindBlock [1133, 1158), i=285, next=0
              NodeList [1135, 1151), i=286, next=0
                KindBreakStatement [1135, 1151), i=287, next=0
          KindIfStatement [1158, 1203), i=288, next=0
            KindBinaryExpression [1168, 1174), i=289, next=37
              KindIdentifier "x" [1168, 1169), i=290, next=35
              KindEqualsEqualsToken [1169, 1172), i=291, next=36
              KindNumericLiteral [1172, 1174), i=292, next=0
            KindBlock [1175, 1203), i=293, next=0
              NodeList [1177, 1196), i=294, next=0
                KindContinueStatement [1177, 1196), i=295, next=0
    KindWhileStatement [1206, 1387), i=296, next=88
      KindBinaryExpression [1217, 1224), i=297, next=45
        KindNumericLiteral [1217, 1218), i=298, next=43
        KindEqualsEqualsEqualsToken [1218, 1222), i=299, next=44
        KindNumericLiteral [1222, 1224), i=300, next=0
      KindBlock [1225, 1387), i=301, next=0
        NodeList [1227, 1384), i=302, next=0
          KindVariableStatement [1227, 1242), i=303, next=54
            KindVariableDeclarationList [1227, 1241), i=304, next=0
              NodeList [1236, 1241), i=305, next=0
                KindVariableDeclaration [1236, 1238), i=306, next=52
                  KindIdentifier "x" [1236, 1238), i=307, next=0
                KindVariableDeclaration [1239, 1241), i=308, next=0
                  KindIdentifier "y" [1239, 1241), i=309, next=0
          KindExpressionStatement [1242, 1277), i=310, next=64
            KindParenthesizedExpression [1242, 1276), i=311, next=0
              KindFunctionExpression [1249, 1275), i=312, next=0
                KindBlock [1259, 1275), i=313, next=0
                  NodeList [1261, 1274), i=314, next=0
                    KindReturnStatement [1261, 1274), i=315, next=0
                      KindBinaryExpression [1268, 1274), i=316, next=0
                        KindIdentifier "x" [1268, 1270), i=317, next=62
                        KindPlusToken [1270, 1272), i=318, next=63
                        KindIdentifier "y" [1272, 1274), i=319, next=0
          KindExpressionStatement [1277, 1297), i=320, next=72
            KindParenthesizedExpression [1277, 1296), i=321, next=0
              KindArrowFunction [1284, 1295), i=322, next=0
                KindEqualsGreaterThanToken [1286, 1289), i=323, next=68
                KindBinaryExpression [1289, 1295), i=324, next=0
                  KindIdentifier "x" [1289, 1291), i=325, next=70
                  KindPlusToken [1291, 1293), i=326, next=71
                  KindIdentifier "y" [1293, 1295), i=327, next=0
          KindIfStatement [1297, 1339), i=328, next=80
            KindBinaryExpression [1307, 1313), i=329, next=77
              KindIdentifier "x" [1307, 1308), i=330, next=75
              KindEqualsEqualsToken [1308, 1311), i=331, next=76
              KindNumericLiteral [1311, 1313), i=332, next=0
            KindBlock [1314, 1339), i=333, next=0
              NodeList [1316, 1332), i=334, next=0
                KindBreakStatement [1316, 1332), i=335, next=0
          KindIfStatement [1339, 1384), i=336, next=0
            KindBinaryExpression [1349, 1355), i=337, next=85
              KindIdentifier "x" [1349, 1350), i=338, next=83
              KindEqualsEqualsToken [1350, 1353), i=339, next=84
              KindNumericLiteral [1353, 1355), i=340, next=0
            KindBlock [1356, 1384), i=341, next=0
              NodeList [1358, 1377), i=342, next=0
                KindContinueStatement [1358, 1377), i=343, next=0
    KindDoStatement [1387, 1571), i=344, next=136
      KindBlock [1393, 1555), i=345, next=132
        NodeList [1395, 1552), i=346, next=0
          KindVariableStatement [1395, 1410), i=347, next=98
            KindVariableDeclarationList [1395, 1409), i=348, next=0
              NodeList [1404, 1409), i=349, next=0
                KindVariableDeclaration [1404, 1406), i=350, next=96
                  KindIdentifier "x" [1404, 1406), i=351, next=0
                KindVariableDeclaration [1407, 1409), i=352, next=0
                  KindIdentifier "y" [1407, 1409), i=353, next=0
          KindExpressionStatement [1410, 1445), i=354, next=108
            KindParenthesizedExpression [1410, 1444), i=355, next=0
              KindFunctionExpression [1417, 1443), i=356, next=0
                KindBlock [1427, 1443), i=357, next=0
                  NodeList [1429, 1442), i=358, next=0
                    KindReturnStatement [1429, 1442), i=359, next=0
                      KindBinaryExpression [1436, 1442), i=360, next=0
                        KindIdentifier "x" [1436, 1438), i=361, next=106
                        KindPlusToken [1438, 1440), i=362, next=107
                        KindIdentifier "y" [1440, 1442), i=363, next=0
          KindExpressionStatement [1445, 1465), i=364, next=116
            KindParenthesizedExpression [1445, 1464), i=365, next=0
              KindArrowFunction [1452, 1463), i=366, next=0
                KindEqualsGreaterThanToken [1454, 1457), i=367, next=112
                KindBinaryExpression [1457, 1463), i=368, next=0
                  KindIdentifier "x" [1457, 1459), i=369, next=114
                  KindPlusToken [1459, 1461), i=370, next=115
                  KindIdentifier "y" [1461, 1463), i=371, next=0
          KindIfStatement [1465, 1507), i=372, next=124
            KindBinaryExpression [1475, 1481), i=373, next=121
              KindIdentifier "x" [1475, 1476), i=374, next=119
              KindEqualsEqualsToken [1476, 1479), i=375, next=120
              KindNumericLiteral [1479, 1481), i=376, next=0
            KindBlock [1482, 1507), i=377, next=0
              NodeList [1484, 1500), i=378, next=0
                KindBreakStatement [1484, 1500), i=379, next=0
          KindIfStatement [1507, 1552), i=380, next=0
            KindBinaryExpression [1517, 1523), i=381, next=129
              KindIdentifier "x" [1517, 1518), i=382, next=127
              KindEqualsEqualsToken [1518, 1521), i=383, next=128
              KindNumericLiteral [1521, 1523), i=384, next=0
            KindBlock [1524, 1552), i=385, next=0
              NodeList [1526, 1545), i=386, next=0
                KindContinueStatement [1526, 1545), i=387, next=0
      KindBinaryExpression [1563, 1570), i=388, next=0
        KindNumericLiteral [1563, 1564), i=389, next=134
        KindEqualsEqualsEqualsToken [1564, 1568), i=390, next=135
        KindNumericLiteral [1568, 1570), i=391, next=0
    KindForStatement [1571, 1765), i=392, next=190
      KindVariableDeclarationList [1580, 1589), i=393, next=142
        NodeList [1583, 1589), i=394, next=0
          KindVariableDeclaration [1583, 1589), i=395, next=0
            KindIdentifier "y" [1583, 1585), i=396, next=141
            KindNumericLiteral [1587, 1589), i=397, next=0
      KindBinaryExpression [1590, 1596), i=398, next=146
        KindIdentifier "y" [1590, 1592), i=399, next=144
        KindLessThanToken [1592, 1594), i=400, next=145
        KindNumericLiteral [1594, 1596), i=401, next=0
      KindPrefixUnaryExpression [1597, 1601), i=402, next=148
        KindIdentifier "y" [1600, 1601), i=403, next=0
      KindBlock [1602, 1765), i=404, next=0
        NodeList [1604, 1762), i=405, next=0
          KindVariableStatement [1604, 1620), i=406, next=156
            KindVariableDeclarationList [1604, 1619), i=407, next=0
              NodeList [1613, 1619), i=408, next=0
                KindVariableDeclaration [1613, 1619), i=409, next=0
                  KindIdentifier "x" [1613, 1615), i=410, next=155
                  KindNumericLiteral [1617, 1619), i=411, next=0
          KindExpressionStatement [1620, 1655), i=412, next=166
            KindParenthesizedExpression [1620, 1654), i=413, next=0
              KindFunctionExpression [1627, 1653), i=414, next=0
                KindBlock [1637, 1653), i=415, next=0
                  NodeList [1639, 1652), i=416, next=0
                    KindReturnStatement [1639, 1652), i=417, next=0
                      KindBinaryExpression [1646, 1652), i=418, next=0
                        KindIdentifier "x" [1646, 1648), i=419, next=164
                        KindPlusToken [1648, 1650), i=420, next=165
                        KindIdentifier "y" [1650, 1652), i=421, next=0
          KindExpressionStatement [1655, 1675), i=422, next=174
            KindParenthesizedExpression [1655, 1674), i=423, next=0
              KindArrowFunction [1662, 1673), i=424, next=0
                KindEqualsGreaterThanToken [1664, 1667), i=425, next=170
                KindBinaryExpression [1667, 1673), i=426, next=0
                  KindIdentifier "x" [1667, 1669), i=427, next=172
                  KindPlusToken [1669, 1671), i=428, next=173
                  KindIdentifier "y" [1671, 1673), i=429, next=0
          KindIfStatement [1675, 1717), i=430, next=182
            KindBinaryExpression [1685, 1691), i=431, next=179
              KindIdentifier "x" [1685, 1686), i=432, next=177
              KindEqualsEqualsToken [1686, 1689), i=433, next=178
              KindNumericLiteral [1689, 1691), i=434, next=0
            KindBlock [1692, 1717), i=435, next=0
              NodeList [1694, 1710), i=436, next=0
                KindBreakStatement [1694, 1710), i=437, next=0
          KindIfStatement [1717, 1762), i=438, next=0
            KindBinaryExpression [1727, 1733), i=439, next=187
              KindIdentifier "x" [1727, 1728), i=440, next=185
              KindEqualsEqualsToken [1728, 1731), i=441, next=186
              KindNumericLiteral [1731, 1733), i=442, next=0
            KindBlock [1734, 1762), i=443, next=0
              NodeList [1736, 1755), i=444, next=0
                KindContinueStatement [1736, 1755), i=445, next=0
    KindForOfStatement [1765, 1943), i=446, next=226
      KindVariableDeclarationList [1790, 1797), i=447, next=195
        NodeList [1795, 1797), i=448, next=0
          KindVariableDeclaration [1795, 1797), i=449, next=0
            KindIdentifier "x" [1795, 1797), i=450, next=0
      KindArrayLiteralExpression [1800, 1803), i=451, next=196
      KindBlock [1804, 1943), i=452, next=0
        NodeList [1806, 1940), i=453, next=0
          KindExpressionStatement [1806, 1837), i=454, next=205
            KindParenthesizedExpression [1806, 1836), i=455, next=0
              KindFunctionExpression [1813, 1835), i=456, next=0
                KindBlock [1823, 1835), i=457, next=0
                  NodeList [1825, 1834), i=458, next=0
                    KindReturnStatement [1825, 1834), i=459, next=0
                      KindIdentifier "x" [1832, 1834), i=460, next=0
          KindExpressionStatement [1837, 1853), i=461, next=210
            KindParenthesizedExpression [1837, 1852), i=462, next=0
              KindArrowFunction [1844, 1851), i=463, next=0
                KindEqualsGreaterThanToken [1846, 1849), i=464, next=209
                KindIdentifier "x" [1849, 1851), i=465, next=0
          KindIfStatement [1853, 1895), i=466, next=218
            KindBinaryExpression [1863, 1869), i=467, next=215
              KindIdentifier "x" [1863, 1864), i=468, next=213
              KindEqualsEqualsToken [1864, 1867), i=469, next=214
              KindNumericLiteral [1867, 1869), i=470, next=0
            KindBlock [1870, 1895), i=471, next=0
              NodeList [1872, 1888), i=472, next=0
                KindBreakStatement [1872, 1888), i=473, next=0
          KindIfStatement [1895, 1940), i=474, next=0
            KindBinaryExpression [1905, 1911), i=475, next=223
              KindIdentifier "x" [1905, 1906), i=476, next=221
              KindEqualsEqualsToken [1906, 1909), i=477, next=222
              KindNumericLiteral [1909, 1911), i=478, next=0
            KindBlock [1912, 1940), i=479, next=0
              NodeList [1914, 1933), i=480, next=0
                KindContinueStatement [1914, 1933), i=481, next=0
    KindForInStatement [1943, 2109), i=482, next=6
      KindVariableDeclarationList [1952, 1959), i=483, next=231
        NodeList [1957, 1959), i=484, next=0
          KindVariableDeclaration [1957, 1959), i=485, next=0
            KindIdentifier "x" [1957, 1959), i=486, next=0
      KindArrayLiteralExpression [1962, 1965), i=487, next=232
      KindBlock [1966, 2109), i=488, next=0
        NodeList [1968, 2106), i=489, next=0
          KindExpressionStatement [1968, 1999), i=490, next=241
            KindParenthesizedExpression [1968, 1998), i=491, next=0
              KindFunctionExpression [1975, 1997), i=492, next=0
                KindBlock [1985, 1997), i=493, next=0
                  NodeList [1987, 1996), i=494, next=0
                    KindReturnStatement [1987, 1996), i=495, next=0
                      KindIdentifier "x" [1994, 1996), i=496, next=0
          KindExpressionStatement [1999, 2015), i=497, next=246
            KindParenthesizedExpression [1999, 2014), i=498, next=0
              KindArrowFunction [2006, 2013), i=499, next=0
                KindEqualsGreaterThanToken [2008, 2011), i=500, next=245
                KindIdentifier "x" [2011, 2013), i=501, next=0
          KindIfStatement [2015, 2059), i=502, next=254
            KindBinaryExpression [2025, 2033), i=503, next=251
              KindIdentifier "x" [2025, 2026), i=504, next=249
              KindEqualsEqualsToken [2026, 2029), i=505, next=250
              KindStringLiteral "1" [2029, 2033), i=506, next=0
            KindBlock [2034, 2059), i=507, next=0
              NodeList [2036, 2052), i=508, next=0
                KindBreakStatement [2036, 2052), i=509, next=0
          KindIfStatement [2059, 2106), i=510, next=0
            KindBinaryExpression [2069, 2077), i=511, next=3
              KindIdentifier "x" [2069, 2070), i=512, next=1
              KindEqualsEqualsToken [2070, 2073), i=513, next=2
              KindStringLiteral "2" [2073, 2077), i=514, next=0
            KindBlock [2078, 2106), i=515, next=0
              NodeList [2080, 2099), i=516, next=0
                KindContinueStatement [2080, 2099), i=517, next=0
    KindForStatement [2109, 2279), i=518, next=46
      KindVariableDeclarationList [2120, 2131), i=519, next=12
        NodeList [2125, 2131), i=520, next=0
          KindVariableDeclaration [2125, 2131), i=521, next=0
            KindIdentifier "x" [2125, 2127), i=522, next=11
            KindNumericLiteral [2129, 2131), i=523, next=0
      KindBinaryExpression [2132, 2138), i=524, next=16
        KindIdentifier "x" [2132, 2134), i=525, next=14
        KindLessThanToken [2134, 2136), i=526, next=15
        KindNumericLiteral [2136, 2138), i=527, next=0
      KindBlock [2140, 2279), i=528, next=0
        NodeList [2142, 2276), i=529, next=0
          KindExpressionStatement [2142, 2173), i=530, next=25
            KindParenthesizedExpression [2142, 2172), i=531, next=0
              KindFunctionExpression [2149, 2171), i=532, next=0
                KindBlock [2159, 2171), i=533, next=0
                  NodeList [2161, 2170), i=534, next=0
                    KindReturnStatement [2161, 2170), i=535, next=0
                      KindIdentifier "x" [2168, 2170), i=536, next=0
          KindExpressionStatement [2173, 2189), i=537, next=30
            KindParenthesizedExpression [2173, 2188), i=538, next=0
              KindArrowFunction [2180, 2187), i=539, next=0
                KindEqualsGreaterThanToken [2182, 2185), i=540, next=29
                KindIdentifier "x" [2185, 2187), i=541, next=0
          KindIfStatement [2189, 2231), i=542, next=38
            KindBinaryExpression [2199, 2205), i=543, next=35
              KindIdentifier "x" [2199, 2200), i=544, next=33
              KindEqualsEqualsToken [2200, 2203), i=545, next=34
              KindNumericLiteral [2203, 2205), i=546, next=0
            KindBlock [2206, 2231), i=547, next=0
              NodeList [2208, 2224), i=548, next=0
                KindBreakStatement [2208, 2224), i=549, next=0
          KindIfStatement [2231, 2276), i=550, next=0
            KindBinaryExpression [2241, 2247), i=551, next=43
              KindIdentifier "x" [2241, 2242), i=552, next=41
              KindEqualsEqualsToken [2242, 2245), i=553, next=42
              KindNumericLiteral [2245, 2247), i=554, next=0
            KindBlock [2248, 2276), i=555, next=0
              NodeList [2250, 2269), i=556, next=0
                KindContinueStatement [2250, 2269), i=557, next=0
    KindWhileStatement [2279, 2455), i=558, next=87
      KindBinaryExpression [2290, 2297), i=559, next=51
        KindNumericLiteral [2290, 2291), i=560, next=49
        KindEqualsEqualsEqualsToken [2291, 2295), i=561, next=50
        KindNumericLiteral [2295, 2297), i=562, next=0
      KindBlock [2298, 2455), i=563, next=0
        NodeList [2300, 2452), i=564, next=0
          KindVariableStatement [2300, 2318), i=565, next=59
            KindVariableDeclarationList [2300, 2317), i=566, next=0
              NodeList [2311, 2317), i=567, next=0
                KindVariableDeclaration [2311, 2317), i=568, next=0
                  KindIdentifier "x" [2311, 2313), i=569, next=58
                  KindNumericLiteral [2315, 2317), i=570, next=0
          KindExpressionStatement [2318, 2349), i=571, next=66
            KindParenthesizedExpression [2318, 2348), i=572, next=0
              KindFunctionExpression [2325, 2347), i=573, next=0
                KindBlock [2335, 2347), i=574, next=0
                  NodeList [2337, 2346), i=575, next=0
                    KindReturnStatement [2337, 2346), i=576, next=0
                      KindIdentifier "x" [2344, 2346), i=577, next=0
          KindExpressionStatement [2349, 2365), i=578, next=71
            KindParenthesizedExpression [2349, 2364), i=579, next=0
              KindArrowFunction [2356, 2363), i=580, next=0
                KindEqualsGreaterThanToken [2358, 2361), i=581, next=70
                KindIdentifier "x" [2361, 2363), i=582, next=0
          KindIfStatement [2365, 2407), i=583, next=79
            KindBinaryExpression [2375, 2381), i=584, next=76
              KindIdentifier "x" [2375, 2376), i=585, next=74
              KindEqualsEqualsToken [2376, 2379), i=586, next=75
              KindNumericLiteral [2379, 2381), i=587, next=0
            KindBlock [2382, 2407), i=588, next=0
              NodeList [2384, 2400), i=589, next=0
                KindBreakStatement [2384, 2400), i=590, next=0
          KindIfStatement [2407, 2452), i=591, next=0
            KindBinaryExpression [2417, 2423), i=592, next=84
              KindIdentifier "x" [2417, 2418), i=593, next=82
              KindEqualsEqualsToken [2418, 2421), i=594, next=83
              KindNumericLiteral [2421, 2423), i=595, next=0
            KindBlock [2424, 2452), i=596, next=0
              NodeList [2426, 2445), i=597, next=0
                KindContinueStatement [2426, 2445), i=598, next=0
    KindDoStatement [2455, 2634), i=599, next=128
      KindBlock [2461, 2618), i=600, next=124
        NodeList [2463, 2615), i=601, next=0
          KindVariableStatement [2463, 2481), i=602, next=96
            KindVariableDeclarationList [2463, 2480), i=603, next=0
              NodeList [2474, 2480), i=604, next=0
                KindVariableDeclaration [2474, 2480), i=605, next=0
                  KindIdentifier "x" [2474, 2476), i=606, next=95
                  KindNumericLiteral [2478, 2480), i=607, next=0
          KindExpressionStatement [2481, 2512), i=608, next=103
            KindParenthesizedExpression [2481, 2511), i=609, next=0
              KindFunctionExpression [2488, 2510), i=610, next=0
                KindBlock [2498, 2510), i=611, next=0
                  NodeList [2500, 2509), i=612, next=0
                    KindReturnStatement [2500, 2509), i=613, next=0
                      KindIdentifier "x" [2507, 2509), i=614, next=0
          KindExpressionStatement [2512, 2528), i=615, next=108
            KindParenthesizedExpression [2512, 2527), i=616, next=0
              KindArrowFunction [2519, 2526), i=617, next=0
                KindEqualsGreaterThanToken [2521, 2524), i=618, next=107
                KindIdentifier "x" [2524, 2526), i=619, next=0
          KindIfStatement [2528, 2570), i=620, next=116
            KindBinaryExpression [2538, 2544), i=621, next=113
              KindIdentifier "x" [2538, 2539), i=622, next=111
              KindEqualsEqualsToken [2539, 2542), i=623, next=112
              KindNumericLiteral [2542, 2544), i=624, next=0
            KindBlock [2545, 2570), i=625, next=0
              NodeList [2547, 2563), i=626, next=0
                KindBreakStatement [2547, 2563), i=627, next=0
          KindIfStatement [2570, 2615), i=628, next=0
            KindBinaryExpression [2580, 2586), i=629, next=121
              KindIdentifier "x" [2580, 2581), i=630, next=119
              KindEqualsEqualsToken [2581, 2584), i=631, next=120
              KindNumericLiteral [2584, 2586), i=632, next=0
            KindBlock [2587, 2615), i=633, next=0
              NodeList [2589, 2608), i=634, next=0
                KindContinueStatement [2589, 2608), i=635, next=0
      KindBinaryExpression [2626, 2633), i=636, next=0
        KindNumericLiteral [2626, 2627), i=637, next=126
        KindEqualsEqualsEqualsToken [2627, 2631), i=638, next=127
        KindNumericLiteral [2631, 2633), i=639, next=0
    KindForStatement [2634, 2820), i=640, next=174
      KindVariableDeclarationList [2643, 2654), i=641, next=134
        NodeList [2648, 2654), i=642, next=0
          KindVariableDeclaration [2648, 2654), i=643, next=0
            KindIdentifier "y" [2648, 2650), i=644, next=133
            KindNumericLiteral [2652, 2654), i=645, next=0
      KindBinaryExpression [2655, 2661), i=646, next=138
        KindIdentifier "y" [2655, 2657), i=647, next=136
        KindLessThanToken [2657, 2659), i=648, next=137
        KindNumericLiteral [2659, 2661), i=649, next=0
      KindBlock [2663, 2820), i=650, next=0
        NodeList [2665, 2817), i=651, next=0
          KindVariableStatement [2665, 2683), i=652, next=146
            KindVariableDeclarationList [2665, 2682), i=653, next=0
              NodeList [2676, 2682), i=654, next=0
                KindVariableDeclaration [2676, 2682), i=655, next=0
                  KindIdentifier "x" [2676, 2678), i=656, next=145
                  KindNumericLiteral [2680, 2682), i=657, next=0
          KindExpressionStatement [2683, 2714), i=658, next=153
            KindParenthesizedExpression [2683, 2713), i=659, next=0
              KindFunctionExpression [2690, 2712), i=660, next=0
                KindBlock [2700, 2712), i=661, next=0
                  NodeList [2702, 2711), i=662, next=0
                    KindReturnStatement [2702, 2711), i=663, next=0
                      KindIdentifier "x" [2709, 2711), i=664, next=0
          KindExpressionStatement [2714, 2730), i=665, next=158
            KindParenthesizedExpression [2714, 2729), i=666, next=0
              KindArrowFunction [2721, 2728), i=667, next=0
                KindEqualsGreaterThanToken [2723, 2726), i=668, next=157
                KindIdentifier "x" [2726, 2728), i=669, next=0
          KindIfStatement [2730, 2772), i=670, next=166
            KindBinaryExpression [2740, 2746), i=671, next=163
              KindIdentifier "x" [2740, 2741), i=672, next=161
              KindEqualsEqualsToken [2741, 2744), i=673, next=162
              KindNumericLiteral [2744, 2746), i=674, next=0
            KindBlock [2747, 2772), i=675, next=0
              NodeList [2749, 2765), i=676, next=0
                KindBreakStatement [2749, 2765), i=677, next=0
          KindIfStatement [2772, 2817), i=678, next=0
            KindBinaryExpression [2782, 2788), i=679, next=171
              KindIdentifier "x" [2782, 2783), i=680, next=169
              KindEqualsEqualsToken [2783, 2786), i=681, next=170
              KindNumericLiteral [2786, 2788), i=682, next=0
            KindBlock [2789, 2817), i=683, next=0
              NodeList [2791, 2810), i=684, next=0
                KindContinueStatement [2791, 2810), i=685, next=0
    KindForStatement [2820, 3003), i=686, next=223
      KindVariableDeclarationList [2829, 2847), i=687, next=183
        NodeList [2834, 2847), i=688, next=0
          KindVariableDeclaration [2834, 2840), i=689, next=180
            KindIdentifier "x" [2834, 2836), i=690, next=179
            KindNumericLiteral [2838, 2840), i=691, next=0
          KindVariableDeclaration [2841, 2847), i=692, next=0
            KindIdentifier "y" [2841, 2843), i=693, next=182
            KindNumericLiteral [2845, 2847), i=694, next=0
      KindBinaryExpression [2848, 2854), i=695, next=187
        KindIdentifier "x" [2848, 2850), i=696, next=185
        KindLessThanToken [2850, 2852), i=697, next=186
        KindNumericLiteral [2852, 2854), i=698, next=0
      KindBlock [2856, 3003), i=699, next=0
        NodeList [2858, 3000), i=700, next=0
          KindExpressionStatement [2858, 2893), i=701, next=199
            KindParenthesizedExpression [2858, 2892), i=702, next=0
              KindFunctionExpression [2865, 2891), i=703, next=0
                KindBlock [2875, 2891), i=704, next=0
                  NodeList [2877, 2890), i=705, next=0
                    KindReturnStatement [2877, 2890), i=706, next=0
                      KindBinaryExpression [2884, 2890), i=707, next=0
                        KindIdentifier "x" [2884, 2886), i=708, next=197
                        KindPlusToken [2886, 2888), i=709, next=198
                        KindIdentifier "y" [2888, 2890), i=710, next=0
          KindExpressionStatement [2893, 2913), i=711, next=207
            KindParenthesizedExpression [2893, 2912), i=712, next=0
              KindArrowFunction [2900, 2911), i=713, next=0
                KindEqualsGreaterThanToken [2902, 2905), i=714, next=203
                KindBinaryExpression [2905, 2911), i=715, next=0
                  KindIdentifier "x" [2905, 2907), i=716, next=205
                  KindPlusToken [2907, 2909), i=717, next=206
                  KindIdentifier "y" [2909, 2911), i=718, next=0
          KindIfStatement [2913, 2955), i=719, next=215
            KindBinaryExpression [2923, 2929), i=720, next=212
              KindIdentifier "x" [2923, 2924), i=721, next=210
              KindEqualsEqualsToken [2924, 2927), i=722, next=211
              KindNumericLiteral [2927, 2929), i=723, next=0
            KindBlock [2930, 2955), i=724, next=0
              NodeList [2932, 2948), i=725, next=0
                KindBreakStatement [2932, 2948), i=726, next=0
          KindIfStatement [2955, 3000), i=727, next=0
            KindBinaryExpression [2965, 2971), i=728, next=220
              KindIdentifier "x" [2965, 2966), i=729, next=218
              KindEqualsEqualsToken [2966, 2969), i=730, next=219
              KindNumericLiteral [2969, 2971), i=731, next=0
            KindBlock [2972, 3000), i=732, next=0
              NodeList [2974, 2993), i=733, next=0
                KindContinueStatement [2974, 2993), i=734, next=0
    KindWhileStatement [3003, 3194), i=735, next=17
      KindBinaryExpression [3014, 3021), i=736, next=228
        KindNumericLiteral [3014, 3015), i=737, next=226
        KindEqualsEqualsEqualsToken [3015, 3019), i=738, next=227
        KindNumericLiteral [3019, 3021), i=739, next=0
      KindBlock [3022, 3194), i=740, next=0
        NodeList [3024, 3191), i=741, next=0
          KindVariableStatement [3024, 3049), i=742, next=239
            KindVariableDeclarationList [3024, 3048), i=743, next=0
              NodeList [3035, 3048), i=744, next=0
                KindVariableDeclaration [3035, 3041), i=745, next=236
                  KindIdentifier "x" [3035, 3037), i=746, next=235
                  KindNumericLiteral [3039, 3041), i=747, next=0
                KindVariableDeclaration [3042, 3048), i=748, next=0
                  KindIdentifier "y" [3042, 3044), i=749, next=238
                  KindNumericLiteral [3046, 3048), i=750, next=0
          KindExpressionStatement [3049, 3084), i=751, next=249
            KindParenthesizedExpression [3049, 3083), i=752, next=0
              KindFunctionExpression [3056, 3082), i=753, next=0
                KindBlock [3066, 3082), i=754, next=0
                  NodeList [3068, 3081), i=755, next=0
                    KindReturnStatement [3068, 3081), i=756, next=0
                      KindBinaryExpression [3075, 3081), i=757, next=0
                        KindIdentifier "x" [3075, 3077), i=758, next=247
                        KindPlusToken [3077, 3079), i=759, next=248
                        KindIdentifier "y" [3079, 3081), i=760, next=0
          KindExpressionStatement [3084, 3104), i=761, next=1
            KindParenthesizedExpression [3084, 3103), i=762, next=0
              KindArrowFunction [3091, 3102), i=763, next=0
                KindEqualsGreaterThanToken [3093, 3096), i=764, next=253
                KindBinaryExpression [3096, 3102), i=765, next=0
                  KindIdentifier "x" [3096, 3098), i=766, next=255
                  KindPlusToken [3098, 3100), i=767, next=0
                  KindIdentifier "y" [3100, 3102), i=768, next=0
          KindIfStatement [3104, 3146), i=769, next=9
            KindBinaryExpression [3114, 3120), i=770, next=6
              KindIdentifier "x" [3114, 3115), i=771, next=4
              KindEqualsEqualsToken [3115, 3118), i=772, next=5
              KindNumericLiteral [3118, 3120), i=773, next=0
            KindBlock [3121, 3146), i=774, next=0
              NodeList [3123, 3139), i=775, next=0
                KindBreakStatement [3123, 3139), i=776, next=0
          KindIfStatement [3146, 3191), i=777, next=0
            KindBinaryExpression [3156, 3162), i=778, next=14
              KindIdentifier "x" [3156, 3157), i=779, next=12
              KindEqualsEqualsToken [3157, 3160), i=780, next=13
              KindNumericLiteral [3160, 3162), i=781, next=0
            KindBlock [3163, 3191), i=782, next=0
              NodeList [3165, 3184), i=783, next=0
                KindContinueStatement [3165, 3184), i=784, next=0
    KindDoStatement [3194, 3388), i=785, next=67
      KindBlock [3200, 3372), i=786, next=63
        NodeList [3202, 3369), i=787, next=0
          KindVariableStatement [3202, 3227), i=788, next=29
            KindVariableDeclarationList [3202, 3226), i=789, next=0
              NodeList [3213, 3226), i=790, next=0
                KindVariableDeclaration [3213, 3219), i=791, next=26
                  KindIdentifier "x" [3213, 3215), i=792, next=25
                  KindNumericLiteral [3217, 3219), i=793, next=0
                KindVariableDeclaration [3220, 3226), i=794, next=0
                  KindIdentifier "y" [3220, 3222), i=795, next=28
                  KindNumericLiteral [3224, 3226), i=796, next=0
          KindExpressionStatement [3227, 3262), i=797, next=39
            KindParenthesizedExpression [3227, 3261), i=798, next=0
              KindFunctionExpression [3234, 3260), i=799, next=0
                KindBlock [3244, 3260), i=800, next=0
                  NodeList [3246, 3259), i=801, next=0
                    KindReturnStatement [3246, 3259), i=802, next=0
                      KindBinaryExpression [3253, 3259), i=803, next=0
                        KindIdentifier "x" [3253, 3255), i=804, next=37
                        KindPlusToken [3255, 3257), i=805, next=38
                        KindIdentifier "y" [3257, 3259), i=806, next=0
          KindExpressionStatement [3262, 3282), i=807, next=47
            KindParenthesizedExpression [3262, 3281), i=808, next=0
              KindArrowFunction [3269, 3280), i=809, next=0
                KindEqualsGreaterThanToken [3271, 3274), i=810, next=43
                KindBinaryExpression [3274, 3280), i=811, next=0
                  KindIdentifier "x" [3274, 3276), i=812, next=45
                  KindPlusToken [3276, 3278), i=813, next=46
                  KindIdentifier "y" [3278, 3280), i=814, next=0
          KindIfStatement [3282, 3324), i=815, next=55
            KindBinaryExpression [3292, 3298), i=816, next=52
              KindIdentifier "x" [3292, 3293), i=817, next=50
              KindEqualsEqualsToken [3293, 3296), i=818, next=51
              KindNumericLiteral [3296, 3298), i=819, next=0
            KindBlock [3299, 3324), i=820, next=0
              NodeList [3301, 3317), i=821, next=0
                KindBreakStatement [3301, 3317), i=822, next=0
          KindIfStatement [3324, 3369), i=823, next=0
            KindBinaryExpression [3334, 3340), i=824, next=60
              KindIdentifier "x" [3334, 3335), i=825, next=58
              KindEqualsEqualsToken [3335, 3338), i=826, next=59
              KindNumericLiteral [3338, 3340), i=827, next=0
            KindBlock [3341, 3369), i=828, next=0
              NodeList [3343, 3362), i=829, next=0
                KindContinueStatement [3343, 3362), i=830, next=0
      KindBinaryExpression [3380, 3387), i=831, next=0
        KindNumericLiteral [3380, 3381), i=832, next=65
        KindEqualsEqualsEqualsToken [3381, 3385), i=833, next=66
        KindNumericLiteral [3385, 3387), i=834, next=0
    KindForStatement [3388, 3582), i=835, next=0
      KindVariableDeclarationList [3397, 3408), i=836, next=73
        NodeList [3402, 3408), i=837, next=0
          KindVariableDeclaration [3402, 3408), i=838, next=0
            KindIdentifier "y" [3402, 3404), i=839, next=72
            KindNumericLiteral [3406, 3408), i=840, next=0
      KindBinaryExpression [3409, 3415), i=841, next=77
        KindIdentifier "y" [3409, 3411), i=842, next=75
        KindLessThanToken [3411, 3413), i=843, next=76
        KindNumericLiteral [3413, 3415), i=844, next=0
      KindBlock [3417, 3582), i=845, next=0
        NodeList [3419, 3579), i=846, next=0
          KindVariableStatement [3419, 3437), i=847, next=85
            KindVariableDeclarationList [3419, 3436), i=848, next=0
              NodeList [3430, 3436), i=849, next=0
                KindVariableDeclaration [3430, 3436), i=850, next=0
                  KindIdentifier "x" [3430, 3432), i=851, next=84
                  KindNumericLiteral [3434, 3436), i=852, next=0
          KindExpressionStatement [3437, 3472), i=853, next=95
            KindParenthesizedExpression [3437, 3471), i=854, next=0
              KindFunctionExpression [3444, 3470), i=855, next=0
                KindBlock [3454, 3470), i=856, next=0
                  NodeList [3456, 3469), i=857, next=0
                    KindReturnStatement [3456, 3469), i=858, next=0
                      KindBinaryExpression [3463, 3469), i=859, next=0
                        KindIdentifier "x" [3463, 3465), i=860, next=93
                        KindPlusToken [3465, 3467), i=861, next=94
                        KindIdentifier "y" [3467, 3469), i=862, next=0
          KindExpressionStatement [3472, 3492), i=863, next=103
            KindParenthesizedExpression [3472, 3491), i=864, next=0
              KindArrowFunction [3479, 3490), i=865, next=0
                KindEqualsGreaterThanToken [3481, 3484), i=866, next=99
                KindBinaryExpression [3484, 3490), i=867, next=0
                  KindIdentifier "x" [3484, 3486), i=868, next=101
                  KindPlusToken [3486, 3488), i=869, next=102
                  KindIdentifier "y" [3488, 3490), i=870, next=0
          KindIfStatement [3492, 3534), i=871, next=111
            KindBinaryExpression [3502, 3508), i=872, next=108
              KindIdentifier "x" [3502, 3503), i=873, next=106
              KindEqualsEqualsToken [3503, 3506), i=874, next=107
              KindNumericLiteral [3506, 3508), i=875, next=0
            KindBlock [3509, 3534), i=876, next=0
              NodeList [3511, 3527), i=877, next=0
                KindBreakStatement [3511, 3527), i=878, next=0
          KindIfStatement [3534, 3579), i=879, next=0
            KindBinaryExpression [3544, 3550), i=880, next=116
              KindIdentifier "x" [3544, 3545), i=881, next=114
              KindEqualsEqualsToken [3545, 3548), i=882, next=115
              KindNumericLiteral [3548, 3550), i=883, next=0
            KindBlock [3551, 3579), i=884, next=0
              NodeList [3553, 3572), i=885, next=0
                KindContinueStatement [3553, 3572), i=886, next=0
