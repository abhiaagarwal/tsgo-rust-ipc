KindSourceFile [0, 550), i=1, next=0
  NodeList [0, 549), i=2, next=0
    KindTypeAliasDeclaration [0, 159), i=3, next=34
      KindIdentifier "LiteralsAndWeakTypes" [4, 25), i=4, next=5
      KindUnionType [27, 158), i=5, next=0
        NodeList [27, 158), i=6, next=0
          KindLiteralType [32, 36), i=7, next=9
            KindStringLiteral "A" [32, 36), i=8, next=0
          KindLiteralType [40, 44), i=9, next=11
            KindStringLiteral "B" [40, 44), i=10, next=0
          KindTypeLiteral [48, 68), i=11, next=18
            NodeList [50, 66), i=12, next=0
              KindPropertySignature [50, 66), i=13, next=0
                KindIdentifier "optional" [50, 59), i=14, next=15
                KindQuestionToken [59, 60), i=15, next=16
                KindLiteralType [61, 66), i=16, next=0
                  KindTrueKeyword [61, 66), i=17, next=0
          KindTypeLiteral [72, 99), i=18, next=24
            NodeList [74, 97), i=19, next=0
              KindMethodSignature [74, 97), i=20, next=0
                KindIdentifier "toLowerCase" [74, 86), i=21, next=22
                KindQuestionToken [86, 87), i=22, next=23
                KindStringKeyword [90, 97), i=23, next=0
          KindTypeLiteral [103, 158), i=24, next=0
            NodeList [105, 156), i=25, next=0
              KindMethodSignature [105, 129), i=26, next=30
                KindIdentifier "toUpperCase" [105, 117), i=27, next=28
                KindQuestionToken [117, 118), i=28, next=29
                KindStringKeyword [121, 128), i=29, next=0
              KindPropertySignature [129, 156), i=30, next=0
                KindIdentifier "otherOptionalProp" [129, 147), i=31, next=32
                KindQuestionToken [147, 148), i=32, next=33
                KindNumberKeyword [149, 156), i=33, next=0
    KindVariableStatement [159, 269), i=34, next=61
      KindVariableDeclarationList [159, 269), i=35, next=0
        NodeList [166, 269), i=36, next=0
          KindVariableDeclaration [166, 269), i=37, next=0
            KindIdentifier "g" [166, 168), i=38, next=39
            KindArrowFunction [170, 269), i=39, next=0
              NodeList [172, 197), i=40, next=45
                KindParameter [172, 197), i=41, next=0
                  KindIdentifier "arg" [172, 175), i=42, next=43
                  KindTypeReference [176, 197), i=43, next=0
                    KindIdentifier "LiteralsAndWeakTypes" [176, 197), i=44, next=0
              KindEqualsGreaterThanToken [198, 201), i=45, next=46
              KindBlock [201, 269), i=46, next=0
                NodeList [203, 267), i=47, next=0
                  KindIfStatement [203, 267), i=48, next=0
                    KindBinaryExpression [212, 223), i=49, next=53
                      KindIdentifier "arg" [212, 215), i=50, next=51
                      KindEqualsEqualsEqualsToken [215, 219), i=51, next=52
                      KindStringLiteral "A" [219, 223), i=52, next=0
                    KindBlock [224, 243), i=53, next=57
                      NodeList [226, 237), i=54, next=0
                        KindExpressionStatement [226, 237), i=55, next=0
                          KindIdentifier "arg" [226, 236), i=56, next=0
                    KindBlock [248, 267), i=57, next=0
                      NodeList [250, 261), i=58, next=0
                        KindExpressionStatement [250, 261), i=59, next=0
                          KindIdentifier "arg" [250, 260), i=60, next=0
    KindTypeAliasDeclaration [269, 437), i=61, next=90
      KindIdentifier "PrimitivesAndWeakTypes" [275, 298), i=62, next=63
      KindUnionType [300, 436), i=63, next=0
        NodeList [300, 436), i=64, next=0
          KindStringKeyword [304, 311), i=65, next=66
          KindNumberKeyword [315, 322), i=66, next=67
          KindTypeLiteral [326, 346), i=67, next=74
            NodeList [328, 344), i=68, next=0
              KindPropertySignature [328, 344), i=69, next=0
                KindIdentifier "optional" [328, 337), i=70, next=71
                KindQuestionToken [337, 338), i=71, next=72
                KindLiteralType [339, 344), i=72, next=0
                  KindTrueKeyword [339, 344), i=73, next=0
          KindTypeLiteral [350, 377), i=74, next=80
            NodeList [352, 375), i=75, next=0
              KindMethodSignature [352, 375), i=76, next=0
                KindIdentifier "toLowerCase" [352, 364), i=77, next=78
                KindQuestionToken [364, 365), i=78, next=79
                KindStringKeyword [368, 375), i=79, next=0
          KindTypeLiteral [381, 436), i=80, next=0
            NodeList [383, 434), i=81, next=0
              KindMethodSignature [383, 407), i=82, next=86
                KindIdentifier "toUpperCase" [383, 395), i=83, next=84
                KindQuestionToken [395, 396), i=84, next=85
                KindStringKeyword [399, 406), i=85, next=0
              KindPropertySignature [407, 434), i=86, next=0
                KindIdentifier "otherOptionalProp" [407, 425), i=87, next=88
                KindQuestionToken [425, 426), i=88, next=89
                KindNumberKeyword [427, 434), i=89, next=0
    KindVariableStatement [437, 549), i=90, next=0
      KindVariableDeclarationList [437, 549), i=91, next=0
        NodeList [444, 549), i=92, next=0
          KindVariableDeclaration [444, 549), i=93, next=0
            KindIdentifier "h" [444, 446), i=94, next=95
            KindArrowFunction [448, 549), i=95, next=0
              NodeList [450, 477), i=96, next=101
                KindParameter [450, 477), i=97, next=0
                  KindIdentifier "arg" [450, 453), i=98, next=99
                  KindTypeReference [454, 477), i=99, next=0
                    KindIdentifier "PrimitivesAndWeakTypes" [454, 477), i=100, next=0
              KindEqualsGreaterThanToken [478, 481), i=101, next=102
              KindBlock [481, 549), i=102, next=0
                NodeList [483, 547), i=103, next=0
                  KindIfStatement [483, 547), i=104, next=0
                    KindBinaryExpression [492, 503), i=105, next=109
                      KindIdentifier "arg" [492, 495), i=106, next=107
                      KindEqualsEqualsEqualsToken [495, 499), i=107, next=108
                      KindStringLiteral "A" [499, 503), i=108, next=0
                    KindBlock [504, 523), i=109, next=113
                      NodeList [506, 517), i=110, next=0
                        KindExpressionStatement [506, 517), i=111, next=0
                          KindIdentifier "arg" [506, 516), i=112, next=0
                    KindBlock [528, 547), i=113, next=0
                      NodeList [530, 541), i=114, next=0
                        KindExpressionStatement [530, 541), i=115, next=0
                          KindIdentifier "arg" [530, 540), i=116, next=0
