KindSourceFile [0, 167), i=1, next=0
  NodeList [0, 165), i=2, next=0
    KindFunctionDeclaration [0, 165), i=3, next=0
      KindIdentifier "foo" [8, 12), i=4, next=5
      NodeList [13, 14), i=5, next=8
        KindTypeParameter [13, 14), i=6, next=0
          KindIdentifier "T" [13, 14), i=7, next=0
      KindBlock [17, 165), i=8, next=0
        NodeList [19, 139), i=9, next=0
          KindVariableStatement [19, 58), i=10, next=21
            KindVariableDeclarationList [19, 57), i=11, next=0
              NodeList [28, 57), i=12, next=0
                KindVariableDeclaration [28, 57), i=13, next=0
                  KindIdentifier "x" [28, 30), i=14, next=15
                  KindFunctionType [31, 57), i=15, next=0
                    NodeList [33, 45), i=16, next=20
                      KindParameter [33, 45), i=17, next=0
                        KindIdentifier "item" [33, 37), i=18, next=19
                        KindNumberKeyword [38, 45), i=19, next=0
                    KindBooleanKeyword [49, 57), i=20, next=0
          KindVariableStatement [58, 92), i=21, next=33
            KindVariableDeclarationList [58, 91), i=22, next=0
              NodeList [67, 91), i=23, next=0
                KindVariableDeclaration [67, 91), i=24, next=0
                  KindIdentifier "y" [67, 69), i=25, next=26
                  KindFunctionType [70, 91), i=26, next=0
                    NodeList [72, 79), i=27, next=32
                      KindParameter [72, 79), i=28, next=0
                        KindIdentifier "item" [72, 76), i=29, next=30
                        KindTypeReference [77, 79), i=30, next=0
                          KindIdentifier "T" [77, 79), i=31, next=0
                    KindBooleanKeyword [83, 91), i=32, next=0
          KindExpressionStatement [92, 104), i=33, next=38
            KindBinaryExpression [92, 103), i=34, next=0
              KindIdentifier "x" [92, 99), i=35, next=36
              KindEqualsToken [99, 101), i=36, next=37
              KindIdentifier "y" [101, 103), i=37, next=0
          KindExpressionStatement [104, 139), i=38, next=0
            KindBinaryExpression [104, 138), i=39, next=0
              KindIdentifier "y" [104, 134), i=40, next=41
              KindEqualsToken [134, 136), i=41, next=42
              KindIdentifier "x" [136, 138), i=42, next=0
