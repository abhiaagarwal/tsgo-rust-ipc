KindSourceFile [0, 646), i=1, next=0
  NodeList [0, 646), i=2, next=0
    KindForStatement [0, 151), i=3, next=52
      KindVariableDeclarationList [5, 21), i=4, next=12
        NodeList [8, 21), i=5, next=0
          KindVariableDeclaration [8, 14), i=6, next=9
            KindIdentifier "x" [8, 10), i=7, next=8
            KindNumericLiteral [12, 14), i=8, next=0
          KindVariableDeclaration [15, 21), i=9, next=0
            KindIdentifier "y" [15, 17), i=10, next=11
            KindNumericLiteral [19, 21), i=11, next=0
      KindBinaryExpression [22, 28), i=12, next=16
        KindIdentifier "x" [22, 24), i=13, next=14
        KindLessThanToken [24, 26), i=14, next=15
        KindIdentifier "y" [26, 28), i=15, next=0
      KindBinaryExpression [29, 38), i=16, next=22
        KindPrefixUnaryExpression [29, 33), i=17, next=19
          KindIdentifier "x" [32, 33), i=18, next=0
        KindCommaToken [33, 34), i=19, next=20
        KindPrefixUnaryExpression [34, 38), i=20, next=0
          KindIdentifier "y" [37, 38), i=21, next=0
      KindBlock [39, 151), i=22, next=0
        NodeList [41, 148), i=23, next=0
          KindVariableStatement [41, 71), i=24, next=37
            KindVariableDeclarationList [41, 70), i=25, next=0
              NodeList [50, 70), i=26, next=0
                KindVariableDeclaration [50, 70), i=27, next=0
                  KindIdentifier "a" [50, 52), i=28, next=29
                  KindArrowFunction [54, 70), i=29, next=0
                    KindEqualsGreaterThanToken [57, 60), i=30, next=31
                    KindBinaryExpression [60, 70), i=31, next=0
                      KindPostfixUnaryExpression [60, 64), i=32, next=34
                        KindIdentifier "x" [60, 62), i=33, next=0
                      KindPlusToken [64, 66), i=34, next=35
                      KindPostfixUnaryExpression [66, 70), i=35, next=0
                        KindIdentifier "y" [66, 68), i=36, next=0
          KindIfStatement [71, 148), i=37, next=0
            KindBinaryExpression [81, 87), i=38, next=42
              KindIdentifier "x" [81, 82), i=39, next=40
              KindEqualsEqualsToken [82, 85), i=40, next=41
              KindNumericLiteral [85, 87), i=41, next=0
            KindBlock [88, 113), i=42, next=45
              NodeList [90, 106), i=43, next=0
                KindBreakStatement [90, 106), i=44, next=0
            KindBlock [123, 148), i=45, next=0
              NodeList [125, 141), i=46, next=0
                KindExpressionStatement [125, 141), i=47, next=0
                  KindBinaryExpression [125, 140), i=48, next=0
                    KindIdentifier "y" [125, 136), i=49, next=50
                    KindEqualsToken [136, 138), i=50, next=51
                    KindNumericLiteral [138, 140), i=51, next=0
    KindForStatement [151, 309), i=52, next=101
      KindVariableDeclarationList [160, 176), i=53, next=61
        NodeList [163, 176), i=54, next=0
          KindVariableDeclaration [163, 169), i=55, next=58
            KindIdentifier "x" [163, 165), i=56, next=57
            KindNumericLiteral [167, 169), i=57, next=0
          KindVariableDeclaration [170, 176), i=58, next=0
            KindIdentifier "y" [170, 172), i=59, next=60
            KindNumericLiteral [174, 176), i=60, next=0
      KindBinaryExpression [177, 183), i=61, next=65
        KindIdentifier "x" [177, 179), i=62, next=63
        KindLessThanToken [179, 181), i=63, next=64
        KindIdentifier "y" [181, 183), i=64, next=0
      KindBinaryExpression [184, 193), i=65, next=71
        KindPrefixUnaryExpression [184, 188), i=66, next=68
          KindIdentifier "x" [187, 188), i=67, next=0
        KindCommaToken [188, 189), i=68, next=69
        KindPrefixUnaryExpression [189, 193), i=69, next=0
          KindIdentifier "y" [192, 193), i=70, next=0
      KindBlock [194, 309), i=71, next=0
        NodeList [196, 306), i=72, next=0
          KindVariableStatement [196, 226), i=73, next=86
            KindVariableDeclarationList [196, 225), i=74, next=0
              NodeList [205, 225), i=75, next=0
                KindVariableDeclaration [205, 225), i=76, next=0
                  KindIdentifier "a" [205, 207), i=77, next=78
                  KindArrowFunction [209, 225), i=78, next=0
                    KindEqualsGreaterThanToken [212, 215), i=79, next=80
                    KindBinaryExpression [215, 225), i=80, next=0
                      KindPostfixUnaryExpression [215, 219), i=81, next=83
                        KindIdentifier "x" [215, 217), i=82, next=0
                      KindPlusToken [219, 221), i=83, next=84
                      KindPostfixUnaryExpression [221, 225), i=84, next=0
                        KindIdentifier "y" [221, 223), i=85, next=0
          KindIfStatement [226, 306), i=86, next=0
            KindBinaryExpression [236, 242), i=87, next=91
              KindIdentifier "x" [236, 237), i=88, next=89
              KindEqualsEqualsToken [237, 240), i=89, next=90
              KindNumericLiteral [240, 242), i=90, next=0
            KindBlock [243, 271), i=91, next=94
              NodeList [245, 264), i=92, next=0
                KindContinueStatement [245, 264), i=93, next=0
            KindBlock [281, 306), i=94, next=0
              NodeList [283, 299), i=95, next=0
                KindExpressionStatement [283, 299), i=96, next=0
                  KindBinaryExpression [283, 298), i=97, next=0
                    KindIdentifier "y" [283, 294), i=98, next=99
                    KindEqualsToken [294, 296), i=99, next=100
                    KindNumericLiteral [296, 298), i=100, next=0
    KindLabeledStatement [309, 476), i=101, next=153
      KindIdentifier "loop" [309, 317), i=102, next=103
      KindForStatement [318, 476), i=103, next=0
        KindVariableDeclarationList [325, 341), i=104, next=112
          NodeList [328, 341), i=105, next=0
            KindVariableDeclaration [328, 334), i=106, next=109
              KindIdentifier "x" [328, 330), i=107, next=108
              KindNumericLiteral [332, 334), i=108, next=0
            KindVariableDeclaration [335, 341), i=109, next=0
              KindIdentifier "y" [335, 337), i=110, next=111
              KindNumericLiteral [339, 341), i=111, next=0
        KindBinaryExpression [342, 348), i=112, next=116
          KindIdentifier "x" [342, 344), i=113, next=114
          KindLessThanToken [344, 346), i=114, next=115
          KindIdentifier "y" [346, 348), i=115, next=0
        KindBinaryExpression [349, 358), i=116, next=122
          KindPrefixUnaryExpression [349, 353), i=117, next=119
            KindIdentifier "x" [352, 353), i=118, next=0
          KindCommaToken [353, 354), i=119, next=120
          KindPrefixUnaryExpression [354, 358), i=120, next=0
            KindIdentifier "y" [357, 358), i=121, next=0
        KindBlock [359, 476), i=122, next=0
          NodeList [361, 473), i=123, next=0
            KindVariableStatement [361, 391), i=124, next=137
              KindVariableDeclarationList [361, 390), i=125, next=0
                NodeList [370, 390), i=126, next=0
                  KindVariableDeclaration [370, 390), i=127, next=0
                    KindIdentifier "a" [370, 372), i=128, next=129
                    KindArrowFunction [374, 390), i=129, next=0
                      KindEqualsGreaterThanToken [377, 380), i=130, next=131
                      KindBinaryExpression [380, 390), i=131, next=0
                        KindPostfixUnaryExpression [380, 384), i=132, next=134
                          KindIdentifier "x" [380, 382), i=133, next=0
                        KindPlusToken [384, 386), i=134, next=135
                        KindPostfixUnaryExpression [386, 390), i=135, next=0
                          KindIdentifier "y" [386, 388), i=136, next=0
            KindIfStatement [391, 473), i=137, next=0
              KindBinaryExpression [401, 407), i=138, next=142
                KindIdentifier "x" [401, 402), i=139, next=140
                KindEqualsEqualsToken [402, 405), i=140, next=141
                KindNumericLiteral [405, 407), i=141, next=0
              KindBlock [408, 438), i=142, next=146
                NodeList [410, 431), i=143, next=0
                  KindBreakStatement [410, 431), i=144, next=0
                    KindIdentifier "loop" [425, 430), i=145, next=0
              KindBlock [448, 473), i=146, next=0
                NodeList [450, 466), i=147, next=0
                  KindExpressionStatement [450, 466), i=148, next=0
                    KindBinaryExpression [450, 465), i=149, next=0
                      KindIdentifier "y" [450, 461), i=150, next=151
                      KindEqualsToken [461, 463), i=151, next=152
                      KindNumericLiteral [463, 465), i=152, next=0
    KindLabeledStatement [476, 646), i=153, next=0
      KindIdentifier "loop" [476, 484), i=154, next=155
      KindForStatement [485, 646), i=155, next=0
        KindVariableDeclarationList [492, 508), i=156, next=164
          NodeList [495, 508), i=157, next=0
            KindVariableDeclaration [495, 501), i=158, next=161
              KindIdentifier "x" [495, 497), i=159, next=160
              KindNumericLiteral [499, 501), i=160, next=0
            KindVariableDeclaration [502, 508), i=161, next=0
              KindIdentifier "y" [502, 504), i=162, next=163
              KindNumericLiteral [506, 508), i=163, next=0
        KindBinaryExpression [509, 515), i=164, next=168
          KindIdentifier "x" [509, 511), i=165, next=166
          KindLessThanToken [511, 513), i=166, next=167
          KindIdentifier "y" [513, 515), i=167, next=0
        KindBinaryExpression [516, 525), i=168, next=174
          KindPrefixUnaryExpression [516, 520), i=169, next=171
            KindIdentifier "x" [519, 520), i=170, next=0
          KindCommaToken [520, 521), i=171, next=172
          KindPrefixUnaryExpression [521, 525), i=172, next=0
            KindIdentifier "y" [524, 525), i=173, next=0
        KindBlock [526, 646), i=174, next=0
          NodeList [528, 643), i=175, next=0
            KindVariableStatement [528, 558), i=176, next=189
              KindVariableDeclarationList [528, 557), i=177, next=0
                NodeList [537, 557), i=178, next=0
                  KindVariableDeclaration [537, 557), i=179, next=0
                    KindIdentifier "a" [537, 539), i=180, next=181
                    KindArrowFunction [541, 557), i=181, next=0
                      KindEqualsGreaterThanToken [544, 547), i=182, next=183
                      KindBinaryExpression [547, 557), i=183, next=0
                        KindPostfixUnaryExpression [547, 551), i=184, next=186
                          KindIdentifier "x" [547, 549), i=185, next=0
                        KindPlusToken [551, 553), i=186, next=187
                        KindPostfixUnaryExpression [553, 557), i=187, next=0
                          KindIdentifier "y" [553, 555), i=188, next=0
            KindIfStatement [558, 643), i=189, next=0
              KindBinaryExpression [568, 574), i=190, next=194
                KindIdentifier "x" [568, 569), i=191, next=192
                KindEqualsEqualsToken [569, 572), i=192, next=193
                KindNumericLiteral [572, 574), i=193, next=0
              KindBlock [575, 608), i=194, next=198
                NodeList [577, 601), i=195, next=0
                  KindContinueStatement [577, 601), i=196, next=0
                    KindIdentifier "loop" [595, 600), i=197, next=0
              KindBlock [618, 643), i=198, next=0
                NodeList [620, 636), i=199, next=0
                  KindExpressionStatement [620, 636), i=200, next=0
                    KindBinaryExpression [620, 635), i=201, next=0
                      KindIdentifier "y" [620, 631), i=202, next=203
                      KindEqualsToken [631, 633), i=203, next=204
                      KindNumericLiteral [633, 635), i=204, next=0
