KindSourceFile [0, 137), i=1, next=0
  NodeList [0, 135), i=2, next=0
    KindForStatement [0, 135), i=3, next=0
      KindVariableDeclarationList [5, 21), i=4, next=12
        NodeList [8, 21), i=5, next=0
          KindVariableDeclaration [8, 14), i=6, next=9
            KindIdentifier "x" [8, 10), i=7, next=8
            KindNumericLiteral [12, 14), i=8, next=0
          KindVariableDeclaration [15, 21), i=9, next=0
            KindIdentifier "y" [15, 17), i=10, next=11
            KindNumericLiteral [19, 21), i=11, next=0
      KindBinaryExpression [22, 28), i=12, next=16
        KindIdentifier "x" [22, 24), i=13, next=14
        KindLessThanToken [24, 26), i=14, next=15
        KindIdentifier "y" [26, 28), i=15, next=0
      KindBinaryExpression [29, 38), i=16, next=22
        KindPrefixUnaryExpression [29, 33), i=17, next=19
          KindIdentifier "x" [32, 33), i=18, next=0
        KindCommaToken [33, 34), i=19, next=20
        KindPrefixUnaryExpression [34, 38), i=20, next=0
          KindIdentifier "y" [37, 38), i=21, next=0
      KindBlock [39, 135), i=22, next=0
        NodeList [41, 132), i=23, next=0
          KindVariableStatement [41, 71), i=24, next=37
            KindVariableDeclarationList [41, 70), i=25, next=0
              NodeList [50, 70), i=26, next=0
                KindVariableDeclaration [50, 70), i=27, next=0
                  KindIdentifier "a" [50, 52), i=28, next=29
                  KindArrowFunction [54, 70), i=29, next=0
                    KindEqualsGreaterThanToken [57, 60), i=30, next=31
                    KindBinaryExpression [60, 70), i=31, next=0
                      KindPostfixUnaryExpression [60, 64), i=32, next=34
                        KindIdentifier "x" [60, 62), i=33, next=0
                      KindPlusToken [64, 66), i=34, next=35
                      KindPostfixUnaryExpression [66, 70), i=35, next=0
                        KindIdentifier "y" [66, 68), i=36, next=0
          KindIfStatement [71, 132), i=37, next=0
            KindBinaryExpression [81, 87), i=38, next=42
              KindIdentifier "x" [81, 82), i=39, next=40
              KindEqualsEqualsToken [82, 85), i=40, next=41
              KindNumericLiteral [85, 87), i=41, next=0
            KindBreakStatement [88, 105), i=42, next=43
            KindExpressionStatement [115, 132), i=43, next=0
              KindBinaryExpression [115, 131), i=44, next=0
                KindIdentifier "y" [115, 127), i=45, next=46
                KindEqualsToken [127, 129), i=46, next=47
                KindNumericLiteral [129, 131), i=47, next=0
