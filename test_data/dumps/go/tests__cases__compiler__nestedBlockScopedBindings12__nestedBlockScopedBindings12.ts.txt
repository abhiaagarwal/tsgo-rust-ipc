KindSourceFile [0, 124), i=1, next=0
  NodeList [0, 124), i=2, next=0
    KindVariableStatement [0, 6), i=3, next=8
      KindVariableDeclarationList [0, 5), i=4, next=0
        NodeList [3, 5), i=5, next=0
          KindVariableDeclaration [3, 5), i=6, next=0
            KindIdentifier "x" [3, 5), i=7, next=0
    KindBlock [6, 36), i=8, next=20
      NodeList [9, 33), i=9, next=0
        KindVariableStatement [9, 21), i=10, next=15
          KindVariableDeclarationList [9, 20), i=11, next=0
            NodeList [18, 20), i=12, next=0
              KindVariableDeclaration [18, 20), i=13, next=0
                KindIdentifier "x" [18, 20), i=14, next=0
        KindExpressionStatement [21, 33), i=15, next=0
          KindBinaryExpression [21, 32), i=16, next=0
            KindIdentifier "x" [21, 28), i=17, next=18
            KindEqualsToken [28, 30), i=18, next=19
            KindNumericLiteral [30, 32), i=19, next=0
    KindVariableStatement [36, 46), i=20, next=25
      KindVariableDeclarationList [36, 45), i=21, next=0
        NodeList [43, 45), i=22, next=0
          KindVariableDeclaration [43, 45), i=23, next=0
            KindIdentifier "y" [43, 45), i=24, next=0
    KindSwitchStatement [46, 124), i=25, next=0
      KindNumericLiteral [56, 57), i=26, next=27
      KindCaseBlock [58, 124), i=27, next=0
        NodeList [60, 121), i=28, next=0
          KindCaseClause [60, 121), i=29, next=0
            KindNumericLiteral [70, 72), i=30, next=31
            NodeList [73, 121), i=31, next=0
              KindVariableStatement [73, 89), i=32, next=37
                KindVariableDeclarationList [73, 88), i=33, next=0
                  NodeList [86, 88), i=34, next=0
                    KindVariableDeclaration [86, 88), i=35, next=0
                      KindIdentifier "y" [86, 88), i=36, next=0
              KindExpressionStatement [89, 105), i=37, next=42
                KindBinaryExpression [89, 104), i=38, next=0
                  KindIdentifier "y" [89, 100), i=39, next=40
                  KindEqualsToken [100, 102), i=40, next=41
                  KindNumericLiteral [102, 104), i=41, next=0
              KindBreakStatement [105, 121), i=42, next=0
