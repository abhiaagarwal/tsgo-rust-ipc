KindSourceFile [0, 700), i=1, next=0
  NodeList [0, 698), i=2, next=0
    KindFunctionDeclaration [0, 44), i=3, next=12
      NodeList [0, 7), i=4, next=6
        KindDeclareKeyword [0, 7), i=5, next=0
      KindIdentifier "isNever" [16, 24), i=6, next=7
      NodeList [25, 33), i=7, next=11
        KindParameter [25, 33), i=8, next=0
          KindIdentifier "n" [25, 26), i=9, next=10
          KindNeverKeyword [27, 33), i=10, next=0
      KindBooleanKeyword [35, 43), i=11, next=0
    KindFunctionDeclaration [44, 340), i=12, next=58
      KindIdentifier "f" [56, 58), i=13, next=14
      KindBlock [60, 340), i=14, next=0
        NodeList [62, 337), i=15, next=0
          KindVariableStatement [62, 99), i=16, next=28
            KindVariableDeclarationList [62, 98), i=17, next=0
              NodeList [71, 98), i=18, next=0
                KindVariableDeclaration [71, 98), i=19, next=0
                  KindIdentifier "foo" [71, 75), i=20, next=21
                  KindUnionType [76, 90), i=21, next=27
                    NodeList [76, 90), i=22, next=0
                      KindLiteralType [76, 82), i=23, next=25
                        KindStringLiteral "aaa" [76, 82), i=24, next=0
                      KindLiteralType [84, 90), i=25, next=0
                        KindStringLiteral "bbb" [84, 90), i=26, next=0
                  KindStringLiteral "aaa" [92, 98), i=27, next=0
          KindWhileStatement [99, 337), i=28, next=0
            KindTrueKeyword [112, 116), i=29, next=30
            KindBlock [117, 337), i=30, next=0
              NodeList [119, 330), i=31, next=0
                KindSwitchStatement [119, 179), i=32, next=38
                  KindIdentifier "foo" [137, 140), i=33, next=34
                  KindCaseBlock [141, 179), i=34, next=0
                    NodeList [143, 168), i=35, next=0
                      KindCaseClause [143, 168), i=36, next=0
                        KindStringLiteral "aaa" [161, 167), i=37, next=0
                KindIfStatement [179, 330), i=38, next=0
                  KindBinaryExpression [193, 206), i=39, next=43
                    KindIdentifier "foo" [193, 196), i=40, next=41
                    KindEqualsEqualsEqualsToken [196, 200), i=41, next=42
                    KindStringLiteral "aaa" [200, 206), i=42, next=0
                  KindBlock [207, 246), i=43, next=50
                    NodeList [209, 235), i=44, next=0
                      KindExpressionStatement [209, 235), i=45, next=0
                        KindBinaryExpression [209, 234), i=46, next=0
                          KindIdentifier "foo" [209, 226), i=47, next=48
                          KindEqualsToken [226, 228), i=48, next=49
                          KindStringLiteral "bbb" [228, 234), i=49, next=0
                  KindIfStatement [260, 330), i=50, next=0
                    KindCallExpression [265, 277), i=51, next=55
                      KindIdentifier "isNever" [265, 272), i=52, next=53
                      NodeList [273, 276), i=53, next=0
                        KindIdentifier "foo" [273, 276), i=54, next=0
                    KindBlock [278, 330), i=55, next=0
                      NodeList [280, 319), i=56, next=0
                        KindBreakStatement [280, 319), i=57, next=0
    KindFunctionDeclaration [340, 416), i=58, next=67
      NodeList [340, 375), i=59, next=61
        KindDeclareKeyword [340, 375), i=60, next=0
      KindIdentifier "functionB" [384, 394), i=61, next=62
      NodeList [395, 406), i=62, next=66
        KindParameter [395, 406), i=63, next=0
          KindIdentifier "key" [395, 398), i=64, next=65
          KindStringKeyword [399, 406), i=65, next=0
      KindStringKeyword [408, 415), i=66, next=0
    KindFunctionDeclaration [416, 698), i=67, next=0
      KindIdentifier "functionC" [428, 438), i=68, next=69
      KindVoidKeyword [441, 446), i=69, next=70
      KindBlock [446, 698), i=70, next=0
        NodeList [448, 695), i=71, next=0
          KindVariableStatement [448, 484), i=72, next=84
            KindVariableDeclarationList [448, 483), i=73, next=0
              NodeList [457, 483), i=74, next=0
                KindVariableDeclaration [457, 483), i=75, next=0
                  KindIdentifier "unionVal" [457, 466), i=76, next=77
                  KindUnionType [467, 477), i=77, next=83
                    NodeList [467, 477), i=78, next=0
                      KindLiteralType [467, 471), i=79, next=81
                        KindStringLiteral "A" [467, 471), i=80, next=0
                      KindLiteralType [473, 477), i=81, next=0
                        KindStringLiteral "B" [473, 477), i=82, next=0
                  KindStringLiteral "A" [479, 483), i=83, next=0
          KindWhileStatement [484, 695), i=84, next=0
            KindTrueKeyword [497, 501), i=85, next=86
            KindBlock [502, 695), i=86, next=0
              NodeList [504, 688), i=87, next=0
                KindVariableStatement [504, 530), i=88, next=94
                  KindVariableDeclarationList [504, 529), i=89, next=0
                    NodeList [517, 529), i=90, next=0
                      KindVariableDeclaration [517, 529), i=91, next=0
                        KindIdentifier "key" [517, 521), i=92, next=93
                        KindStringKeyword [522, 529), i=93, next=0
                KindSwitchStatement [530, 663), i=94, next=109
                  KindIdentifier "unionVal" [548, 556), i=95, next=96
                  KindCaseBlock [557, 663), i=96, next=0
                    NodeList [559, 652), i=97, next=0
                      KindCaseClause [559, 652), i=98, next=0
                        KindStringLiteral "A" [577, 581), i=99, next=100
                        NodeList [582, 652), i=100, next=0
                          KindBlock [582, 652), i=101, next=0
                            NodeList [584, 637), i=102, next=0
                              KindExpressionStatement [584, 613), i=103, next=108
                                KindBinaryExpression [584, 612), i=104, next=0
                                  KindIdentifier "key" [584, 605), i=105, next=106
                                  KindEqualsToken [605, 607), i=106, next=107
                                  KindStringLiteral "AA" [607, 612), i=107, next=0
                              KindBreakStatement [613, 637), i=108, next=0
                KindExpressionStatement [663, 688), i=109, next=0
                  KindCallExpression [663, 687), i=110, next=0
                    KindIdentifier "functionB" [663, 682), i=111, next=112
                    NodeList [683, 686), i=112, next=0
                      KindIdentifier "key" [683, 686), i=113, next=0
