KindSourceFile [0, 272), i=1, next=0
  NodeList [0, 270), i=2, next=0
    KindVariableStatement [0, 36), i=3, next=12
      KindVariableDeclarationList [0, 35), i=4, next=0
        NodeList [3, 35), i=5, next=0
          KindVariableDeclaration [3, 35), i=6, next=0
            KindIdentifier "stringOrNumber" [3, 18), i=7, next=8
            KindUnionType [19, 35), i=8, next=0
              NodeList [19, 35), i=9, next=0
                KindStringKeyword [19, 26), i=10, next=11
                KindNumberKeyword [28, 35), i=11, next=0
    KindIfStatement [36, 163), i=12, next=30
      KindBinaryExpression [44, 78), i=13, next=18
        KindTypeOfExpression [44, 65), i=14, next=16
          KindIdentifier "stringOrNumber" [50, 65), i=15, next=0
        KindEqualsEqualsEqualsToken [65, 69), i=16, next=17
        KindStringLiteral "number" [69, 78), i=17, next=0
      KindBlock [79, 163), i=18, next=0
        NodeList [81, 160), i=19, next=0
          KindIfStatement [81, 160), i=20, next=0
            KindBinaryExpression [91, 125), i=21, next=26
              KindTypeOfExpression [91, 112), i=22, next=24
                KindIdentifier "stringOrNumber" [97, 112), i=23, next=0
              KindExclamationEqualsEqualsToken [112, 116), i=24, next=25
              KindStringLiteral "number" [116, 125), i=25, next=0
            KindBlock [126, 160), i=26, next=0
              NodeList [128, 153), i=27, next=0
                KindExpressionStatement [128, 153), i=28, next=0
                  KindIdentifier "stringOrNumber" [128, 152), i=29, next=0
    KindIfStatement [163, 270), i=30, next=0
      KindBinaryExpression [171, 243), i=31, next=43
        KindBinaryExpression [171, 205), i=32, next=37
          KindTypeOfExpression [171, 192), i=33, next=35
            KindIdentifier "stringOrNumber" [177, 192), i=34, next=0
          KindEqualsEqualsEqualsToken [192, 196), i=35, next=36
          KindStringLiteral "number" [196, 205), i=36, next=0
        KindAmpersandAmpersandToken [205, 208), i=37, next=38
        KindBinaryExpression [208, 243), i=38, next=0
          KindTypeOfExpression [208, 230), i=39, next=41
            KindIdentifier "stringOrNumber" [215, 230), i=40, next=0
          KindExclamationEqualsEqualsToken [230, 234), i=41, next=42
          KindStringLiteral "number" [234, 243), i=42, next=0
      KindBlock [244, 270), i=43, next=0
        NodeList [246, 267), i=44, next=0
          KindExpressionStatement [246, 267), i=45, next=0
            KindIdentifier "stringOrNumber" [246, 266), i=46, next=0
