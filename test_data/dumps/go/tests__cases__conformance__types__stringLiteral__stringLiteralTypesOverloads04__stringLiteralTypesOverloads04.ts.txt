KindSourceFile [0, 108), i=1, next=0
  NodeList [0, 108), i=2, next=0
    KindFunctionDeclaration [0, 51), i=3, next=22
      NodeList [0, 7), i=4, next=6
        KindDeclareKeyword [0, 7), i=5, next=0
      KindIdentifier "f" [16, 18), i=6, next=7
      NodeList [19, 49), i=7, next=0
        KindParameter [19, 49), i=8, next=0
          KindIdentifier "x" [19, 20), i=9, next=10
          KindFunctionType [21, 49), i=10, next=0
            NodeList [23, 39), i=11, next=20
              KindParameter [23, 39), i=12, next=0
                KindIdentifier "p" [23, 24), i=13, next=14
                KindUnionType [25, 39), i=14, next=0
                  NodeList [25, 39), i=15, next=0
                    KindLiteralType [25, 31), i=16, next=18
                      KindStringLiteral "foo" [25, 31), i=17, next=0
                    KindLiteralType [33, 39), i=18, next=0
                      KindStringLiteral "bar" [33, 39), i=19, next=0
            KindLiteralType [43, 49), i=20, next=0
              KindStringLiteral "foo" [43, 49), i=21, next=0
    KindExpressionStatement [51, 108), i=22, next=0
      KindCallExpression [51, 108), i=23, next=0
        KindIdentifier "f" [51, 56), i=24, next=25
        NodeList [57, 107), i=25, next=0
          KindArrowFunction [57, 107), i=26, next=0
            NodeList [57, 58), i=27, next=30
              KindParameter [57, 58), i=28, next=0
                KindIdentifier "y" [57, 58), i=29, next=0
            KindEqualsGreaterThanToken [58, 61), i=30, next=31
            KindBlock [61, 107), i=31, next=0
              NodeList [63, 104), i=32, next=0
                KindVariableStatement [63, 89), i=33, next=42
                  KindVariableDeclarationList [63, 88), i=34, next=0
                    NodeList [74, 88), i=35, next=0
                      KindVariableDeclaration [74, 88), i=36, next=0
                        KindIdentifier "z" [74, 76), i=37, next=38
                        KindBinaryExpression [78, 88), i=38, next=0
                          KindIdentifier "y" [78, 80), i=39, next=40
                          KindEqualsToken [80, 82), i=40, next=41
                          KindStringLiteral "foo" [82, 88), i=41, next=0
                KindReturnStatement [89, 104), i=42, next=0
                  KindIdentifier "z" [101, 103), i=43, next=0
