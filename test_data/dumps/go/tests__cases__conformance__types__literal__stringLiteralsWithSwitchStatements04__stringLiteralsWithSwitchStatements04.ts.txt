KindSourceFile [0, 391), i=1, next=0
  NodeList [0, 389), i=2, next=0
    KindVariableStatement [0, 13), i=3, next=10
      KindVariableDeclarationList [0, 12), i=4, next=0
        NodeList [3, 12), i=5, next=0
          KindVariableDeclaration [3, 12), i=6, next=0
            KindIdentifier "x" [3, 5), i=7, next=8
            KindLiteralType [6, 12), i=8, next=0
              KindStringLiteral "foo" [6, 12), i=9, next=0
    KindVariableStatement [13, 36), i=10, next=21
      KindVariableDeclarationList [13, 35), i=11, next=0
        NodeList [18, 35), i=12, next=0
          KindVariableDeclaration [18, 35), i=13, next=0
            KindIdentifier "y" [18, 20), i=14, next=15
            KindUnionType [21, 35), i=15, next=0
              NodeList [21, 35), i=16, next=0
                KindLiteralType [21, 27), i=17, next=19
                  KindStringLiteral "foo" [21, 27), i=18, next=0
                KindLiteralType [29, 35), i=19, next=0
                  KindStringLiteral "bar" [29, 35), i=20, next=0
    KindFunctionDeclaration [36, 78), i=21, next=26
      NodeList [36, 48), i=22, next=24
        KindDeclareKeyword [36, 48), i=23, next=0
      KindIdentifier "randBool" [57, 66), i=24, next=25
      KindBooleanKeyword [69, 77), i=25, next=0
    KindSwitchStatement [78, 389), i=26, next=0
      KindIdentifier "y" [90, 91), i=27, next=28
      KindCaseBlock [92, 389), i=28, next=0
        NodeList [94, 386), i=29, next=0
          KindCaseClause [94, 130), i=30, next=37
            KindBinaryExpression [104, 113), i=31, next=35
              KindStringLiteral "foo" [104, 110), i=32, next=33
              KindCommaToken [110, 111), i=33, next=34
              KindIdentifier "x" [111, 113), i=34, next=0
            NodeList [114, 130), i=35, next=0
              KindBreakStatement [114, 130), i=36, next=0
          KindCaseClause [130, 166), i=37, next=44
            KindBinaryExpression [140, 149), i=38, next=42
              KindIdentifier "x" [140, 142), i=39, next=40
              KindCommaToken [142, 143), i=40, next=41
              KindStringLiteral "foo" [143, 149), i=41, next=0
            NodeList [150, 166), i=42, next=0
              KindBreakStatement [150, 166), i=43, next=0
          KindCaseClause [166, 202), i=44, next=51
            KindBinaryExpression [176, 185), i=45, next=49
              KindIdentifier "x" [176, 178), i=46, next=47
              KindCommaToken [178, 179), i=47, next=48
              KindStringLiteral "baz" [179, 185), i=48, next=0
            NodeList [186, 202), i=49, next=0
              KindBreakStatement [186, 202), i=50, next=0
          KindCaseClause [202, 238), i=51, next=58
            KindBinaryExpression [212, 221), i=52, next=56
              KindStringLiteral "baz" [212, 218), i=53, next=54
              KindCommaToken [218, 219), i=54, next=55
              KindIdentifier "x" [219, 221), i=55, next=0
            NodeList [222, 238), i=56, next=0
              KindBreakStatement [222, 238), i=57, next=0
          KindCaseClause [238, 280), i=58, next=65
            KindBinaryExpression [248, 263), i=59, next=63
              KindStringLiteral "baz" [248, 254), i=60, next=61
              KindAmpersandAmpersandToken [254, 257), i=61, next=62
              KindStringLiteral "bar" [257, 263), i=62, next=0
            NodeList [264, 280), i=63, next=0
              KindBreakStatement [264, 280), i=64, next=0
          KindCaseClause [280, 333), i=65, next=76
            KindBinaryExpression [290, 316), i=66, next=74
              KindStringLiteral "baz" [290, 296), i=67, next=68
              KindAmpersandAmpersandToken [296, 299), i=68, next=69
              KindParenthesizedExpression [299, 316), i=69, next=0
                KindBinaryExpression [301, 315), i=70, next=0
                  KindStringLiteral "foo" [301, 306), i=71, next=72
                  KindBarBarToken [306, 309), i=72, next=73
                  KindStringLiteral "bar" [309, 315), i=73, next=0
            NodeList [317, 333), i=74, next=0
              KindBreakStatement [317, 333), i=75, next=0
          KindCaseClause [333, 386), i=76, next=0
            KindBinaryExpression [343, 369), i=77, next=85
              KindStringLiteral "bar" [343, 349), i=78, next=79
              KindAmpersandAmpersandToken [349, 352), i=79, next=80
              KindParenthesizedExpression [352, 369), i=80, next=0
                KindBinaryExpression [354, 368), i=81, next=0
                  KindStringLiteral "baz" [354, 359), i=82, next=83
                  KindBarBarToken [359, 362), i=83, next=84
                  KindStringLiteral "bar" [362, 368), i=84, next=0
            NodeList [370, 386), i=85, next=0
              KindBreakStatement [370, 386), i=86, next=0
