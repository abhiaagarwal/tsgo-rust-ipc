KindSourceFile [0, 183), i=1, next=0
  NodeList [0, 183), i=2, next=0
    KindVariableStatement [0, 19), i=3, next=14
      KindVariableDeclarationList [0, 18), i=4, next=0
        NodeList [3, 18), i=5, next=0
          KindVariableDeclaration [3, 18), i=6, next=0
            KindIdentifier "v" [3, 5), i=7, next=8
            KindArrowFunction [7, 18), i=8, next=0
              NodeList [9, 10), i=9, next=12
                KindTypeParameter [9, 10), i=10, next=0
                  KindIdentifier "T" [9, 10), i=11, next=0
              KindEqualsGreaterThanToken [13, 16), i=12, next=13
              KindNumericLiteral [16, 18), i=13, next=0
    KindVariableStatement [19, 34), i=14, next=23
      KindVariableDeclarationList [19, 33), i=15, next=0
        NodeList [24, 33), i=16, next=0
          KindVariableDeclaration [24, 33), i=17, next=0
            KindIdentifier "v" [24, 26), i=18, next=19
            KindTypeAssertionExpression [28, 33), i=19, next=0
              KindTypeReference [30, 31), i=20, next=22
                KindIdentifier "T" [30, 31), i=21, next=0
              KindIdentifier "a" [32, 33), i=22, next=0
    KindVariableStatement [34, 58), i=23, next=37
      KindVariableDeclarationList [34, 57), i=24, next=0
        NodeList [41, 57), i=25, next=0
          KindVariableDeclaration [41, 57), i=26, next=0
            KindIdentifier "v" [41, 43), i=27, next=28
            KindArrowFunction [45, 57), i=28, next=0
              NodeList [47, 48), i=29, next=32
                KindTypeParameter [47, 48), i=30, next=0
                  KindIdentifier "T" [47, 48), i=31, next=0
              NodeList [50, 51), i=32, next=35
                KindParameter [50, 51), i=33, next=0
                  KindIdentifier "a" [50, 51), i=34, next=0
              KindEqualsGreaterThanToken [52, 55), i=35, next=36
              KindNumericLiteral [55, 57), i=36, next=0
    KindVariableStatement [58, 83), i=37, next=53
      KindVariableDeclarationList [58, 82), i=38, next=0
        NodeList [63, 82), i=39, next=0
          KindVariableDeclaration [63, 82), i=40, next=0
            KindIdentifier "v" [63, 65), i=41, next=42
            KindArrowFunction [67, 82), i=42, next=0
              NodeList [69, 70), i=43, next=46
                KindTypeParameter [69, 70), i=44, next=0
                  KindIdentifier "T" [69, 70), i=45, next=0
              NodeList [72, 76), i=46, next=51
                KindParameter [72, 73), i=47, next=49
                  KindIdentifier "a" [72, 73), i=48, next=0
                KindParameter [74, 76), i=49, next=0
                  KindIdentifier "b" [74, 76), i=50, next=0
              KindEqualsGreaterThanToken [77, 80), i=51, next=52
              KindNumericLiteral [80, 82), i=52, next=0
    KindVariableStatement [83, 116), i=53, next=71
      KindVariableDeclarationList [83, 115), i=54, next=0
        NodeList [88, 115), i=55, next=0
          KindVariableDeclaration [88, 115), i=56, next=0
            KindIdentifier "v" [88, 90), i=57, next=58
            KindArrowFunction [92, 115), i=58, next=0
              NodeList [94, 95), i=59, next=62
                KindTypeParameter [94, 95), i=60, next=0
                  KindIdentifier "T" [94, 95), i=61, next=0
              NodeList [97, 109), i=62, next=69
                KindParameter [97, 102), i=63, next=66
                  KindIdentifier "a" [97, 98), i=64, next=65
                  KindNumericLiteral [100, 102), i=65, next=0
                KindParameter [103, 109), i=66, next=0
                  KindIdentifier "b" [103, 105), i=67, next=68
                  KindNumericLiteral [107, 109), i=68, next=0
              KindEqualsGreaterThanToken [110, 113), i=69, next=70
              KindNumericLiteral [113, 115), i=70, next=0
    KindVariableStatement [116, 135), i=71, next=81
      KindVariableDeclarationList [116, 134), i=72, next=0
        NodeList [123, 134), i=73, next=0
          KindVariableDeclaration [123, 134), i=74, next=0
            KindIdentifier "v" [123, 125), i=75, next=76
            KindTypeAssertionExpression [127, 134), i=76, next=0
              KindTypeReference [129, 130), i=77, next=79
                KindIdentifier "T" [129, 130), i=78, next=0
              KindParenthesizedExpression [131, 134), i=79, next=0
                KindIdentifier "a" [132, 133), i=80, next=0
    KindVariableStatement [135, 155), i=81, next=94
      KindVariableDeclarationList [135, 154), i=82, next=0
        NodeList [140, 154), i=83, next=0
          KindVariableDeclaration [140, 154), i=84, next=0
            KindIdentifier "v" [140, 142), i=85, next=86
            KindTypeAssertionExpression [144, 154), i=86, next=0
              KindTypeReference [146, 147), i=87, next=89
                KindIdentifier "T" [146, 147), i=88, next=0
              KindParenthesizedExpression [148, 154), i=89, next=0
                KindBinaryExpression [149, 153), i=90, next=0
                  KindIdentifier "a" [149, 150), i=91, next=92
                  KindCommaToken [150, 151), i=92, next=93
                  KindIdentifier "b" [151, 153), i=93, next=0
    KindVariableStatement [155, 183), i=94, next=0
      KindVariableDeclarationList [155, 182), i=95, next=0
        NodeList [160, 182), i=96, next=0
          KindVariableDeclaration [160, 182), i=97, next=0
            KindIdentifier "v" [160, 162), i=98, next=99
            KindTypeAssertionExpression [164, 182), i=99, next=0
              KindTypeReference [166, 167), i=100, next=102
                KindIdentifier "T" [166, 167), i=101, next=0
              KindParenthesizedExpression [168, 182), i=102, next=0
                KindBinaryExpression [169, 181), i=103, next=0
                  KindBinaryExpression [169, 174), i=104, next=108
                    KindIdentifier "a" [169, 170), i=105, next=106
                    KindEqualsToken [170, 172), i=106, next=107
                    KindNumericLiteral [172, 174), i=107, next=0
                  KindCommaToken [174, 175), i=108, next=109
                  KindBinaryExpression [175, 181), i=109, next=0
                    KindIdentifier "b" [175, 177), i=110, next=111
                    KindEqualsToken [177, 179), i=111, next=112
                    KindNumericLiteral [179, 181), i=112, next=0
