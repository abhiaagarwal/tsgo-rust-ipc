KindSourceFile [0, 2094), i=1, next=0
  NodeList [0, 2092), i=2, next=0
    KindClassDeclaration [0, 29), i=3, next=11
      KindIdentifier "C" [5, 7), i=4, next=5
      NodeList [9, 27), i=5, next=0
        KindPropertyDeclaration [9, 27), i=6, next=0
          NodeList [9, 17), i=7, next=9
            KindPrivateKeyword [9, 17), i=8, next=0
          KindIdentifier "p" [17, 19), i=9, next=10
          KindStringKeyword [20, 27), i=10, next=0
    KindEmptyStatement [29, 30), i=11, next=12
    KindVariableStatement [30, 50), i=12, next=18
      KindVariableDeclarationList [30, 49), i=13, next=0
        NodeList [37, 49), i=14, next=0
          KindVariableDeclaration [37, 49), i=15, next=0
            KindIdentifier "str" [37, 41), i=16, next=17
            KindStringKeyword [42, 49), i=17, next=0
    KindVariableStatement [50, 70), i=18, next=24
      KindVariableDeclarationList [50, 69), i=19, next=0
        NodeList [55, 69), i=20, next=0
          KindVariableDeclaration [55, 69), i=21, next=0
            KindIdentifier "bool" [55, 60), i=22, next=23
            KindBooleanKeyword [61, 69), i=23, next=0
    KindVariableStatement [70, 88), i=24, next=30
      KindVariableDeclarationList [70, 87), i=25, next=0
        NodeList [75, 87), i=26, next=0
          KindVariableDeclaration [75, 87), i=27, next=0
            KindIdentifier "num" [75, 79), i=28, next=29
            KindNumberKeyword [80, 87), i=29, next=0
    KindVariableStatement [88, 120), i=30, next=39
      KindVariableDeclarationList [88, 119), i=31, next=0
        NodeList [93, 119), i=32, next=0
          KindVariableDeclaration [93, 119), i=33, next=0
            KindIdentifier "strOrNum" [93, 102), i=34, next=35
            KindUnionType [103, 119), i=35, next=0
              NodeList [103, 119), i=36, next=0
                KindStringKeyword [103, 110), i=37, next=38
                KindNumberKeyword [112, 119), i=38, next=0
    KindVariableStatement [120, 154), i=39, next=48
      KindVariableDeclarationList [120, 153), i=40, next=0
        NodeList [125, 153), i=41, next=0
          KindVariableDeclaration [125, 153), i=42, next=0
            KindIdentifier "strOrBool" [125, 135), i=43, next=44
            KindUnionType [136, 153), i=44, next=0
              NodeList [136, 153), i=45, next=0
                KindStringKeyword [136, 143), i=46, next=47
                KindBooleanKeyword [145, 153), i=47, next=0
    KindVariableStatement [154, 187), i=48, next=57
      KindVariableDeclarationList [154, 187), i=49, next=0
        NodeList [159, 187), i=50, next=0
          KindVariableDeclaration [159, 187), i=51, next=0
            KindIdentifier "numOrBool" [159, 169), i=52, next=53
            KindUnionType [170, 187), i=53, next=0
              NodeList [170, 187), i=54, next=0
                KindNumberKeyword [170, 177), i=55, next=56
                KindBooleanKeyword [179, 187), i=56, next=0
    KindVariableStatement [187, 235), i=57, next=67
      KindVariableDeclarationList [187, 234), i=58, next=0
        NodeList [192, 234), i=59, next=0
          KindVariableDeclaration [192, 234), i=60, next=0
            KindIdentifier "strOrNumOrBool" [192, 207), i=61, next=62
            KindUnionType [208, 234), i=62, next=0
              NodeList [208, 234), i=63, next=0
                KindStringKeyword [208, 215), i=64, next=65
                KindNumberKeyword [217, 224), i=65, next=66
                KindBooleanKeyword [226, 234), i=66, next=0
    KindVariableStatement [235, 260), i=67, next=77
      KindVariableDeclarationList [235, 259), i=68, next=0
        NodeList [240, 259), i=69, next=0
          KindVariableDeclaration [240, 259), i=70, next=0
            KindIdentifier "strOrC" [240, 247), i=71, next=72
            KindUnionType [248, 259), i=72, next=0
              NodeList [248, 259), i=73, next=0
                KindStringKeyword [248, 255), i=74, next=75
                KindTypeReference [257, 259), i=75, next=0
                  KindIdentifier "C" [257, 259), i=76, next=0
    KindVariableStatement [260, 285), i=77, next=87
      KindVariableDeclarationList [260, 284), i=78, next=0
        NodeList [265, 284), i=79, next=0
          KindVariableDeclaration [265, 284), i=80, next=0
            KindIdentifier "numOrC" [265, 272), i=81, next=82
            KindUnionType [273, 284), i=82, next=0
              NodeList [273, 284), i=83, next=0
                KindNumberKeyword [273, 280), i=84, next=85
                KindTypeReference [282, 284), i=85, next=0
                  KindIdentifier "C" [282, 284), i=86, next=0
    KindVariableStatement [285, 312), i=87, next=97
      KindVariableDeclarationList [285, 311), i=88, next=0
        NodeList [290, 311), i=89, next=0
          KindVariableDeclaration [290, 311), i=90, next=0
            KindIdentifier "boolOrC" [290, 298), i=91, next=92
            KindUnionType [299, 311), i=92, next=0
              NodeList [299, 311), i=93, next=0
                KindBooleanKeyword [299, 307), i=94, next=95
                KindTypeReference [309, 311), i=95, next=0
                  KindIdentifier "C" [309, 311), i=96, next=0
    KindVariableStatement [312, 323), i=97, next=104
      KindVariableDeclarationList [312, 322), i=98, next=0
        NodeList [317, 322), i=99, next=0
          KindVariableDeclaration [317, 322), i=100, next=0
            KindIdentifier "c" [317, 319), i=101, next=102
            KindTypeReference [320, 322), i=102, next=0
              KindIdentifier "C" [320, 322), i=103, next=0
    KindIfStatement [323, 710), i=104, next=124
      KindBinaryExpression [597, 627), i=105, next=110
        KindTypeOfExpression [597, 613), i=106, next=108
          KindIdentifier "strOrBool" [603, 613), i=107, next=0
        KindEqualsEqualsEqualsToken [613, 617), i=108, next=109
        KindStringLiteral "boolean" [617, 627), i=109, next=0
      KindBlock [628, 667), i=110, next=117
        NodeList [630, 653), i=111, next=0
          KindExpressionStatement [630, 653), i=112, next=0
            KindBinaryExpression [630, 652), i=113, next=0
              KindIdentifier "bool" [630, 640), i=114, next=115
              KindEqualsToken [640, 642), i=115, next=116
              KindIdentifier "strOrBool" [642, 652), i=116, next=0
      KindBlock [673, 710), i=117, next=0
        NodeList [675, 697), i=118, next=0
          KindExpressionStatement [675, 697), i=119, next=0
            KindBinaryExpression [675, 696), i=120, next=0
              KindIdentifier "str" [675, 684), i=121, next=122
              KindEqualsToken [684, 686), i=122, next=123
              KindIdentifier "strOrBool" [686, 696), i=123, next=0
    KindIfStatement [710, 829), i=124, next=144
      KindBinaryExpression [716, 746), i=125, next=130
        KindTypeOfExpression [716, 732), i=126, next=128
          KindIdentifier "numOrBool" [722, 732), i=127, next=0
        KindEqualsEqualsEqualsToken [732, 736), i=128, next=129
        KindStringLiteral "boolean" [736, 746), i=129, next=0
      KindBlock [747, 786), i=130, next=137
        NodeList [749, 772), i=131, next=0
          KindExpressionStatement [749, 772), i=132, next=0
            KindBinaryExpression [749, 771), i=133, next=0
              KindIdentifier "bool" [749, 759), i=134, next=135
              KindEqualsToken [759, 761), i=135, next=136
              KindIdentifier "numOrBool" [761, 771), i=136, next=0
      KindBlock [792, 829), i=137, next=0
        NodeList [794, 816), i=138, next=0
          KindExpressionStatement [794, 816), i=139, next=0
            KindBinaryExpression [794, 815), i=140, next=0
              KindIdentifier "num" [794, 803), i=141, next=142
              KindEqualsToken [803, 805), i=142, next=143
              KindIdentifier "numOrBool" [805, 815), i=143, next=0
    KindIfStatement [829, 977), i=144, next=164
      KindBinaryExpression [835, 870), i=145, next=150
        KindTypeOfExpression [835, 856), i=146, next=148
          KindIdentifier "strOrNumOrBool" [841, 856), i=147, next=0
        KindEqualsEqualsEqualsToken [856, 860), i=148, next=149
        KindStringLiteral "boolean" [860, 870), i=149, next=0
      KindBlock [871, 915), i=150, next=157
        NodeList [873, 901), i=151, next=0
          KindExpressionStatement [873, 901), i=152, next=0
            KindBinaryExpression [873, 900), i=153, next=0
              KindIdentifier "bool" [873, 883), i=154, next=155
              KindEqualsToken [883, 885), i=155, next=156
              KindIdentifier "strOrNumOrBool" [885, 900), i=156, next=0
      KindBlock [921, 977), i=157, next=0
        NodeList [923, 955), i=158, next=0
          KindExpressionStatement [923, 955), i=159, next=0
            KindBinaryExpression [923, 954), i=160, next=0
              KindIdentifier "strOrNum" [923, 937), i=161, next=162
              KindEqualsToken [937, 939), i=162, next=163
              KindIdentifier "strOrNumOrBool" [939, 954), i=163, next=0
    KindIfStatement [977, 1083), i=164, next=184
      KindBinaryExpression [983, 1011), i=165, next=170
        KindTypeOfExpression [983, 997), i=166, next=168
          KindIdentifier "boolOrC" [989, 997), i=167, next=0
        KindEqualsEqualsEqualsToken [997, 1001), i=168, next=169
        KindStringLiteral "boolean" [1001, 1011), i=169, next=0
      KindBlock [1012, 1049), i=170, next=177
        NodeList [1014, 1035), i=171, next=0
          KindExpressionStatement [1014, 1035), i=172, next=0
            KindBinaryExpression [1014, 1034), i=173, next=0
              KindIdentifier "bool" [1014, 1024), i=174, next=175
              KindEqualsToken [1024, 1026), i=175, next=176
              KindIdentifier "boolOrC" [1026, 1034), i=176, next=0
      KindBlock [1055, 1083), i=177, next=0
        NodeList [1057, 1075), i=178, next=0
          KindExpressionStatement [1057, 1075), i=179, next=0
            KindBinaryExpression [1057, 1074), i=180, next=0
              KindIdentifier "c" [1057, 1064), i=181, next=182
              KindEqualsToken [1064, 1066), i=182, next=183
              KindIdentifier "boolOrC" [1066, 1074), i=183, next=0
    KindIfStatement [1083, 1231), i=184, next=211
      KindBinaryExpression [1091, 1120), i=185, next=190
        KindTypeOfExpression [1091, 1106), i=186, next=188
          KindIdentifier "strOrNum" [1097, 1106), i=187, next=0
        KindEqualsEqualsEqualsToken [1106, 1110), i=188, next=189
        KindStringLiteral "boolean" [1110, 1120), i=189, next=0
      KindBlock [1121, 1160), i=190, next=199
        NodeList [1123, 1151), i=191, next=0
          KindVariableStatement [1123, 1151), i=192, next=0
            KindVariableDeclarationList [1123, 1150), i=193, next=0
              NodeList [1132, 1150), i=194, next=0
                KindVariableDeclaration [1132, 1150), i=195, next=0
                  KindIdentifier "z1" [1132, 1135), i=196, next=197
                  KindTypeLiteral [1136, 1139), i=197, next=198
                  KindIdentifier "strOrNum" [1141, 1150), i=198, next=0
      KindBlock [1166, 1231), i=199, next=0
        NodeList [1168, 1209), i=200, next=0
          KindVariableStatement [1168, 1209), i=201, next=0
            KindVariableDeclarationList [1168, 1208), i=202, next=0
              NodeList [1177, 1208), i=203, next=0
                KindVariableDeclaration [1177, 1208), i=204, next=0
                  KindIdentifier "z2" [1177, 1180), i=205, next=206
                  KindUnionType [1181, 1197), i=206, next=210
                    NodeList [1181, 1197), i=207, next=0
                      KindStringKeyword [1181, 1188), i=208, next=209
                      KindNumberKeyword [1190, 1197), i=209, next=0
                  KindIdentifier "strOrNum" [1199, 1208), i=210, next=0
    KindIfStatement [1231, 1571), i=211, next=231
      KindBinaryExpression [1458, 1488), i=212, next=217
        KindTypeOfExpression [1458, 1474), i=213, next=215
          KindIdentifier "strOrBool" [1464, 1474), i=214, next=0
        KindExclamationEqualsEqualsToken [1474, 1478), i=215, next=216
        KindStringLiteral "boolean" [1478, 1488), i=216, next=0
      KindBlock [1489, 1526), i=217, next=224
        NodeList [1491, 1513), i=218, next=0
          KindExpressionStatement [1491, 1513), i=219, next=0
            KindBinaryExpression [1491, 1512), i=220, next=0
              KindIdentifier "str" [1491, 1500), i=221, next=222
              KindEqualsToken [1500, 1502), i=222, next=223
              KindIdentifier "strOrBool" [1502, 1512), i=223, next=0
      KindBlock [1532, 1571), i=224, next=0
        NodeList [1534, 1557), i=225, next=0
          KindExpressionStatement [1534, 1557), i=226, next=0
            KindBinaryExpression [1534, 1556), i=227, next=0
              KindIdentifier "bool" [1534, 1544), i=228, next=229
              KindEqualsToken [1544, 1546), i=229, next=230
              KindIdentifier "strOrBool" [1546, 1556), i=230, next=0
    KindIfStatement [1571, 1690), i=231, next=251
      KindBinaryExpression [1577, 1607), i=232, next=237
        KindTypeOfExpression [1577, 1593), i=233, next=235
          KindIdentifier "numOrBool" [1583, 1593), i=234, next=0
        KindExclamationEqualsEqualsToken [1593, 1597), i=235, next=236
        KindStringLiteral "boolean" [1597, 1607), i=236, next=0
      KindBlock [1608, 1645), i=237, next=244
        NodeList [1610, 1632), i=238, next=0
          KindExpressionStatement [1610, 1632), i=239, next=0
            KindBinaryExpression [1610, 1631), i=240, next=0
              KindIdentifier "num" [1610, 1619), i=241, next=242
              KindEqualsToken [1619, 1621), i=242, next=243
              KindIdentifier "numOrBool" [1621, 1631), i=243, next=0
      KindBlock [1651, 1690), i=244, next=0
        NodeList [1653, 1676), i=245, next=0
          KindExpressionStatement [1653, 1676), i=246, next=0
            KindBinaryExpression [1653, 1675), i=247, next=0
              KindIdentifier "bool" [1653, 1663), i=248, next=249
              KindEqualsToken [1663, 1665), i=249, next=250
              KindIdentifier "numOrBool" [1665, 1675), i=250, next=0
    KindIfStatement [1690, 1838), i=251, next=15
      KindBinaryExpression [1696, 1731), i=252, next=1
        KindTypeOfExpression [1696, 1717), i=253, next=255
          KindIdentifier "strOrNumOrBool" [1702, 1717), i=254, next=0
        KindExclamationEqualsEqualsToken [1717, 1721), i=255, next=0
        KindStringLiteral "boolean" [1721, 1731), i=256, next=0
      KindBlock [1732, 1788), i=257, next=8
        NodeList [1734, 1766), i=258, next=0
          KindExpressionStatement [1734, 1766), i=259, next=0
            KindBinaryExpression [1734, 1765), i=260, next=0
              KindIdentifier "strOrNum" [1734, 1748), i=261, next=6
              KindEqualsToken [1748, 1750), i=262, next=7
              KindIdentifier "strOrNumOrBool" [1750, 1765), i=263, next=0
      KindBlock [1794, 1838), i=264, next=0
        NodeList [1796, 1824), i=265, next=0
          KindExpressionStatement [1796, 1824), i=266, next=0
            KindBinaryExpression [1796, 1823), i=267, next=0
              KindIdentifier "bool" [1796, 1806), i=268, next=13
              KindEqualsToken [1806, 1808), i=269, next=14
              KindIdentifier "strOrNumOrBool" [1808, 1823), i=270, next=0
    KindIfStatement [1838, 1944), i=271, next=35
      KindBinaryExpression [1844, 1872), i=272, next=21
        KindTypeOfExpression [1844, 1858), i=273, next=19
          KindIdentifier "boolOrC" [1850, 1858), i=274, next=0
        KindExclamationEqualsEqualsToken [1858, 1862), i=275, next=20
        KindStringLiteral "boolean" [1862, 1872), i=276, next=0
      KindBlock [1873, 1901), i=277, next=28
        NodeList [1875, 1893), i=278, next=0
          KindExpressionStatement [1875, 1893), i=279, next=0
            KindBinaryExpression [1875, 1892), i=280, next=0
              KindIdentifier "c" [1875, 1882), i=281, next=26
              KindEqualsToken [1882, 1884), i=282, next=27
              KindIdentifier "boolOrC" [1884, 1892), i=283, next=0
      KindBlock [1907, 1944), i=284, next=0
        NodeList [1909, 1930), i=285, next=0
          KindExpressionStatement [1909, 1930), i=286, next=0
            KindBinaryExpression [1909, 1929), i=287, next=0
              KindIdentifier "bool" [1909, 1919), i=288, next=33
              KindEqualsToken [1919, 1921), i=289, next=34
              KindIdentifier "boolOrC" [1921, 1929), i=290, next=0
    KindIfStatement [1944, 2092), i=291, next=0
      KindBinaryExpression [1952, 1981), i=292, next=41
        KindTypeOfExpression [1952, 1967), i=293, next=39
          KindIdentifier "strOrNum" [1958, 1967), i=294, next=0
        KindExclamationEqualsEqualsToken [1967, 1971), i=295, next=40
        KindStringLiteral "boolean" [1971, 1981), i=296, next=0
      KindBlock [1982, 2047), i=297, next=53
        NodeList [1984, 2025), i=298, next=0
          KindVariableStatement [1984, 2025), i=299, next=0
            KindVariableDeclarationList [1984, 2024), i=300, next=0
              NodeList [1993, 2024), i=301, next=0
                KindVariableDeclaration [1993, 2024), i=302, next=0
                  KindIdentifier "z1" [1993, 1996), i=303, next=48
                  KindUnionType [1997, 2013), i=304, next=52
                    NodeList [1997, 2013), i=305, next=0
                      KindStringKeyword [1997, 2004), i=306, next=51
                      KindNumberKeyword [2006, 2013), i=307, next=0
                  KindIdentifier "strOrNum" [2015, 2024), i=308, next=0
      KindBlock [2053, 2092), i=309, next=0
        NodeList [2055, 2083), i=310, next=0
          KindVariableStatement [2055, 2083), i=311, next=0
            KindVariableDeclarationList [2055, 2082), i=312, next=0
              NodeList [2064, 2082), i=313, next=0
                KindVariableDeclaration [2064, 2082), i=314, next=0
                  KindIdentifier "z2" [2064, 2067), i=315, next=60
                  KindTypeLiteral [2068, 2071), i=316, next=61
                  KindIdentifier "strOrNum" [2073, 2082), i=317, next=0
