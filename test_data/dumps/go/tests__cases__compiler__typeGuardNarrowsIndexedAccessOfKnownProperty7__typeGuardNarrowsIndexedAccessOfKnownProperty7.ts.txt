KindSourceFile [0, 161), i=1, next=0
  NodeList [0, 160), i=2, next=0
    KindModuleDeclaration [0, 57), i=3, next=18
      NodeList [0, 6), i=4, next=6
        KindExportKeyword [0, 6), i=5, next=0
      KindIdentifier "Foo" [16, 20), i=6, next=7
      KindModuleBlock [20, 57), i=7, next=0
        NodeList [22, 55), i=8, next=0
          KindVariableStatement [22, 55), i=9, next=0
            NodeList [22, 33), i=10, next=12
              KindExportKeyword [22, 33), i=11, next=0
            KindVariableDeclarationList [33, 54), i=12, next=0
              NodeList [39, 54), i=13, next=0
                KindVariableDeclaration [39, 54), i=14, next=0
                  KindIdentifier "key" [39, 43), i=15, next=16
                  KindCallExpression [45, 54), i=16, next=0
                    KindIdentifier "Symbol" [45, 52), i=17, next=0
    KindClassDeclaration [57, 160), i=18, next=0
      NodeList [57, 65), i=19, next=21
        KindExportKeyword [57, 65), i=20, next=0
      KindIdentifier "C" [71, 73), i=21, next=22
      NodeList [75, 158), i=22, next=0
        KindPropertyDeclaration [75, 98), i=23, next=29
          KindComputedPropertyName [75, 89), i=24, next=28
            KindPropertyAccessExpression [81, 88), i=25, next=0
              KindIdentifier "Foo" [81, 84), i=26, next=27
              KindIdentifier "key" [85, 88), i=27, next=0
          KindStringKeyword [90, 97), i=28, next=0
        KindConstructor [98, 158), i=29, next=0
          KindBlock [117, 158), i=30, next=0
            NodeList [119, 152), i=31, next=0
              KindExpressionStatement [119, 152), i=32, next=0
                KindBinaryExpression [119, 151), i=33, next=0
                  KindElementAccessExpression [119, 141), i=34, next=39
                    KindThisKeyword [119, 132), i=35, next=36
                    KindPropertyAccessExpression [133, 140), i=36, next=0
                      KindIdentifier "Foo" [133, 136), i=37, next=38
                      KindIdentifier "key" [137, 140), i=38, next=0
                  KindEqualsToken [141, 143), i=39, next=40
                  KindStringLiteral "hello" [143, 151), i=40, next=0
