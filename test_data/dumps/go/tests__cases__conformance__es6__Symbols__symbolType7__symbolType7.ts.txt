KindSourceFile [0, 84), i=1, next=0
  NodeList [0, 84), i=2, next=0
    KindVariableStatement [0, 28), i=3, next=14
      KindVariableDeclarationList [0, 27), i=4, next=0
        NodeList [3, 27), i=5, next=0
          KindVariableDeclaration [3, 27), i=6, next=0
            KindIdentifier "s" [3, 5), i=7, next=8
            KindCallExpression [7, 27), i=8, next=0
              KindPropertyAccessExpression [7, 18), i=9, next=12
                KindIdentifier "Symbol" [7, 14), i=10, next=11
                KindIdentifier "for" [15, 18), i=11, next=0
              NodeList [19, 26), i=12, next=0
                KindStringLiteral "shift" [19, 26), i=13, next=0
    KindExpressionStatement [28, 37), i=14, next=19
      KindBinaryExpression [28, 36), i=15, next=0
        KindIdentifier "s" [28, 31), i=16, next=17
        KindLessThanLessThanToken [31, 34), i=17, next=18
        KindIdentifier "s" [34, 36), i=18, next=0
    KindExpressionStatement [37, 46), i=19, next=24
      KindBinaryExpression [37, 45), i=20, next=0
        KindIdentifier "s" [37, 40), i=21, next=22
        KindLessThanLessThanToken [40, 43), i=22, next=23
        KindNumericLiteral [43, 45), i=23, next=0
    KindExpressionStatement [46, 55), i=24, next=29
      KindBinaryExpression [46, 54), i=25, next=0
        KindIdentifier "s" [46, 49), i=26, next=27
        KindGreaterThanGreaterThanToken [49, 52), i=27, next=28
        KindIdentifier "s" [52, 54), i=28, next=0
    KindExpressionStatement [55, 64), i=29, next=34
      KindBinaryExpression [55, 63), i=30, next=0
        KindIdentifier "s" [55, 58), i=31, next=32
        KindGreaterThanGreaterThanToken [58, 61), i=32, next=33
        KindNumericLiteral [61, 63), i=33, next=0
    KindExpressionStatement [64, 74), i=34, next=39
      KindBinaryExpression [64, 73), i=35, next=0
        KindIdentifier "s" [64, 67), i=36, next=37
        KindGreaterThanGreaterThanGreaterThanToken [67, 71), i=37, next=38
        KindIdentifier "s" [71, 73), i=38, next=0
    KindExpressionStatement [74, 84), i=39, next=0
      KindBinaryExpression [74, 83), i=40, next=0
        KindIdentifier "s" [74, 77), i=41, next=42
        KindGreaterThanGreaterThanGreaterThanToken [77, 81), i=42, next=43
        KindNumericLiteral [81, 83), i=43, next=0
