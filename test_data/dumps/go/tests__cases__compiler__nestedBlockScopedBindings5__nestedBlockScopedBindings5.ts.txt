KindSourceFile [0, 1155), i=1, next=0
  NodeList [0, 1155), i=2, next=0
    KindFunctionDeclaration [0, 118), i=3, next=38
      KindIdentifier "a0" [8, 11), i=4, next=5
      KindBlock [13, 118), i=5, next=0
        NodeList [15, 115), i=6, next=0
          KindForInStatement [15, 67), i=7, next=23
            KindVariableDeclarationList [26, 31), i=8, next=12
              NodeList [29, 31), i=9, next=0
                KindVariableDeclaration [29, 31), i=10, next=0
                  KindIdentifier "x" [29, 31), i=11, next=0
            KindArrayLiteralExpression [34, 37), i=12, next=13
            KindBlock [38, 67), i=13, next=0
              NodeList [40, 60), i=14, next=0
                KindExpressionStatement [40, 60), i=15, next=0
                  KindBinaryExpression [40, 59), i=16, next=0
                    KindIdentifier "x" [40, 51), i=17, next=18
                    KindEqualsToken [51, 53), i=18, next=19
                    KindBinaryExpression [53, 59), i=19, next=0
                      KindIdentifier "x" [53, 55), i=20, next=21
                      KindPlusToken [55, 57), i=21, next=22
                      KindNumericLiteral [57, 59), i=22, next=0
          KindForStatement [67, 115), i=23, next=0
            KindVariableDeclarationList [78, 83), i=24, next=28
              NodeList [81, 83), i=25, next=0
                KindVariableDeclaration [81, 83), i=26, next=0
                  KindIdentifier "x" [81, 83), i=27, next=0
            KindBlock [86, 115), i=28, next=0
              NodeList [88, 108), i=29, next=0
                KindExpressionStatement [88, 108), i=30, next=0
                  KindBinaryExpression [88, 107), i=31, next=0
                    KindIdentifier "x" [88, 99), i=32, next=33
                    KindEqualsToken [99, 101), i=33, next=34
                    KindBinaryExpression [101, 107), i=34, next=0
                      KindIdentifier "x" [101, 103), i=35, next=36
                      KindPlusToken [103, 105), i=36, next=37
                      KindNumericLiteral [105, 107), i=37, next=0
    KindFunctionDeclaration [118, 258), i=38, next=77
      KindIdentifier "a1" [130, 133), i=39, next=40
      KindBlock [135, 258), i=40, next=0
        NodeList [137, 255), i=41, next=0
          KindForInStatement [137, 207), i=42, next=62
            KindVariableDeclarationList [148, 153), i=43, next=47
              NodeList [151, 153), i=44, next=0
                KindVariableDeclaration [151, 153), i=45, next=0
                  KindIdentifier "x" [151, 153), i=46, next=0
            KindArrayLiteralExpression [156, 159), i=47, next=48
            KindBlock [160, 207), i=48, next=0
              NodeList [162, 200), i=49, next=0
                KindExpressionStatement [162, 182), i=50, next=58
                  KindBinaryExpression [162, 181), i=51, next=0
                    KindIdentifier "x" [162, 173), i=52, next=53
                    KindEqualsToken [173, 175), i=53, next=54
                    KindBinaryExpression [175, 181), i=54, next=0
                      KindIdentifier "x" [175, 177), i=55, next=56
                      KindPlusToken [177, 179), i=56, next=57
                      KindNumericLiteral [179, 181), i=57, next=0
                KindExpressionStatement [182, 200), i=58, next=0
                  KindArrowFunction [182, 199), i=59, next=0
                    KindEqualsGreaterThanToken [194, 197), i=60, next=61
                    KindIdentifier "x" [197, 199), i=61, next=0
          KindForStatement [207, 255), i=62, next=0
            KindVariableDeclarationList [218, 223), i=63, next=67
              NodeList [221, 223), i=64, next=0
                KindVariableDeclaration [221, 223), i=65, next=0
                  KindIdentifier "x" [221, 223), i=66, next=0
            KindBlock [226, 255), i=67, next=0
              NodeList [228, 248), i=68, next=0
                KindExpressionStatement [228, 248), i=69, next=0
                  KindBinaryExpression [228, 247), i=70, next=0
                    KindIdentifier "x" [228, 239), i=71, next=72
                    KindEqualsToken [239, 241), i=72, next=73
                    KindBinaryExpression [241, 247), i=73, next=0
                      KindIdentifier "x" [241, 243), i=74, next=75
                      KindPlusToken [243, 245), i=75, next=76
                      KindNumericLiteral [245, 247), i=76, next=0
    KindFunctionDeclaration [258, 398), i=77, next=116
      KindIdentifier "a2" [270, 273), i=78, next=79
      KindBlock [275, 398), i=79, next=0
        NodeList [277, 395), i=80, next=0
          KindForInStatement [277, 329), i=81, next=97
            KindVariableDeclarationList [288, 293), i=82, next=86
              NodeList [291, 293), i=83, next=0
                KindVariableDeclaration [291, 293), i=84, next=0
                  KindIdentifier "x" [291, 293), i=85, next=0
            KindArrayLiteralExpression [296, 299), i=86, next=87
            KindBlock [300, 329), i=87, next=0
              NodeList [302, 322), i=88, next=0
                KindExpressionStatement [302, 322), i=89, next=0
                  KindBinaryExpression [302, 321), i=90, next=0
                    KindIdentifier "x" [302, 313), i=91, next=92
                    KindEqualsToken [313, 315), i=92, next=93
                    KindBinaryExpression [315, 321), i=93, next=0
                      KindIdentifier "x" [315, 317), i=94, next=95
                      KindPlusToken [317, 319), i=95, next=96
                      KindNumericLiteral [319, 321), i=96, next=0
          KindForStatement [329, 395), i=97, next=0
            KindVariableDeclarationList [340, 345), i=98, next=102
              NodeList [343, 345), i=99, next=0
                KindVariableDeclaration [343, 345), i=100, next=0
                  KindIdentifier "x" [343, 345), i=101, next=0
            KindBlock [348, 395), i=102, next=0
              NodeList [350, 388), i=103, next=0
                KindExpressionStatement [350, 370), i=104, next=112
                  KindBinaryExpression [350, 369), i=105, next=0
                    KindIdentifier "x" [350, 361), i=106, next=107
                    KindEqualsToken [361, 363), i=107, next=108
                    KindBinaryExpression [363, 369), i=108, next=0
                      KindIdentifier "x" [363, 365), i=109, next=110
                      KindPlusToken [365, 367), i=110, next=111
                      KindNumericLiteral [367, 369), i=111, next=0
                KindExpressionStatement [370, 388), i=112, next=0
                  KindArrowFunction [370, 387), i=113, next=0
                    KindEqualsGreaterThanToken [382, 385), i=114, next=115
                    KindIdentifier "x" [385, 387), i=115, next=0
    KindFunctionDeclaration [398, 673), i=116, next=177
      KindIdentifier "a3" [412, 415), i=117, next=118
      KindBlock [417, 673), i=118, next=0
        NodeList [419, 664), i=119, next=0
          KindForInStatement [419, 489), i=120, next=140
            KindVariableDeclarationList [430, 435), i=121, next=125
              NodeList [433, 435), i=122, next=0
                KindVariableDeclaration [433, 435), i=123, next=0
                  KindIdentifier "x" [433, 435), i=124, next=0
            KindArrayLiteralExpression [438, 441), i=125, next=126
            KindBlock [442, 489), i=126, next=0
              NodeList [444, 482), i=127, next=0
                KindExpressionStatement [444, 464), i=128, next=136
                  KindBinaryExpression [444, 463), i=129, next=0
                    KindIdentifier "x" [444, 455), i=130, next=131
                    KindEqualsToken [455, 457), i=131, next=132
                    KindBinaryExpression [457, 463), i=132, next=0
                      KindIdentifier "x" [457, 459), i=133, next=134
                      KindPlusToken [459, 461), i=134, next=135
                      KindNumericLiteral [461, 463), i=135, next=0
                KindExpressionStatement [464, 482), i=136, next=0
                  KindArrowFunction [464, 481), i=137, next=0
                    KindEqualsGreaterThanToken [476, 479), i=138, next=139
                    KindIdentifier "x" [479, 481), i=139, next=0
          KindForStatement [489, 560), i=140, next=160
            KindVariableDeclarationList [500, 505), i=141, next=145
              NodeList [503, 505), i=142, next=0
                KindVariableDeclaration [503, 505), i=143, next=0
                  KindIdentifier "x" [503, 505), i=144, next=0
            KindFalseKeyword [506, 511), i=145, next=146
            KindBlock [513, 560), i=146, next=0
              NodeList [515, 553), i=147, next=0
                KindExpressionStatement [515, 535), i=148, next=156
                  KindBinaryExpression [515, 534), i=149, next=0
                    KindIdentifier "x" [515, 526), i=150, next=151
                    KindEqualsToken [526, 528), i=151, next=152
                    KindBinaryExpression [528, 534), i=152, next=0
                      KindIdentifier "x" [528, 530), i=153, next=154
                      KindPlusToken [530, 532), i=154, next=155
                      KindNumericLiteral [532, 534), i=155, next=0
                KindExpressionStatement [535, 553), i=156, next=0
                  KindArrowFunction [535, 552), i=157, next=0
                    KindEqualsGreaterThanToken [547, 550), i=158, next=159
                    KindIdentifier "x" [550, 552), i=159, next=0
          KindSwitchStatement [560, 664), i=160, next=0
            KindNumericLiteral [574, 575), i=161, next=162
            KindCaseBlock [576, 664), i=162, next=0
              NodeList [578, 657), i=163, next=0
                KindCaseClause [578, 657), i=164, next=0
                  KindNumericLiteral [592, 594), i=165, next=166
                  NodeList [595, 657), i=166, next=0
                    KindVariableStatement [595, 615), i=167, next=172
                      KindVariableDeclarationList [595, 614), i=168, next=0
                        NodeList [612, 614), i=169, next=0
                          KindVariableDeclaration [612, 614), i=170, next=0
                            KindIdentifier "x" [612, 614), i=171, next=0
                    KindExpressionStatement [615, 637), i=172, next=176
                      KindArrowFunction [615, 636), i=173, next=0
                        KindEqualsGreaterThanToken [631, 634), i=174, next=175
                        KindIdentifier "x" [634, 636), i=175, next=0
                    KindBreakStatement [637, 657), i=176, next=0
    KindFunctionDeclaration [673, 910), i=177, next=230
      KindIdentifier "a4" [685, 688), i=178, next=179
      KindBlock [690, 910), i=179, next=0
        NodeList [692, 901), i=180, next=0
          KindForInStatement [692, 744), i=181, next=197
            KindVariableDeclarationList [703, 708), i=182, next=186
              NodeList [706, 708), i=183, next=0
                KindVariableDeclaration [706, 708), i=184, next=0
                  KindIdentifier "x" [706, 708), i=185, next=0
            KindArrayLiteralExpression [711, 714), i=186, next=187
            KindBlock [715, 744), i=187, next=0
              NodeList [717, 737), i=188, next=0
                KindExpressionStatement [717, 737), i=189, next=0
                  KindBinaryExpression [717, 736), i=190, next=0
                    KindIdentifier "x" [717, 728), i=191, next=192
                    KindEqualsToken [728, 730), i=192, next=193
                    KindBinaryExpression [730, 736), i=193, next=0
                      KindIdentifier "x" [730, 732), i=194, next=195
                      KindPlusToken [732, 734), i=195, next=196
                      KindNumericLiteral [734, 736), i=196, next=0
          KindForStatement [744, 797), i=197, next=213
            KindVariableDeclarationList [755, 760), i=198, next=202
              NodeList [758, 760), i=199, next=0
                KindVariableDeclaration [758, 760), i=200, next=0
                  KindIdentifier "x" [758, 760), i=201, next=0
            KindFalseKeyword [761, 766), i=202, next=203
            KindBlock [768, 797), i=203, next=0
              NodeList [770, 790), i=204, next=0
                KindExpressionStatement [770, 790), i=205, next=0
                  KindBinaryExpression [770, 789), i=206, next=0
                    KindIdentifier "x" [770, 781), i=207, next=208
                    KindEqualsToken [781, 783), i=208, next=209
                    KindBinaryExpression [783, 789), i=209, next=0
                      KindIdentifier "x" [783, 785), i=210, next=211
                      KindPlusToken [785, 787), i=211, next=212
                      KindNumericLiteral [787, 789), i=212, next=0
          KindSwitchStatement [797, 901), i=213, next=0
            KindNumericLiteral [811, 812), i=214, next=215
            KindCaseBlock [813, 901), i=215, next=0
              NodeList [815, 894), i=216, next=0
                KindCaseClause [815, 894), i=217, next=0
                  KindNumericLiteral [829, 831), i=218, next=219
                  NodeList [832, 894), i=219, next=0
                    KindVariableStatement [832, 852), i=220, next=225
                      KindVariableDeclarationList [832, 851), i=221, next=0
                        NodeList [849, 851), i=222, next=0
                          KindVariableDeclaration [849, 851), i=223, next=0
                            KindIdentifier "x" [849, 851), i=224, next=0
                    KindExpressionStatement [852, 874), i=225, next=229
                      KindArrowFunction [852, 873), i=226, next=0
                        KindEqualsGreaterThanToken [868, 871), i=227, next=228
                        KindIdentifier "x" [871, 873), i=228, next=0
                    KindBreakStatement [874, 894), i=229, next=0
    KindFunctionDeclaration [910, 1155), i=230, next=0
      KindIdentifier "a5" [922, 925), i=231, next=232
      KindBlock [927, 1155), i=232, next=0
        NodeList [929, 1146), i=233, next=0
          KindVariableStatement [929, 941), i=234, next=239
            KindVariableDeclarationList [929, 940), i=235, next=0
              NodeList [938, 940), i=236, next=0
                KindVariableDeclaration [938, 940), i=237, next=0
                  KindIdentifier "y" [938, 940), i=238, next=0
          KindForInStatement [941, 993), i=239, next=255
            KindVariableDeclarationList [952, 957), i=240, next=244
              NodeList [955, 957), i=241, next=0
                KindVariableDeclaration [955, 957), i=242, next=0
                  KindIdentifier "x" [955, 957), i=243, next=0
            KindArrayLiteralExpression [960, 963), i=244, next=245
            KindBlock [964, 993), i=245, next=0
              NodeList [966, 986), i=246, next=0
                KindExpressionStatement [966, 986), i=247, next=0
                  KindBinaryExpression [966, 985), i=248, next=0
                    KindIdentifier "x" [966, 977), i=249, next=250
                    KindEqualsToken [977, 979), i=250, next=251
                    KindBinaryExpression [979, 985), i=251, next=0
                      KindIdentifier "x" [979, 981), i=252, next=253
                      KindPlusToken [981, 983), i=253, next=254
                      KindNumericLiteral [983, 985), i=254, next=0
          KindForStatement [993, 1064), i=255, next=19
            KindVariableDeclarationList [1004, 1009), i=256, next=4
              NodeList [1007, 1009), i=257, next=0
                KindVariableDeclaration [1007, 1009), i=258, next=0
                  KindIdentifier "x" [1007, 1009), i=259, next=0
            KindFalseKeyword [1010, 1015), i=260, next=5
            KindBlock [1017, 1064), i=261, next=0
              NodeList [1019, 1057), i=262, next=0
                KindExpressionStatement [1019, 1039), i=263, next=15
                  KindBinaryExpression [1019, 1038), i=264, next=0
                    KindIdentifier "x" [1019, 1030), i=265, next=10
                    KindEqualsToken [1030, 1032), i=266, next=11
                    KindBinaryExpression [1032, 1038), i=267, next=0
                      KindIdentifier "x" [1032, 1034), i=268, next=13
                      KindPlusToken [1034, 1036), i=269, next=14
                      KindNumericLiteral [1036, 1038), i=270, next=0
                KindExpressionStatement [1039, 1057), i=271, next=0
                  KindArrowFunction [1039, 1056), i=272, next=0
                    KindEqualsGreaterThanToken [1051, 1054), i=273, next=18
                    KindIdentifier "x" [1054, 1056), i=274, next=0
          KindSwitchStatement [1064, 1146), i=275, next=0
            KindNumericLiteral [1078, 1079), i=276, next=21
            KindCaseBlock [1080, 1146), i=277, next=0
              NodeList [1082, 1139), i=278, next=0
                KindCaseClause [1082, 1139), i=279, next=0
                  KindNumericLiteral [1096, 1098), i=280, next=25
                  NodeList [1099, 1139), i=281, next=0
                    KindVariableStatement [1099, 1119), i=282, next=31
                      KindVariableDeclarationList [1099, 1118), i=283, next=0
                        NodeList [1116, 1118), i=284, next=0
                          KindVariableDeclaration [1116, 1118), i=285, next=0
                            KindIdentifier "x" [1116, 1118), i=286, next=0
                    KindBreakStatement [1119, 1139), i=287, next=0
