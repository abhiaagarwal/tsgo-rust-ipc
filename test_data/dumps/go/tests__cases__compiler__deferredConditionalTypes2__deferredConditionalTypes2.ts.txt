KindSourceFile [0, 1010), i=1, next=0
  NodeList [0, 1009), i=2, next=0
    KindTypeAliasDeclaration [0, 30), i=3, next=7
      KindIdentifier "PositiveInfinity" [4, 21), i=4, next=5
      KindLiteralType [23, 29), i=5, next=0
        KindNumericLiteral [23, 29), i=6, next=0
    KindTypeAliasDeclaration [30, 62), i=7, next=12
      KindIdentifier "NegativeInfinity" [35, 52), i=8, next=9
      KindLiteralType [54, 61), i=9, next=0
        KindPrefixUnaryExpression [54, 61), i=10, next=0
          KindNumericLiteral [56, 61), i=11, next=0
    KindTypeAliasDeclaration [62, 184), i=12, next=53
      NodeList [62, 70), i=13, next=15
        KindExportKeyword [62, 70), i=14, next=0
      KindIdentifier "IsEqual" [75, 83), i=15, next=16
      NodeList [84, 88), i=16, next=21
        KindTypeParameter [84, 85), i=17, next=19
          KindIdentifier "A" [84, 85), i=18, next=0
        KindTypeParameter [86, 88), i=19, next=0
          KindIdentifier "B" [86, 88), i=20, next=0
      KindConditionalType [91, 183), i=21, next=0
        KindParenthesizedType [91, 122), i=22, next=36
          KindFunctionType [93, 121), i=23, next=0
            NodeList [94, 95), i=24, next=27
              KindTypeParameter [94, 95), i=25, next=0
                KindIdentifier "G" [94, 95), i=26, next=0
            KindConditionalType [101, 121), i=27, next=0
              KindTypeReference [101, 103), i=28, next=30
                KindIdentifier "G" [101, 103), i=29, next=0
              KindTypeReference [111, 113), i=30, next=32
                KindIdentifier "A" [111, 113), i=31, next=0
              KindLiteralType [115, 117), i=32, next=34
                KindNumericLiteral [115, 117), i=33, next=0
              KindLiteralType [119, 121), i=34, next=0
                KindNumericLiteral [119, 121), i=35, next=0
        KindFunctionType [130, 164), i=36, next=49
          NodeList [132, 137), i=37, next=40
            KindTypeParameter [132, 136), i=38, next=0
              KindIdentifier "G" [132, 136), i=39, next=0
          KindConditionalType [144, 164), i=40, next=0
            KindTypeReference [144, 146), i=41, next=43
              KindIdentifier "G" [144, 146), i=42, next=0
            KindTypeReference [154, 156), i=43, next=45
              KindIdentifier "B" [154, 156), i=44, next=0
            KindLiteralType [158, 160), i=45, next=47
              KindNumericLiteral [158, 160), i=46, next=0
            KindLiteralType [162, 164), i=47, next=0
              KindNumericLiteral [162, 164), i=48, next=0
        KindLiteralType [168, 173), i=49, next=51
          KindTrueKeyword [168, 173), i=50, next=0
        KindLiteralType [177, 183), i=51, next=0
          KindFalseKeyword [177, 183), i=52, next=0
    KindTypeAliasDeclaration [184, 522), i=53, next=129
      NodeList [184, 192), i=54, next=56
        KindExportKeyword [184, 192), i=55, next=0
      KindIdentifier "Add" [197, 201), i=56, next=57
      NodeList [202, 236), i=57, next=64
        KindTypeParameter [202, 218), i=58, next=61
          KindIdentifier "A" [202, 203), i=59, next=60
          KindNumberKeyword [211, 218), i=60, next=0
        KindTypeParameter [219, 236), i=61, next=0
          KindIdentifier "B" [219, 221), i=62, next=63
          KindNumberKeyword [229, 236), i=63, next=0
      KindConditionalType [239, 521), i=64, next=0
        KindTupleType [239, 371), i=65, next=95
          NodeList [241, 369), i=66, next=0
            KindTypeReference [241, 272), i=67, next=74
              KindIdentifier "IsEqual" [241, 251), i=68, next=69
              NodeList [252, 271), i=69, next=0
                KindTypeReference [252, 253), i=70, next=72
                  KindIdentifier "A" [252, 253), i=71, next=0
                KindTypeReference [254, 271), i=72, next=0
                  KindIdentifier "PositiveInfinity" [254, 271), i=73, next=0
            KindTypeReference [273, 304), i=74, next=81
              KindIdentifier "IsEqual" [273, 283), i=75, next=76
              NodeList [284, 303), i=76, next=0
                KindTypeReference [284, 285), i=77, next=79
                  KindIdentifier "A" [284, 285), i=78, next=0
                KindTypeReference [286, 303), i=79, next=0
                  KindIdentifier "NegativeInfinity" [286, 303), i=80, next=0
            KindTypeReference [305, 336), i=81, next=88
              KindIdentifier "IsEqual" [305, 315), i=82, next=83
              NodeList [316, 335), i=83, next=0
                KindTypeReference [316, 317), i=84, next=86
                  KindIdentifier "B" [316, 317), i=85, next=0
                KindTypeReference [318, 335), i=86, next=0
                  KindIdentifier "PositiveInfinity" [318, 335), i=87, next=0
            KindTypeReference [337, 368), i=88, next=0
              KindIdentifier "IsEqual" [337, 347), i=89, next=90
              NodeList [348, 367), i=90, next=0
                KindTypeReference [348, 349), i=91, next=93
                  KindIdentifier "B" [348, 349), i=92, next=0
                KindTypeReference [350, 367), i=93, next=0
                  KindIdentifier "NegativeInfinity" [350, 367), i=94, next=0
        KindInferType [379, 432), i=95, next=104
          KindTypeParameter [385, 432), i=96, next=0
            KindIdentifier "R" [385, 387), i=97, next=98
            KindTupleType [395, 432), i=98, next=0
              NodeList [397, 431), i=99, next=0
                KindBooleanKeyword [397, 404), i=100, next=101
                KindBooleanKeyword [405, 413), i=101, next=102
                KindBooleanKeyword [414, 422), i=102, next=103
                KindBooleanKeyword [423, 431), i=103, next=0
        KindConditionalType [436, 511), i=104, next=128
          KindTupleType [436, 450), i=105, next=111
            NodeList [438, 449), i=106, next=0
              KindLiteralType [438, 442), i=107, next=109
                KindTrueKeyword [438, 442), i=108, next=0
              KindLiteralType [443, 449), i=109, next=0
                KindFalseKeyword [443, 449), i=110, next=0
          KindParenthesizedType [458, 473), i=111, next=124
            KindTupleType [460, 472), i=112, next=0
              NodeList [461, 471), i=113, next=0
                KindIndexedAccessType [461, 465), i=114, next=119
                  KindTypeReference [461, 462), i=115, next=117
                    KindIdentifier "R" [461, 462), i=116, next=0
                  KindLiteralType [463, 464), i=117, next=0
                    KindNumericLiteral [463, 464), i=118, next=0
                KindIndexedAccessType [466, 471), i=119, next=0
                  KindTypeReference [466, 468), i=120, next=122
                    KindIdentifier "R" [466, 468), i=121, next=0
                  KindLiteralType [469, 470), i=122, next=0
                    KindNumericLiteral [469, 470), i=123, next=0
          KindTypeReference [479, 496), i=124, next=126
            KindIdentifier "PositiveInfinity" [479, 496), i=125, next=0
          KindLiteralType [502, 511), i=126, next=0
            KindStringLiteral "failed" [502, 511), i=127, next=0
        KindNeverKeyword [515, 521), i=128, next=0
    KindTypeAliasDeclaration [522, 876), i=129, next=204
      NodeList [522, 530), i=130, next=132
        KindExportKeyword [522, 530), i=131, next=0
      KindIdentifier "AddWithoutParentheses" [535, 557), i=132, next=133
      NodeList [558, 592), i=133, next=140
        KindTypeParameter [558, 574), i=134, next=137
          KindIdentifier "A" [558, 559), i=135, next=136
          KindNumberKeyword [567, 574), i=136, next=0
        KindTypeParameter [575, 592), i=137, next=0
          KindIdentifier "B" [575, 577), i=138, next=139
          KindNumberKeyword [585, 592), i=139, next=0
      KindConditionalType [595, 875), i=140, next=0
        KindTupleType [595, 727), i=141, next=171
          NodeList [597, 725), i=142, next=0
            KindTypeReference [597, 628), i=143, next=150
              KindIdentifier "IsEqual" [597, 607), i=144, next=145
              NodeList [608, 627), i=145, next=0
                KindTypeReference [608, 609), i=146, next=148
                  KindIdentifier "A" [608, 609), i=147, next=0
                KindTypeReference [610, 627), i=148, next=0
                  KindIdentifier "PositiveInfinity" [610, 627), i=149, next=0
            KindTypeReference [629, 660), i=150, next=157
              KindIdentifier "IsEqual" [629, 639), i=151, next=152
              NodeList [640, 659), i=152, next=0
                KindTypeReference [640, 641), i=153, next=155
                  KindIdentifier "A" [640, 641), i=154, next=0
                KindTypeReference [642, 659), i=155, next=0
                  KindIdentifier "NegativeInfinity" [642, 659), i=156, next=0
            KindTypeReference [661, 692), i=157, next=164
              KindIdentifier "IsEqual" [661, 671), i=158, next=159
              NodeList [672, 691), i=159, next=0
                KindTypeReference [672, 673), i=160, next=162
                  KindIdentifier "B" [672, 673), i=161, next=0
                KindTypeReference [674, 691), i=162, next=0
                  KindIdentifier "PositiveInfinity" [674, 691), i=163, next=0
            KindTypeReference [693, 724), i=164, next=0
              KindIdentifier "IsEqual" [693, 703), i=165, next=166
              NodeList [704, 723), i=166, next=0
                KindTypeReference [704, 705), i=167, next=169
                  KindIdentifier "B" [704, 705), i=168, next=0
                KindTypeReference [706, 723), i=169, next=0
                  KindIdentifier "NegativeInfinity" [706, 723), i=170, next=0
        KindInferType [735, 788), i=171, next=180
          KindTypeParameter [741, 788), i=172, next=0
            KindIdentifier "R" [741, 743), i=173, next=174
            KindTupleType [751, 788), i=174, next=0
              NodeList [753, 787), i=175, next=0
                KindBooleanKeyword [753, 760), i=176, next=177
                KindBooleanKeyword [761, 769), i=177, next=178
                KindBooleanKeyword [770, 778), i=178, next=179
                KindBooleanKeyword [779, 787), i=179, next=0
        KindConditionalType [792, 865), i=180, next=203
          KindTupleType [792, 806), i=181, next=187
            NodeList [794, 805), i=182, next=0
              KindLiteralType [794, 798), i=183, next=185
                KindTrueKeyword [794, 798), i=184, next=0
              KindLiteralType [799, 805), i=185, next=0
                KindFalseKeyword [799, 805), i=186, next=0
          KindTupleType [814, 827), i=187, next=199
            NodeList [816, 826), i=188, next=0
              KindIndexedAccessType [816, 820), i=189, next=194
                KindTypeReference [816, 817), i=190, next=192
                  KindIdentifier "R" [816, 817), i=191, next=0
                KindLiteralType [818, 819), i=192, next=0
                  KindNumericLiteral [818, 819), i=193, next=0
              KindIndexedAccessType [821, 826), i=194, next=0
                KindTypeReference [821, 823), i=195, next=197
                  KindIdentifier "R" [821, 823), i=196, next=0
                KindLiteralType [824, 825), i=197, next=0
                  KindNumericLiteral [824, 825), i=198, next=0
          KindTypeReference [833, 850), i=199, next=201
            KindIdentifier "PositiveInfinity" [833, 850), i=200, next=0
          KindLiteralType [856, 865), i=201, next=0
            KindStringLiteral "failed" [856, 865), i=202, next=0
        KindNeverKeyword [869, 875), i=203, next=0
    KindTypeAliasDeclaration [876, 934), i=204, next=213
      KindIdentifier "AddTest0" [882, 891), i=205, next=206
      KindTypeReference [893, 933), i=206, next=0
        KindIdentifier "Add" [893, 897), i=207, next=208
        NodeList [898, 932), i=208, next=0
          KindTypeReference [898, 914), i=209, next=211
            KindIdentifier "PositiveInfinity" [898, 914), i=210, next=0
          KindTypeReference [915, 932), i=211, next=0
            KindIdentifier "PositiveInfinity" [915, 932), i=212, next=0
    KindTypeAliasDeclaration [934, 1009), i=213, next=0
      KindIdentifier "AddTest1" [939, 948), i=214, next=215
      KindTypeReference [950, 1008), i=215, next=0
        KindIdentifier "AddWithoutParentheses" [950, 972), i=216, next=217
        NodeList [973, 1007), i=217, next=0
          KindTypeReference [973, 989), i=218, next=220
            KindIdentifier "PositiveInfinity" [973, 989), i=219, next=0
          KindTypeReference [990, 1007), i=220, next=0
            KindIdentifier "PositiveInfinity" [990, 1007), i=221, next=0
