KindSourceFile [0, 353), i=1, next=0
  NodeList [0, 352), i=2, next=0
    KindBlock [0, 164), i=3, next=47
      NodeList [1, 162), i=4, next=0
        KindVariableStatement [1, 14), i=5, next=10
          KindVariableDeclarationList [1, 13), i=6, next=0
            NodeList [7, 13), i=7, next=0
              KindVariableDeclaration [7, 13), i=8, next=0
                KindIdentifier "iNext" [7, 13), i=9, next=0
        KindForStatement [14, 162), i=10, next=0
          KindVariableDeclarationList [22, 36), i=11, next=16
            NodeList [30, 36), i=12, next=0
              KindVariableDeclaration [30, 36), i=13, next=0
                KindIdentifier "i" [30, 32), i=14, next=15
                KindNumericLiteral [34, 36), i=15, next=0
          KindBinaryExpression [37, 48), i=16, next=20
            KindIdentifier "i" [37, 43), i=17, next=18
            KindLessThanToken [43, 45), i=18, next=19
            KindNumericLiteral [45, 48), i=19, next=0
          KindBinaryExpression [49, 63), i=20, next=24
            KindIdentifier "i" [49, 55), i=21, next=22
            KindEqualsToken [55, 57), i=22, next=23
            KindIdentifier "iNext" [57, 63), i=23, next=0
          KindBlock [76, 162), i=24, next=0
            NodeList [78, 158), i=25, next=0
              KindIfStatement [78, 139), i=26, next=39
                KindBinaryExpression [87, 93), i=27, next=31
                  KindIdentifier "i" [87, 88), i=28, next=29
                  KindEqualsEqualsToken [88, 91), i=29, next=30
                  KindNumericLiteral [91, 93), i=30, next=0
                KindBlock [94, 139), i=31, next=0
                  NodeList [96, 133), i=32, next=0
                    KindExpressionStatement [96, 117), i=33, next=38
                      KindBinaryExpression [96, 116), i=34, next=0
                        KindIdentifier "iNext" [96, 108), i=35, next=36
                        KindEqualsToken [108, 110), i=36, next=37
                        KindStringLiteral "bad" [110, 116), i=37, next=0
                    KindContinueStatement [117, 133), i=38, next=0
              KindExpressionStatement [139, 158), i=39, next=0
                KindBinaryExpression [139, 157), i=40, next=0
                  KindIdentifier "iNext" [139, 149), i=41, next=42
                  KindEqualsToken [149, 151), i=42, next=43
                  KindBinaryExpression [151, 157), i=43, next=0
                    KindIdentifier "i" [151, 153), i=44, next=45
                    KindPlusToken [153, 155), i=45, next=46
                    KindNumericLiteral [155, 157), i=46, next=0
    KindBlock [164, 352), i=47, next=0
      NodeList [167, 350), i=48, next=0
        KindVariableStatement [167, 202), i=49, next=59
          KindVariableDeclarationList [167, 201), i=50, next=0
            NodeList [173, 201), i=51, next=0
              KindVariableDeclaration [173, 201), i=52, next=0
                KindIdentifier "iNext" [173, 179), i=53, next=54
                KindUnionType [180, 196), i=54, next=58
                  NodeList [180, 196), i=55, next=0
                    KindStringKeyword [180, 187), i=56, next=57
                    KindNumberKeyword [189, 196), i=57, next=0
                KindStringLiteral "" [198, 201), i=58, next=0
        KindForStatement [202, 350), i=59, next=0
          KindVariableDeclarationList [210, 224), i=60, next=65
            NodeList [218, 224), i=61, next=0
              KindVariableDeclaration [218, 224), i=62, next=0
                KindIdentifier "i" [218, 220), i=63, next=64
                KindNumericLiteral [222, 224), i=64, next=0
          KindBinaryExpression [225, 236), i=65, next=69
            KindIdentifier "i" [225, 231), i=66, next=67
            KindLessThanToken [231, 233), i=67, next=68
            KindNumericLiteral [233, 236), i=68, next=0
          KindBinaryExpression [237, 251), i=69, next=73
            KindIdentifier "i" [237, 243), i=70, next=71
            KindEqualsToken [243, 245), i=71, next=72
            KindIdentifier "iNext" [245, 251), i=72, next=0
          KindBlock [264, 350), i=73, next=0
            NodeList [266, 346), i=74, next=0
              KindIfStatement [266, 327), i=75, next=88
                KindBinaryExpression [275, 281), i=76, next=80
                  KindIdentifier "i" [275, 276), i=77, next=78
                  KindEqualsEqualsToken [276, 279), i=78, next=79
                  KindNumericLiteral [279, 281), i=79, next=0
                KindBlock [282, 327), i=80, next=0
                  NodeList [284, 321), i=81, next=0
                    KindExpressionStatement [284, 305), i=82, next=87
                      KindBinaryExpression [284, 304), i=83, next=0
                        KindIdentifier "iNext" [284, 296), i=84, next=85
                        KindEqualsToken [296, 298), i=85, next=86
                        KindStringLiteral "bad" [298, 304), i=86, next=0
                    KindContinueStatement [305, 321), i=87, next=0
              KindExpressionStatement [327, 346), i=88, next=0
                KindBinaryExpression [327, 345), i=89, next=0
                  KindIdentifier "iNext" [327, 337), i=90, next=91
                  KindEqualsToken [337, 339), i=91, next=92
                  KindBinaryExpression [339, 345), i=92, next=0
                    KindIdentifier "i" [339, 341), i=93, next=94
                    KindPlusToken [341, 343), i=94, next=95
                    KindNumericLiteral [343, 345), i=95, next=0
